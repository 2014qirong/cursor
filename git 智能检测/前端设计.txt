# 前端设计文档

## 一、整体架构与技术选型
- 框架：React（推荐）或 Vue
- 状态管理：Redux（React）/Pinia（Vue）
- UI组件库：Ant Design、Element Plus等
- 网络请求：Axios
- 可视化集成：Grafana（通过iframe或API集成）
- 认证与权限：JWT Token/Session

## 二、主要页面与功能模块
1. **登录/认证页**
   - 用户登录、权限校验
2. **变更列表页**
   - 展示所有捕获的GitHub变更记录
   - 支持筛选、搜索、分页
3. **变更详情页**
   - 展示单次变更的diff内容、AI风险分析结果、模型解释（LIME）
   - 展示风险等级、建议、决策结果
   - 支持人工审核操作（通过/驳回/补充说明）
4. **风险可视化页**
   - 嵌入Grafana仪表盘，展示风险趋势、统计、模型表现等
5. **通知与消息页**
   - 展示系统通知、钉钉推送记录等
6. **用户管理页**
   - 用户信息、权限分配、操作日志

## 三、与后端接口交互设计
- 采用RESTful API或GraphQL
- 主要接口示例：
  - `GET /api/changes`：获取变更列表
  - `GET /api/changes/{id}`：获取变更详情及AI分析结果
  - `POST /api/changes/{id}/review`：提交人工审核结果
  - `GET /api/notifications`：获取通知消息
  - `GET /api/user`、`POST /api/login`：用户信息与认证
- 数据格式：JSON
- 错误处理与权限校验

## 四、与Grafana集成方式
- 通过iframe嵌入Grafana仪表盘页面
- 或通过Grafana HTTP API获取可视化数据，自定义前端展示
- 支持单点登录（SSO）或Token集成

## 五、用户权限与交互流程
- 区分普通用户、审核员、管理员等角色
- 不同角色可访问页面和操作权限不同
- 审核流程：变更详情页发起审核，审核员操作，结果回写后端

---
如需进一步细化页面原型或接口文档，可补充说明。 