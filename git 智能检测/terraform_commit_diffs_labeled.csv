file,diff,add_lines,del_lines,file_count,has_cloud,label
terraform-providers_terraform-provider-alicloud_27259a8d0a0c76a4a1d768647dd088f65a5f32b0.diff,"diff --git a/alicloud/connectivity/client.go b/alicloud/connectivity/client.go
index 540ef533a049..96ddc4f37307 100644
--- a/alicloud/connectivity/client.go
+++ b/alicloud/connectivity/client.go
@@ -73,6 +73,7 @@ import (
 	""github.com/aliyun/alibaba-cloud-sdk-go/services/dcdn""
 	dms_enterprise ""github.com/aliyun/alibaba-cloud-sdk-go/services/dms-enterprise""
 	""github.com/aliyun/alibaba-cloud-sdk-go/services/eci""
+	""github.com/aliyun/alibaba-cloud-sdk-go/services/mse""
 	""github.com/aliyun/alibaba-cloud-sdk-go/services/oos""
 	""github.com/aliyun/alibaba-cloud-sdk-go/services/resourcemanager""
 )
@@ -153,6 +154,7 @@ type AliyunClient struct {
 	oosConn                      *oos.Client
 	nasConn                      *nas.Client
 	dcdnConn                     *dcdn.Client
+	mseConn                      *mse.Client
 }
 
 type ApiVersion string
@@ -1941,3 +1943,28 @@ func (client *AliyunClient) WithDcdnClient(do func(*dcdn.Client) (interface{}, e
 	}
 	return do(client.dcdnConn)
 }
+
+func (client *AliyunClient) WithMseClient(do func(*mse.Client) (interface{}, error)) (interface{}, error) {
+	if client.mseConn == nil {
+		endpoint := client.config.MseEndpoint
+		if endpoint == """" {
+			endpoint = loadEndpoint(client.config.RegionId, MseCode)
+		}
+		if strings.HasPrefix(endpoint, ""http"") {
+			endpoint = fmt.Sprintf(""https://%s"", strings.TrimPrefix(endpoint, ""http://""))
+		}
+		if endpoint != """" {
+			endpoints.AddEndpointMapping(client.config.RegionId, string(MseCode), endpoint)
+		}
+
+		mseConn, err := mse.NewClientWithOptions(client.config.RegionId, client.getSdkConfig(), client.config.getAuthCredential(true))
+		if err != nil {
+			return nil, fmt.Errorf(""unable to initialize the Mseclient: %#v"", err)
+		}
+		mseConn.AppendUserAgent(Terraform, terraformVersion)
+		mseConn.AppendUserAgent(Provider, providerVersion)
+		mseConn.AppendUserAgent(Module, client.config.ConfigurationSource)
+		client.mseConn = mseConn
+	}
+	return do(client.mseConn)
+}
diff --git a/alicloud/connectivity/config.go b/alicloud/connectivity/config.go
index 6f50e6004f5a..4fa701c5c71a 100644
--- a/alicloud/connectivity/config.go
+++ b/alicloud/connectivity/config.go
@@ -91,6 +91,7 @@ type Config struct {
 	EciEndpoint             string
 	OosEndpoint             string
 	DcdnEndpoint            string
+	MseEndpoint             string
 }
 
 func (c *Config) loadAndValidate() error {
diff --git a/alicloud/connectivity/endpoint.go b/alicloud/connectivity/endpoint.go
index 38709d350ad7..434ffa891153 100644
--- a/alicloud/connectivity/endpoint.go
+++ b/alicloud/connectivity/endpoint.go
@@ -13,6 +13,7 @@ type ServiceCode string
 
 const (
 	DcdnCode            = ServiceCode(""DCDN"")
+	MseCode             = ServiceCode(""MSE"")
 	OosCode             = ServiceCode(""OOS"")
 	EcsCode             = ServiceCode(""ECS"")
 	NasCode             = ServiceCode(""NAS"")
diff --git a/alicloud/data_source_alicloud_mse_clusters.go b/alicloud/data_source_alicloud_mse_clusters.go
new file mode 100644
index 000000000000..e0e4bff17570
--- /dev/null
+++ b/alicloud/data_source_alicloud_mse_clusters.go
@@ -0,0 +1,344 @@
+package alicloud
+
+import (
+	""regexp""
+
+	""github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests""
+	""github.com/aliyun/alibaba-cloud-sdk-go/services/mse""
+	""github.com/aliyun/terraform-provider-alicloud/alicloud/connectivity""
+	""github.com/hashicorp/terraform-plugin-sdk/helper/schema""
+	""github.com/hashicorp/terraform-plugin-sdk/helper/validation""
+)
+
+func dataSourceAlicloudMseClusters() *schema.Resource {
+	return &schema.Resource{
+		Read: dataSourceAlicloudMseClustersRead,
+		Schema: map[string]*schema.Schema{
+			""name_regex"": {
+				Type:         schema.TypeString,
+				Optional:     true,
+				ValidateFunc: validation.ValidateRegexp,
+				ForceNew:     true,
+			},
+			""cluster_alias_name"": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			""names"": {
+				Type:     schema.TypeList,
+				Elem:     &schema.Schema{Type: schema.TypeString},
+				Computed: true,
+			},
+			""ids"": {
+				Type:     schema.TypeList,
+				Optional: true,
+				ForceNew: true,
+				Elem:     &schema.Schema{Type: schema.TypeString},
+				Computed: true,
+			},
+			""request_pars"": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			""status"": {
+				Type:         schema.TypeString,
+				Optional:     true,
+				ForceNew:     true,
+				ValidateFunc: validation.StringInSlice([]string{""DESTROY_FAILED"", ""DESTROY_ING"", ""DESTROY_SUCCESS"", ""INIT_FAILED"", ""INIT_ING"", ""INIT_SUCCESS"", ""INIT_TIME_OUT"", ""RESTART_FAILED"", ""RESTART_ING"", ""RESTART_SUCCESS"", ""SCALE_FAILED"", ""SCALE_ING"", ""SCALE_SUCCESS""}, false),
+			},
+			""output_file"": {
+				Type:     schema.TypeString,
+				Optional: true,
+			},
+			""clusters"": {
+				Type:     schema.TypeList,
+				Computed: true,
+				Elem: &schema.Resource{
+					Schema: map[string]*schema.Schema{
+						""acl_id"": {
+							Type:     schema.TypeString,
+							Computed: true,
+			",7510,101,101,1,高危
terraform-providers_terraform-provider-tencentcloud_4cb22039853065d73a46405c9d0a927f747b98e8.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 894695d13b..958922c1a0 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -8,6 +8,8 @@ ENHANCEMENTS:
 
 * Data Source: `tencentcloud_images` supports list of snapshots.
 * Resource: `tencentcloud_kubernetes_cluster_attachment` add new argument `worker_config` to support config with existing instances.
+* Resource: `tencentcloud_ccn` add new argument `tags` to support tags settings..
+* Resource `tencentcloud_cfs_file_system` add new argument `tags` to support tags settings.
 
 ## 1.38.2 (July 03, 2020)
 
diff --git a/tencentcloud/common.go b/tencentcloud/common.go
index 9c5179c9cd..1eb6aff0a3 100644
--- a/tencentcloud/common.go
+++ b/tencentcloud/common.go
@@ -191,7 +191,7 @@ func CheckNil(object interface{}, fields map[string]string) (nilFields []string)
 	return
 }
 
-// BuildTagResourceName builds the Tencent Clould specific name of a resource description.
+// BuildTagResourceName builds the Tencent Cloud specific name of a resource description.
 // The format is `qcs:project_id:service_type:region:account:resource`.
 // For more information, go to https://cloud.tencent.com/document/product/598/10606.
 func BuildTagResourceName(serviceType, resourceType, region, id string) string {
diff --git a/tencentcloud/data_source_tc_cfs_file_systems_test.go b/tencentcloud/data_source_tc_cfs_file_systems_test.go
index a98cc59a90..d1bf9e5ca2 100644
--- a/tencentcloud/data_source_tc_cfs_file_systems_test.go
+++ b/tencentcloud/data_source_tc_cfs_file_systems_test.go
@@ -44,7 +44,7 @@ resource ""tencentcloud_subnet"" ""subnet"" {
 }
 
 resource ""tencentcloud_cfs_access_group"" ""foo"" {
-  name = ""test_cfs_access_rule""
+	name = ""test_cfs_access_rule""
 }
 
 resource ""tencentcloud_cfs_file_system"" ""foo"" {
diff --git a/tencentcloud/resource_tc_as_scaling_group.go b/tencentcloud/resource_tc_as_scaling_group.go
index de8fa30823..47d14948b1 100644
--- a/tencentcloud/resource_tc_as_scaling_group.go
+++ b/tencentcloud/resource_tc_as_scaling_group.go
@@ -303,15 +303,6 @@ func resourceTencentCloudAsScalingGroupCreate(d *schema.ResourceData, meta inter
 		}
 	}
 
-	if tags := helper.GetTags(d, ""tags""); len(tags) > 0 {
-		for k, v := range tags {
-			request.Tags = append(request.Tags, &as.Tag{
-				Key:   helper.String(k),
-				Value: helper.String(v),
-			})
-		}
-	}
-
 	var id string
 	if err := resource.Retry(writeRetryTimeout, func() *resource.RetryError {
 		ratelimit.Check(request.GetAction())
@@ -357,6 +348,15 @@ func resourceTencentCloudAsScalingGroupCreate(d *schema.ResourceData, meta inter
 		return err
 	}
 
+	if tags := helper.GetTags(d, ""tags""); len(tags) > 0 {
+		tcClient := meta.(*TencentCloudClient).apiV3Conn
+		tagService := &TagService{client: tcClient}
+		resourceName := BuildTagResourceName(""as"", ""auto-scaling-group"", tcClient.Region, d.Id())
+		if err := tagService.ModifyTags(ctx, resourceName, tags, nil); err != nil {
+			return err
+		}
+	}
+
 	return resourceTencentCloudAsScalingGroupRead(d, meta)
 }
 
@@ -431,10 +431,13 @@ func resourceTencentCloudAsScalingGroupRead(d *schema.ResourceData, meta interfa
 		_ = d.Set(""forward_balancer_ids"", forwardLoadBalancers)
 	}
 
-	tags := make(map[string]string, len(scalingGroup.Tags))
-	for _, tag := range scalingGroup.Tags {
-		tags[*tag.Key] = *tag.Value
+	tcClient := meta.(*TencentCloudClient).apiV3Conn
+	tagService := &TagService{client: tcClient}
+	tags, err := tagService.DescribeResourceTags(ctx, ""as"", ""auto-scaling-group"", tcClient.Region, d.Id())
+	if err != nil {
+		return err
 	}
+
 	_ = d.Set(""tags"", tags)
 
 	return nil
@@ -606,14 +609,14 @@ func resourceTencentCloudAsScalingGroupUpdate(d *schema.ResourceData, meta inter
 	}
 
 	if d.HasChange(""tags"") {
-		oldTags, newTags := d.GetChange(""tags"")
-		replaceTags, deleteTags := diffTags(oldTags.(map[string]interface{}), newTags.(map[string]interface{}))
+		oldValue, newValue := d.GetChange(""tags"")
+		replaceTags, deleteTags := diffTags(oldValue.(map[string]interface{}), newValue.(map[string]interface{}))
 
-		resourceName := BuildTagResourceName(""as"", ""auto-scaling-group"", region, scalingGroupId)
-		if err := tagService.ModifyTags(ctx, resourceName, replaceTags, deleteTags); err != nil {
+		resourceName := BuildTagResourceName(""as"", ""auto-scaling-group"", region, d.Id())
+		err := tagService.ModifyTags(ctx, resourceName, replaceTags, deleteTags)
+		if err != nil {
 			return err
 		}
-
 		d.SetPartial(""tags"")
 	}
 
diff --git a/tencentcloud/resource_tc_cbs_storage.go b/tencentcloud/resource_tc_cbs_storage.go
index c16ebd0b9e..577e0406dc 100644
--- a/tencentcloud/resource_tc_cbs_storage.go
+++ b/tencentcloud/resource_tc_cbs_storage.go
@@ -173,18 +173,6 @@ func resourceTencentCloudCbsStorageCreate(d *schema.ResourceData, meta interface
 	if _, ok := d.GetOk(""encrypt""); ok {
 		request.Encrypt = helper.String(""ENCRYPT"")
 	}
-	if v, ok := d.GetOk(""tags""); ok {
-		tags := v.(map[string]interface{})
-		request.Tags = make([]*cbs.Tag, 0, len(tags))
-		for key, value := range tags ",281,103,17,1,高危
terraform-providers_terraform-provider-tencentcloud_2f8b97c8538683f49ca834a6485b2537318dd63d.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index a6004e0352..7c5e62463e 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,4 @@
+## 1.39.0 (Unreleased)
 ## 1.38.3 (July 13, 2020)
 
 ENHANCEMENTS:
",1,1,1,0,低危
terraform-providers_terraform-provider-aws_295037f1fbd163f187a3c3d057e58024a3093104.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 43730a327269..223486a98398 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,4 @@
-## 6.1.0 (Unreleased)
-## 5.99.0 (May 22, 2025)
+## 5.99.0 (Unreleased)
 
 FEATURES:
 
",1,3,1,0,低危
terraform-providers_terraform-provider-alicloud_8a979bb00582c5ed92c56cd4305b73c6bd64943a.diff,"diff --git a/website/docs/r/actiontrail.html.markdown b/website/docs/r/actiontrail.html.markdown
index 0e47681c7fad..3b6d35704fdc 100644
--- a/website/docs/r/actiontrail.html.markdown
+++ b/website/docs/r/actiontrail.html.markdown
@@ -20,8 +20,8 @@ Provides a new resource to manage [Action Trail](https://www.alibabacloud.com/he
 resource ""alicloud_actiontrail"" ""foo"" {
   name            = ""action-trail""
   event_rw        = ""Write-test""
-  oss_bucket_name = ""${alicloud_oss_bucket.bucket.id}""
-  role_name       = ""${alicloud_ram_role_policy_attachment.attach.role_name}""
+  oss_bucket_name = alicloud_oss_bucket.bucket.id
+  role_name       = alicloud_ram_role_policy_attachment.attach.role_name
   oss_key_prefix  = ""at-product-account-audit-B""
 }
 ```
diff --git a/website/docs/r/adb_account.html.markdown b/website/docs/r/adb_account.html.markdown
index abc8632568a1..b3f3d6240ab6 100644
--- a/website/docs/r/adb_account.html.markdown
+++ b/website/docs/r/adb_account.html.markdown
@@ -25,37 +25,37 @@ variable ""name"" {
 }
 
 data ""alicloud_zones"" ""default"" {
-  available_resource_creation = ""${var.creation}""
+  available_resource_creation = var.creation
 }
 
 resource ""alicloud_vpc"" ""default"" {
-  name       = ""${var.name}""
+  name       = var.name
   cidr_block = ""172.16.0.0/16""
 }
 
 resource ""alicloud_vswitch"" ""default"" {
-  vpc_id            = ""${alicloud_vpc.default.id}""
+  vpc_id            = alicloud_vpc.default.id
   cidr_block        = ""172.16.0.0/24""
-  availability_zone = ""${data.alicloud_zones.default.zones.0.id}""
-  name              = ""${var.name}""
+  availability_zone = data.alicloud_zones.default.zones[0].id
+  name              = var.name
 }
 
 resource ""alicloud_adb_cluster"" ""cluster"" {
-  db_cluster_version      = ""3.0""
-  db_cluster_category     = ""Cluster""
-  db_node_class           = ""C8""
-  db_node_count           = 2
-  db_node_storage         = 200
-  pay_type                = ""PostPaid""
-  vswitch_id              = ""${alicloud_vswitch.default.id}""
-  description             = ""${var.name}""
+  db_cluster_version  = ""3.0""
+  db_cluster_category = ""Cluster""
+  db_node_class       = ""C8""
+  db_node_count       = 2
+  db_node_storage     = 200
+  pay_type            = ""PostPaid""
+  vswitch_id          = alicloud_vswitch.default.id
+  description         = var.name
 }
 
 resource ""alicloud_adb_account"" ""account"" {
-  db_cluster_id         = ""${alicloud_adb_cluster.cluster.id}""
-  account_name          = ""tftestnormal""
-  account_password      = ""Test12345""
-  account_description   = ""${var.name}""
+  db_cluster_id       = alicloud_adb_cluster.cluster.id
+  account_name        = ""tftestnormal""
+  account_password    = ""Test12345""
+  account_description = var.name
 }
 ```
 
diff --git a/website/docs/r/adb_backup_policy.html.markdown b/website/docs/r/adb_backup_policy.html.markdown
index 3a199ff027b0..3d74bf87d77a 100644
--- a/website/docs/r/adb_backup_policy.html.markdown
+++ b/website/docs/r/adb_backup_policy.html.markdown
@@ -26,35 +26,34 @@ variable ""creation"" {
 }
 
 data ""alicloud_zones"" ""default"" {
-  available_resource_creation = ""${var.creation}""
+  available_resource_creation = var.creation
 }
 
 resource ""alicloud_vpc"" ""default"" {
-  name       = ""${var.name}""
+  name       = var.name
   cidr_block = ""172.16.0.0/16""
 }
 
 resource ""alicloud_vswitch"" ""default"" {
-  vpc_id            = ""${alicloud_vpc.default.id}""
+  vpc_id            = alicloud_vpc.default.id
   cidr_block        = ""172.16.0.0/24""
-  availability_zone = ""${data.alicloud_zones.default.zones.0.id}""
-  name              = ""${var.name}""
+  availability_zone = data.alicloud_zones.default.zones[0].id
+  name              = var.name
 }
 
 resource ""alicloud_adb_cluster"" ""default"" {
-  db_cluster_version      = ""3.0""
-  db_cluster_category     = ""Cluster""
-  db_node_class           = ""C8""
-  db_node_count           = 2
-  db_node_storage         = 200
-  pay_type                = ""PostPaid""
-  description             = ""${var.name}""
-  vswitch_id              = ""vsw-t4nq4tr8wcuj7397rbws2""
+  db_cluster_version  = ""3.0""
+  db_cluster_category = ""Cluster""
+  db_node_class       = ""C8""
+  db_node_count       = 2
+  db_node_storage     = 200
+  pay_type            = ""PostPaid""
+  description         = var.name
+  vswitch_id          = ""vsw-t4nq4tr8wcuj7397rbws2""
 }
 
-
 resource ""alicloud_adb_backup_policy"" ""policy"" {
-  db_cluster_id    = ""${alicloud_adb_cluster.default.id}""
+  db_cluster_id           = alicloud_adb_cluster.default.id
   preferred_backup_period = [""Tuesday"", ""Thursday"", ""Saturday""]
   preferred_backup_time   = ""10:00Z-11:00Z""
 }
diff --git a/website/docs/r/adb_cluster.html.markdown b/website/docs/r/adb_cluster.html.markdown
index eef215e7a397..bd44b850ea91 100644
--- a/website/docs/r/adb_cluster.html.markdown
+++ b/website/docs/r/adb_cluster.html.markdown
@@ -23,31 +23,36 @@ databases.
 variable ""name"" {
   default = ""adbClusterconfig""
 }
+
 variable ""creation"" {
   default = ""ADB""
 }
+
 data ""alicloud_zones"" ""defau",1452,1455,141,1,高危
terraform-providers_terraform-provider-tencentcloud_e6f26f807012cf5cd28e440e2e793d7c1d5326f4.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index a53bd55511..a6004e0352 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,4 @@
-## 1.38.3 (Unreleased)
+## 1.38.3 (July 13, 2020)
 
 ENHANCEMENTS:
 
",1,2,1,0,低危
terraform-providers_terraform-provider-alicloud_cf2ffdf543dfb91ea55b123446e20a7c7d1025ae.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index a1e14fe7fda5..19c79ec53060 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,34 @@
 ## 1.94.0 (Unreleased)
+
+- **New Resource:** `alicloud_dcdn_domain` [GH-2744]
+- **New Resource:** `alicloud_mse_cluster` [GH-2733]
+- **New Resource:** `alicloud_resource_manager_policy_attachment` [GH-2696]
+- **Data Source:** `alicloud_dcdn_domains` [GH-2744]
+- **Data Source:** `alicloud_mse_clusters` [GH-2733]
+- **Data Source:** `alicloud_resource_manager_policy_attachments` [GH-2696]
+
+IMPROVEMENTS:
+
+- Support allocate and release public connection for redis [GH-2748]
+- Support to set warn and info level alarm [GH-2743]
+- waf domain support setting resource_group_id and more attributes [GH-2740]
+- resource dnat supports ""import"" feature [GH-2735]
+- Add func sweep and Change testcase frequency [GH-2726]
+- Correct provider docs order [GH-2723]
+- Remove github.com/hashicorp/terraform import and use terraform-plugin-sdk instead [GH-2722]
+- Add test sweep for eci_image_cache [GH-2720]
+- modify alicloud_cen_instance_attachment [GH-2714]
+
+BUG FIXES:
+
+- fix the bug of create emr kafka cluster error [GH-2754]
+- fix common bandwidth package idempotent issue when Adding and Removeing instance [GH-2750]
+- fix website document error using `terraform` tag [GH-2749]
+- Fix registry rendering of page [GH-2747]
+- fix ci test website-test error [GH-2742]
+- fix datasource for ResourceManager for Policy Attachment [GH-2730]
+- fix_ecs_snapshot [GH-2709]
+
 ## 1.93.0 (August 12, 2020)
 
 - **New Resource:** `alicloud_oos_execution` ([#2679](https://github.com/aliyun/terraform-provider-alicloud/issues/2679))
diff --git a/alicloud/connectivity/client.go b/alicloud/connectivity/client.go
index 96ddc4f37307..6044ef0397c0 100644
--- a/alicloud/connectivity/client.go
+++ b/alicloud/connectivity/client.go
@@ -181,7 +181,7 @@ const Module = ""Terraform-Module""
 
 var goSdkMutex = sync.RWMutex{} // The Go SDK is not thread-safe
 // The main version number that is being run at the moment.
-var providerVersion = ""1.93.0""
+var providerVersion = ""1.94.0""
 var terraformVersion = strings.TrimSuffix(schema.Provider{}.TerraformVersion, ""-dev"")
 
 // Client for AliyunClient
",31,3,2,1,高危
terraform-providers_terraform-provider-alicloud_2fe8ffdb83e4b2b2e81f08014a259e1aff7bfdca.diff,"diff --git a/alicloud/resource_alicloud_emr_cluster.go b/alicloud/resource_alicloud_emr_cluster.go
index 4bec883ecb04..fb896758a674 100644
--- a/alicloud/resource_alicloud_emr_cluster.go
+++ b/alicloud/resource_alicloud_emr_cluster.go
@@ -244,7 +244,7 @@ func resourceAlicloudEmrClusterCreate(d *schema.ResourceData, meta interface{})
 		request.SecurityGroupId = securityGroupId.(string)
 	}
 
-	if publicIp, ok := d.GetOk(""is_open_public_ip""); ok {
+	if publicIp, ok := d.GetOkExists(""is_open_public_ip""); ok {
 		request.IsOpenPublicIp = requests.NewBoolean(publicIp.(bool))
 	}
 
@@ -252,7 +252,7 @@ func resourceAlicloudEmrClusterCreate(d *schema.ResourceData, meta interface{})
 		request.UserDefinedEmrEcsRole = userDefinedRole.(string)
 	}
 
-	if sshEnable, ok := d.GetOk(""ssh_enable""); ok {
+	if sshEnable, ok := d.GetOkExists(""ssh_enable""); ok {
 		request.SshEnable = requests.NewBoolean(sshEnable.(bool))
 	}
 
@@ -272,15 +272,15 @@ func resourceAlicloudEmrClusterCreate(d *schema.ResourceData, meta interface{})
 		request.DepositType = depositType.(string)
 	}
 
-	if ha, ok := d.GetOk(""high_availability_enable""); ok {
+	if ha, ok := d.GetOkExists(""high_availability_enable""); ok {
 		request.HighAvailabilityEnable = requests.NewBoolean(ha.(bool))
 	}
 
-	if eas, ok := d.GetOk(""eas_enable""); ok {
+	if eas, ok := d.GetOkExists(""eas_enable""); ok {
 		request.EasEnable = requests.NewBoolean(eas.(bool))
 	}
 
-	if localMeta, ok := d.GetOk(""use_local_metadb""); ok {
+	if localMeta, ok := d.GetOkExists(""use_local_metadb""); ok {
 		request.UseLocalMetaDb = requests.NewBoolean(localMeta.(bool))
 	}
 
@@ -327,6 +327,10 @@ func resourceAlicloudEmrClusterCreate(d *schema.ResourceData, meta interface{})
 			if v, ok := kv[""period""]; ok {
 				hostGroup.Period = strconv.Itoa(v.(int))
 			}
+			// PostPaid emr cluster, period must be null
+			if hostGroup.Period == ""0"" {
+				hostGroup.Period = ""null""
+			}
 
 			if v, ok := kv[""sys_disk_capacity""]; ok {
 				hostGroup.SysDiskCapacity = v.(string)
",9,6,1,1,高危
terraform-providers_terraform-provider-aws_89bcfe8f9e6767cb6f5ad50906c0da79da33d1c0.diff,"diff --git a/.changelog/42726.txt b/.changelog/42726.txt
new file mode 100644
index 000000000000..e2cb51068835
--- /dev/null
+++ b/.changelog/42726.txt
@@ -0,0 +1,3 @@
+```release-note:bug
+resource/aws_elasticache_replication_group: Fix crash during read operations where configuration endpoint and node groups are nil and empty, respectively
+```
diff --git a/internal/service/elasticache/replication_group.go b/internal/service/elasticache/replication_group.go
index 9a2e7e328cd6..a2ef372f2220 100644
--- a/internal/service/elasticache/replication_group.go
+++ b/internal/service/elasticache/replication_group.go
@@ -715,7 +715,7 @@ func resourceReplicationGroupRead(ctx context.Context, d *schema.ResourceData, m
 	if rgp.ConfigurationEndpoint != nil {
 		d.Set(names.AttrPort, rgp.ConfigurationEndpoint.Port)
 		d.Set(""configuration_endpoint_address"", rgp.ConfigurationEndpoint.Address)
-	} else {
+	} else if len(rgp.NodeGroups) > 0 {
 		log.Printf(""[DEBUG] ElastiCache Replication Group (%s) Configuration Endpoint is nil"", d.Id())
 
 		if rgp.NodeGroups[0].PrimaryEndpoint != nil {
",4,3,2,0,低危
terraform-providers_terraform-provider-alicloud_f4e9baeef0d9b23fb2fa8ef4cce6a36947b15c85.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 19c79ec53060..847726c2cfa2 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,33 +1,34 @@
-## 1.94.0 (Unreleased)
+## 1.95.0 (Unreleased)
+## 1.94.0 (August 24, 2020)
 
-- **New Resource:** `alicloud_dcdn_domain` [GH-2744]
-- **New Resource:** `alicloud_mse_cluster` [GH-2733]
-- **New Resource:** `alicloud_resource_manager_policy_attachment` [GH-2696]
-- **Data Source:** `alicloud_dcdn_domains` [GH-2744]
-- **Data Source:** `alicloud_mse_clusters` [GH-2733]
-- **Data Source:** `alicloud_resource_manager_policy_attachments` [GH-2696]
+- **New Resource:** `alicloud_dcdn_domain` ([#2744](https://github.com/aliyun/terraform-provider-alicloud/issues/2744))
+- **New Resource:** `alicloud_mse_cluster` ([#2733](https://github.com/aliyun/terraform-provider-alicloud/issues/2733))
+- **New Resource:** `alicloud_resource_manager_policy_attachment` ([#2696](https://github.com/aliyun/terraform-provider-alicloud/issues/2696))
+- **Data Source:** `alicloud_dcdn_domains` ([#2744](https://github.com/aliyun/terraform-provider-alicloud/issues/2744))
+- **Data Source:** `alicloud_mse_clusters` ([#2733](https://github.com/aliyun/terraform-provider-alicloud/issues/2733))
+- **Data Source:** `alicloud_resource_manager_policy_attachments` ([#2696](https://github.com/aliyun/terraform-provider-alicloud/issues/2696))
 
 IMPROVEMENTS:
 
-- Support allocate and release public connection for redis [GH-2748]
-- Support to set warn and info level alarm [GH-2743]
-- waf domain support setting resource_group_id and more attributes [GH-2740]
-- resource dnat supports ""import"" feature [GH-2735]
-- Add func sweep and Change testcase frequency [GH-2726]
-- Correct provider docs order [GH-2723]
-- Remove github.com/hashicorp/terraform import and use terraform-plugin-sdk instead [GH-2722]
-- Add test sweep for eci_image_cache [GH-2720]
-- modify alicloud_cen_instance_attachment [GH-2714]
+- Support allocate and release public connection for redis ([#2748](https://github.com/aliyun/terraform-provider-alicloud/issues/2748))
+- Support to set warn and info level alarm ([#2743](https://github.com/aliyun/terraform-provider-alicloud/issues/2743))
+- waf domain support setting resource_group_id and more attributes ([#2740](https://github.com/aliyun/terraform-provider-alicloud/issues/2740))
+- resource dnat supports ""import"" feature ([#2735](https://github.com/aliyun/terraform-provider-alicloud/issues/2735))
+- Add func sweep and Change testcase frequency ([#2726](https://github.com/aliyun/terraform-provider-alicloud/issues/2726))
+- Correct provider docs order ([#2723](https://github.com/aliyun/terraform-provider-alicloud/issues/2723))
+- Remove github.com/hashicorp/terraform import and use terraform-plugin-sdk instead ([#2722](https://github.com/aliyun/terraform-provider-alicloud/issues/2722))
+- Add test sweep for eci_image_cache ([#2720](https://github.com/aliyun/terraform-provider-alicloud/issues/2720))
+- modify alicloud_cen_instance_attachment ([#2714](https://github.com/aliyun/terraform-provider-alicloud/issues/2714))
 
 BUG FIXES:
 
-- fix the bug of create emr kafka cluster error [GH-2754]
-- fix common bandwidth package idempotent issue when Adding and Removeing instance [GH-2750]
-- fix website document error using `terraform` tag [GH-2749]
-- Fix registry rendering of page [GH-2747]
-- fix ci test website-test error [GH-2742]
-- fix datasource for ResourceManager for Policy Attachment [GH-2730]
-- fix_ecs_snapshot [GH-2709]
+- fix the bug of create emr kafka cluster error ([#2754](https://github.com/aliyun/terraform-provider-alicloud/issues/2754))
+- fix common bandwidth package idempotent issue when Adding and Removeing instance ([#2750](https://github.com/aliyun/terraform-provider-alicloud/issues/2750))
+- fix website document error using `terraform` tag ([#2749](https://github.com/aliyun/terraform-provider-alicloud/issues/2749))
+- Fix registry rendering of page ([#2747](https://github.com/aliyun/terraform-provider-alicloud/issues/2747))
+- fix ci test website-test error ([#2742](https://github.com/aliyun/terraform-provider-alicloud/issues/2742))
+- fix datasource for ResourceManager for Policy Attachment ([#2730](https://github.com/aliyun/terraform-provider-alicloud/issues/2730))
+- fix_ecs_snapshot ([#2709](https://github.com/aliyun/terraform-provider-alicloud/issues/2709))
 
 ## 1.93.0 (August 12, 2020)
 
",24,24,1,1,高危
terraform-providers_terraform-provider-tencentcloud_fdeaa47256cca0f6bdb1b23160b714ddec664c23.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 958922c1a0..6141c628bf 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -11,6 +11,11 @@ ENHANCEMENTS:
 * Resource: `tencentcloud_ccn` add new argument `tags` to support tags settings..
 * Resource `tencentcloud_cfs_file_system` add new argument `tags` to support tags settings.
 
+BUG FIXES:
+
+* Resource: `tencentcloud_gaap_layer4_listener` fix error InvalidParameter when destroy resource.
+* Resource: `tencentcloud_gaap_layer7_listener` fix error InvalidParameter when destroy resource.
+
 ## 1.38.2 (July 03, 2020)
 
 BUG FIXES:
diff --git a/tencentcloud/resource_tc_gaap_http_domain_test.go b/tencentcloud/resource_tc_gaap_http_domain_test.go
index dcc8bbe590..314957d2d0 100644
--- a/tencentcloud/resource_tc_gaap_http_domain_test.go
+++ b/tencentcloud/resource_tc_gaap_http_domain_test.go
@@ -504,7 +504,7 @@ resource tencentcloud_gaap_layer7_listener ""foo"" {
   port                        = 80
   proxy_id                    = ""%s""
   certificate_id              = tencentcloud_gaap_certificate.foo.id
-  client_certificate_ids = [tencentcloud_gaap_certificate.bar.id]
+  client_certificate_ids      = [tencentcloud_gaap_certificate.bar.id]
   forward_protocol            = ""HTTPS""
   auth_type                   = 1
 }
@@ -512,7 +512,7 @@ resource tencentcloud_gaap_layer7_listener ""foo"" {
 resource tencentcloud_gaap_http_domain ""foo"" {
   listener_id                 = tencentcloud_gaap_layer7_listener.foo.id
   domain                      = ""www.qq.com""
-  client_certificate_ids = [tencentcloud_gaap_certificate.client1.id]
+  client_certificate_ids      = [tencentcloud_gaap_certificate.client1.id]
 }
 
 `, ""<<EOF""+testAccGaapCertificateServerCert+""EOF"", ""<<EOF""+testAccGaapCertificateServerKey+""EOF"",
diff --git a/tencentcloud/resource_tc_gaap_layer4_listener_test.go b/tencentcloud/resource_tc_gaap_layer4_listener_test.go
index 6d5331e564..f362d66b30 100644
--- a/tencentcloud/resource_tc_gaap_layer4_listener_test.go
+++ b/tencentcloud/resource_tc_gaap_layer4_listener_test.go
@@ -8,6 +8,7 @@ import (
 
 	""github.com/hashicorp/terraform-plugin-sdk/helper/resource""
 	""github.com/hashicorp/terraform-plugin-sdk/terraform""
+	sdkErrors ""github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/errors""
 )
 
 func TestAccTencentCloudGaapLayer4Listener_basic(t *testing.T) {
@@ -291,6 +292,12 @@ func testAccCheckGaapLayer4ListenerDestroy(id *string, protocol string) resource
 		case ""TCP"":
 			listeners, err := service.DescribeTCPListeners(context.TODO(), nil, id, nil, nil)
 			if err != nil {
+				if sdkError, ok := err.(*sdkErrors.TencentCloudSDKError); ok {
+					if sdkError.Code == GAAPResourceNotFound || (sdkError.Code == ""InvalidParameter"" && sdkError.Message == ""ListenerId"") {
+						return nil
+					}
+				}
+
 				return err
 			}
 			if len(listeners) > 0 {
diff --git a/tencentcloud/resource_tc_gaap_layer7_listener_test.go b/tencentcloud/resource_tc_gaap_layer7_listener_test.go
index 83414cf0dc..477023c1c3 100644
--- a/tencentcloud/resource_tc_gaap_layer7_listener_test.go
+++ b/tencentcloud/resource_tc_gaap_layer7_listener_test.go
@@ -8,6 +8,7 @@ import (
 
 	""github.com/hashicorp/terraform-plugin-sdk/helper/resource""
 	""github.com/hashicorp/terraform-plugin-sdk/terraform""
+	sdkErrors ""github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/errors""
 )
 
 func TestAccTencentCloudGaapLayer7Listener_basic(t *testing.T) {
@@ -291,6 +292,12 @@ func testAccCheckGaapLayer7ListenerDestroy(id *string, protocol string) resource
 		case ""HTTP"":
 			listeners, err := service.DescribeHTTPListeners(context.TODO(), nil, id, nil, nil)
 			if err != nil {
+				if sdkError, ok := err.(*sdkErrors.TencentCloudSDKError); ok {
+					if sdkError.Code == GAAPResourceNotFound || (sdkError.Code == ""InvalidParameter"" && sdkError.Message == ""ListenerId"") {
+						return nil
+					}
+				}
+
 				return err
 			}
 			if len(listeners) > 0 {
@@ -300,6 +307,12 @@ func testAccCheckGaapLayer7ListenerDestroy(id *string, protocol string) resource
 		case ""HTTPS"":
 			listeners, err := service.DescribeHTTPSListeners(context.TODO(), nil, id, nil, nil)
 			if err != nil {
+				if sdkError, ok := err.(*sdkErrors.TencentCloudSDKError); ok {
+					if sdkError.Code == GAAPResourceNotFound || (sdkError.Code == ""InvalidParameter"" && sdkError.Message == ""ListenerId"") {
+						return nil
+					}
+				}
+
 				return err
 			}
 			if len(listeners) > 0 {
diff --git a/tencentcloud/service_tencentcloud_gaap.go b/tencentcloud/service_tencentcloud_gaap.go
index 7e34e91624..9254a79b5f 100644
--- a/tencentcloud/service_tencentcloud_gaap.go
+++ b/tencentcloud/service_tencentcloud_gaap.go
@@ -1012,6 +1012,12 @@ func (me *GaapService) DescribeTCPListeners(ctx context.Context, proxyId, listen
 			if err != nil {
 				count = 0
 
+				if sdkError, ok := err.(*sdkErrors.TencentCloudSDKError); ok {
+					if sdkError.Code == GAAPResourceNotFound || (sdkError.Code == ""InvalidParameter"" && sdkError.Message == ""ListenerId",79,9,5,1,高危
terraform-providers_terraform-provider-aws_8d6e0676982514e0547f60fc8b80907b8da7f940.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 223486a98398..43730a327269 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,5 @@
-## 5.99.0 (Unreleased)
+## 6.1.0 (Unreleased)
+## 5.99.0 (May 22, 2025)
 
 FEATURES:
 
",2,2,1,0,低危
terraform-providers_terraform-provider-aws_8f8b0cf9e3b108a5764e273c191417391e78d9df.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 43730a327269..223486a98398 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,4 @@
-## 6.1.0 (Unreleased)
-## 5.99.0 (May 22, 2025)
+## 5.99.0 (Unreleased)
 
 FEATURES:
 
",1,3,1,0,低危
terraform-providers_terraform-provider-tencentcloud_85bfeedef1d21cf8a58ca43a6bcf00fdd090fb05.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6141c628bf..a53bd55511 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,20 +1,17 @@
-## 1.39.0 (Unreleased)
-
-BUG FIXES:
-
-* Resource: `tencentcloud_cdn_domain` fix incorrect setting `server_certificate_config`,`client_certificate_config` caused the program to crash.
+## 1.38.3 (Unreleased)
 
 ENHANCEMENTS:
 
 * Data Source: `tencentcloud_images` supports list of snapshots.
 * Resource: `tencentcloud_kubernetes_cluster_attachment` add new argument `worker_config` to support config with existing instances.
-* Resource: `tencentcloud_ccn` add new argument `tags` to support tags settings..
-* Resource `tencentcloud_cfs_file_system` add new argument `tags` to support tags settings.
+* Resource: `tencentcloud_ccn` add new argument `tags` to support tags settings.
+* Resource: `tencentcloud_cfs_file_system` add new argument `tags` to support tags settings.
 
 BUG FIXES:
 
 * Resource: `tencentcloud_gaap_layer4_listener` fix error InvalidParameter when destroy resource.
 * Resource: `tencentcloud_gaap_layer7_listener` fix error InvalidParameter when destroy resource.
+* Resource: `tencentcloud_cdn_domain` fix incorrect setting `server_certificate_config`, `client_certificate_config` caused the program to crash.
 
 ## 1.38.2 (July 03, 2020)
 
",4,8,1,1,高危
terraform-providers_terraform-provider-aws_7f6d9f4b3e81d7c8dc931a03a642c8c2d95df050.diff,"diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6afa342934a0..223486a98398 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -8,10 +8,12 @@ FEATURES:
 ENHANCEMENTS:
 
 * data-source/aws_verifiedpermissions_policy_store: Add `tags` attribute. This functionality requires the `verifiedpermissions:ListTagsForResource` IAM permission ([#42663](https://github.com/hashicorp/terraform-provider-aws/issues/42663))
+* resource/aws_lb: Add `minimum_load_balancer_capacity` configuration block. This functionality requires the `elasticloadbalancing:DescribeCapacityReservations` and `elasticloadbalancing:ModifyCapacityReservation` IAM permissions ([#42685](https://github.com/hashicorp/terraform-provider-aws/issues/42685))
 * resource/aws_verifiedpermissions_policy_store: Add `tags` argument and `tags_all` attribute. This functionality requires the `verifiedpermissions:ListTagsForResource`, `verifiedpermissions:TagResource`, and `verifiedpermissions:UntagResource` IAM permissions ([#42663](https://github.com/hashicorp/terraform-provider-aws/issues/42663))
 
 BUG FIXES:
 
+* resource/aws_elasticache_replication_group: Fix crash during read operations where configuration endpoint and node groups are nil and empty, respectively ([#42726](https://github.com/hashicorp/terraform-provider-aws/issues/42726))
 * resource/aws_s3_bucket_lifecycle_configuration: No longer returns warning on empty `rule.filter`. ([#42624](https://github.com/hashicorp/terraform-provider-aws/issues/42624))
 
 ## 5.98.0 (May 15, 2025)
",2,1,1,1,高危
