diff --git a/alicloud/connectivity/client.go b/alicloud/connectivity/client.go
index 540ef533a049..96ddc4f37307 100644
--- a/alicloud/connectivity/client.go
+++ b/alicloud/connectivity/client.go
@@ -73,6 +73,7 @@ import (
 	"github.com/aliyun/alibaba-cloud-sdk-go/services/dcdn"
 	dms_enterprise "github.com/aliyun/alibaba-cloud-sdk-go/services/dms-enterprise"
 	"github.com/aliyun/alibaba-cloud-sdk-go/services/eci"
+	"github.com/aliyun/alibaba-cloud-sdk-go/services/mse"
 	"github.com/aliyun/alibaba-cloud-sdk-go/services/oos"
 	"github.com/aliyun/alibaba-cloud-sdk-go/services/resourcemanager"
 )
@@ -153,6 +154,7 @@ type AliyunClient struct {
 	oosConn                      *oos.Client
 	nasConn                      *nas.Client
 	dcdnConn                     *dcdn.Client
+	mseConn                      *mse.Client
 }
 
 type ApiVersion string
@@ -1941,3 +1943,28 @@ func (client *AliyunClient) WithDcdnClient(do func(*dcdn.Client) (interface{}, e
 	}
 	return do(client.dcdnConn)
 }
+
+func (client *AliyunClient) WithMseClient(do func(*mse.Client) (interface{}, error)) (interface{}, error) {
+	if client.mseConn == nil {
+		endpoint := client.config.MseEndpoint
+		if endpoint == "" {
+			endpoint = loadEndpoint(client.config.RegionId, MseCode)
+		}
+		if strings.HasPrefix(endpoint, "http") {
+			endpoint = fmt.Sprintf("https://%s", strings.TrimPrefix(endpoint, "http://"))
+		}
+		if endpoint != "" {
+			endpoints.AddEndpointMapping(client.config.RegionId, string(MseCode), endpoint)
+		}
+
+		mseConn, err := mse.NewClientWithOptions(client.config.RegionId, client.getSdkConfig(), client.config.getAuthCredential(true))
+		if err != nil {
+			return nil, fmt.Errorf("unable to initialize the Mseclient: %#v", err)
+		}
+		mseConn.AppendUserAgent(Terraform, terraformVersion)
+		mseConn.AppendUserAgent(Provider, providerVersion)
+		mseConn.AppendUserAgent(Module, client.config.ConfigurationSource)
+		client.mseConn = mseConn
+	}
+	return do(client.mseConn)
+}
diff --git a/alicloud/connectivity/config.go b/alicloud/connectivity/config.go
index 6f50e6004f5a..4fa701c5c71a 100644
--- a/alicloud/connectivity/config.go
+++ b/alicloud/connectivity/config.go
@@ -91,6 +91,7 @@ type Config struct {
 	EciEndpoint             string
 	OosEndpoint             string
 	DcdnEndpoint            string
+	MseEndpoint             string
 }
 
 func (c *Config) loadAndValidate() error {
diff --git a/alicloud/connectivity/endpoint.go b/alicloud/connectivity/endpoint.go
index 38709d350ad7..434ffa891153 100644
--- a/alicloud/connectivity/endpoint.go
+++ b/alicloud/connectivity/endpoint.go
@@ -13,6 +13,7 @@ type ServiceCode string
 
 const (
 	DcdnCode            = ServiceCode("DCDN")
+	MseCode             = ServiceCode("MSE")
 	OosCode             = ServiceCode("OOS")
 	EcsCode             = ServiceCode("ECS")
 	NasCode             = ServiceCode("NAS")
diff --git a/alicloud/data_source_alicloud_mse_clusters.go b/alicloud/data_source_alicloud_mse_clusters.go
new file mode 100644
index 000000000000..e0e4bff17570
--- /dev/null
+++ b/alicloud/data_source_alicloud_mse_clusters.go
@@ -0,0 +1,344 @@
+package alicloud
+
+import (
+	"regexp"
+
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/services/mse"
+	"github.com/aliyun/terraform-provider-alicloud/alicloud/connectivity"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/validation"
+)
+
+func dataSourceAlicloudMseClusters() *schema.Resource {
+	return &schema.Resource{
+		Read: dataSourceAlicloudMseClustersRead,
+		Schema: map[string]*schema.Schema{
+			"name_regex": {
+				Type:         schema.TypeString,
+				Optional:     true,
+				ValidateFunc: validation.ValidateRegexp,
+				ForceNew:     true,
+			},
+			"cluster_alias_name": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"names": {
+				Type:     schema.TypeList,
+				Elem:     &schema.Schema{Type: schema.TypeString},
+				Computed: true,
+			},
+			"ids": {
+				Type:     schema.TypeList,
+				Optional: true,
+				ForceNew: true,
+				Elem:     &schema.Schema{Type: schema.TypeString},
+				Computed: true,
+			},
+			"request_pars": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"status": {
+				Type:         schema.TypeString,
+				Optional:     true,
+				ForceNew:     true,
+				ValidateFunc: validation.StringInSlice([]string{"DESTROY_FAILED", "DESTROY_ING", "DESTROY_SUCCESS", "INIT_FAILED", "INIT_ING", "INIT_SUCCESS", "INIT_TIME_OUT", "RESTART_FAILED", "RESTART_ING", "RESTART_SUCCESS", "SCALE_FAILED", "SCALE_ING", "SCALE_SUCCESS"}, false),
+			},
+			"output_file": {
+				Type:     schema.TypeString,
+				Optional: true,
+			},
+			"clusters": {
+				Type:     schema.TypeList,
+				Computed: true,
+				Elem: &schema.Resource{
+					Schema: map[string]*schema.Schema{
+						"acl_id": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"app_version": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"cluster_id": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"cluster_name": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"cluster_type": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"cpu": {
+							Type:     schema.TypeInt,
+							Computed: true,
+						},
+						"health_status": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"init_cost_time": {
+							Type:     schema.TypeInt,
+							Computed: true,
+						},
+						"instance_count": {
+							Type:     schema.TypeInt,
+							Computed: true,
+						},
+						"id": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"instance_id": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"instance_models": {
+							Type:     schema.TypeList,
+							Computed: true,
+							Elem: &schema.Resource{
+								Schema: map[string]*schema.Schema{
+									"health_status": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"instance_type": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"internet_ip": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"ip": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"pod_name": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"role": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"single_tunnel_vip": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+									"vip": {
+										Type:     schema.TypeString,
+										Computed: true,
+									},
+								},
+							},
+						},
+						"internet_address": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"internet_domain": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"internet_port": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"intranet_address": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"intranet_domain": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"intranet_port": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"memory_capacity": {
+							Type:     schema.TypeInt,
+							Computed: true,
+						},
+						"pay_info": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"pub_network_flow": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+						"status": {
+							Type:     schema.TypeString,
+							Computed: true,
+						},
+					},
+				},
+			},
+			"enable_details": {
+				Type:     schema.TypeBool,
+				Optional: true,
+				Default:  false,
+			},
+		},
+	}
+}
+
+func dataSourceAlicloudMseClustersRead(d *schema.ResourceData, meta interface{}) error {
+	client := meta.(*connectivity.AliyunClient)
+
+	request := mse.CreateListClustersRequest()
+	if v, ok := d.GetOk("cluster_alias_name"); ok {
+		request.ClusterAliasName = v.(string)
+	}
+	request.RegionId = client.RegionId
+	if v, ok := d.GetOk("request_pars"); ok {
+		request.RequestPars = v.(string)
+	}
+	request.PageSize = requests.NewInteger(PageSizeLarge)
+	request.PageNum = requests.NewInteger(1)
+	var objects []mse.ClusterForListModel
+	var clusterNameRegex *regexp.Regexp
+	if v, ok := d.GetOk("name_regex"); ok {
+		r, err := regexp.Compile(v.(string))
+		if err != nil {
+			return WrapError(err)
+		}
+		clusterNameRegex = r
+	}
+
+	idsMap := make(map[string]string)
+	if v, ok := d.GetOk("ids"); ok {
+		for _, vv := range v.([]interface{}) {
+			idsMap[vv.(string)] = vv.(string)
+		}
+	}
+	status, statusOk := d.GetOk("status")
+	var response *mse.ListClustersResponse
+	for {
+		raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+			return mseClient.ListClusters(request)
+		})
+		if err != nil {
+			return WrapErrorf(err, DataDefaultErrorMsg, "alicloud_mse_clusters", request.GetActionName(), AlibabaCloudSdkGoERROR)
+		}
+		addDebug(request.GetActionName(), raw)
+		response, _ = raw.(*mse.ListClustersResponse)
+
+		for _, item := range response.Data {
+			if clusterNameRegex != nil {
+				if !clusterNameRegex.MatchString(item.ClusterAliasName) {
+					continue
+				}
+			}
+			if len(idsMap) > 0 {
+				if _, ok := idsMap[item.InstanceId]; !ok {
+					continue
+				}
+			}
+			if statusOk && status != "" && status != item.InitStatus {
+				continue
+			}
+			objects = append(objects, item)
+		}
+		if len(response.Data) < PageSizeLarge {
+			break
+		}
+
+		page, err := getNextpageNumber(request.PageNum)
+		if err != nil {
+			return WrapError(err)
+		}
+		request.PageNum = page
+	}
+	ids := make([]string, len(objects))
+	names := make([]string, len(objects))
+	s := make([]map[string]interface{}, len(objects))
+	for i, object := range objects {
+		mapping := map[string]interface{}{
+			"app_version":      object.AppVersion,
+			"cluster_id":       object.ClusterId,
+			"cluster_name":     object.ClusterAliasName,
+			"cluster_type":     object.ClusterType,
+			"id":               object.InstanceId,
+			"instance_id":      object.InstanceId,
+			"internet_address": object.InternetAddress,
+			"internet_domain":  object.InternetDomain,
+			"intranet_address": object.IntranetAddress,
+			"intranet_domain":  object.IntranetDomain,
+			"status":           object.InitStatus,
+		}
+		ids[i] = object.InstanceId
+		if detailedEnabled := d.Get("enable_details"); !detailedEnabled.(bool) {
+			names[i] = object.ClusterAliasName
+			s[i] = mapping
+			continue
+		}
+		request := mse.CreateQueryClusterDetailRequest()
+		request.RegionId = client.RegionId
+		request.InstanceId = object.InstanceId
+		raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+			return mseClient.QueryClusterDetail(request)
+		})
+		if err != nil {
+			return WrapErrorf(err, DataDefaultErrorMsg, "alicloud_mse_clusters", request.GetActionName(), AlibabaCloudSdkGoERROR)
+		}
+		addDebug(request.GetActionName(), raw, request.RpcRequest, request)
+		responseGet, _ := raw.(*mse.QueryClusterDetailResponse)
+		mapping["acl_id"] = responseGet.Data.AclId
+		mapping["cpu"] = responseGet.Data.Cpu
+		mapping["health_status"] = responseGet.Data.HealthStatus
+		mapping["init_cost_time"] = responseGet.Data.InitCostTime
+		mapping["instance_count"] = responseGet.Data.InstanceCount
+
+		instanceModels := make([]map[string]string, len(responseGet.Data.InstanceModels))
+		for i, v := range responseGet.Data.InstanceModels {
+			mapping1 := map[string]string{
+				"health_status":     v.HealthStatus,
+				"instance_type":     v.InstanceType,
+				"internet_ip":       v.InternetIp,
+				"ip":                v.Ip,
+				"pod_name":          v.PodName,
+				"role":              v.Role,
+				"single_tunnel_vip": v.SingleTunnelVip,
+				"vip":               v.Vip,
+			}
+			instanceModels[i] = mapping1
+		}
+		mapping["instance_models"] = instanceModels
+		mapping["internet_port"] = responseGet.Data.InternetPort
+		mapping["intranet_port"] = responseGet.Data.IntranetPort
+		mapping["memory_capacity"] = responseGet.Data.MemoryCapacity
+		mapping["pay_info"] = responseGet.Data.PayInfo
+		mapping["pub_network_flow"] = responseGet.Data.PubNetworkFlow
+		names[i] = object.ClusterAliasName
+		s[i] = mapping
+	}
+
+	d.SetId(dataResourceIdHash(ids))
+	if err := d.Set("ids", ids); err != nil {
+		return WrapError(err)
+	}
+
+	if err := d.Set("names", names); err != nil {
+		return WrapError(err)
+	}
+
+	if err := d.Set("clusters", s); err != nil {
+		return WrapError(err)
+	}
+	if output, ok := d.GetOk("output_file"); ok && output.(string) != "" {
+		writeToFile(output.(string), s)
+	}
+
+	return nil
+}
diff --git a/alicloud/data_source_alicloud_mse_clusters_test.go b/alicloud/data_source_alicloud_mse_clusters_test.go
new file mode 100644
index 000000000000..6d75170396b5
--- /dev/null
+++ b/alicloud/data_source_alicloud_mse_clusters_test.go
@@ -0,0 +1,134 @@
+package alicloud
+
+import (
+	"fmt"
+	"testing"
+
+	"github.com/hashicorp/terraform-plugin-sdk/helper/acctest"
+)
+
+func TestAccAlicloudMSEClustersDataSource(t *testing.T) {
+	resourceId := "data.alicloud_mse_clusters.default"
+	rand := acctest.RandIntRange(1000000, 9999999)
+	name := fmt.Sprintf("tf-testAccMseCluster-%d", rand)
+	testAccConfig := dataSourceTestAccConfigFunc(resourceId, name, dataSourceMseClustersDependence)
+
+	nameRegexConf := dataSourceTestAccConfig{
+		existConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"name_regex":     "${alicloud_mse_cluster.default.cluster_alias_name}",
+		}),
+		fakeConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"name_regex":     "${alicloud_mse_cluster.default.cluster_alias_name}-fake",
+		}),
+	}
+
+	idsConf := dataSourceTestAccConfig{
+		existConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"ids":            []string{"${alicloud_mse_cluster.default.id}"},
+		}),
+		fakeConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"ids":            []string{"${alicloud_mse_cluster.default.id}-fake"},
+		}),
+	}
+	statusConf := dataSourceTestAccConfig{
+		existConfig: testAccConfig(map[string]interface{}{
+			"ids":            []string{"${alicloud_mse_cluster.default.id}"},
+			"status":         "INIT_SUCCESS",
+			"enable_details": "true",
+		}),
+		fakeConfig: testAccConfig(map[string]interface{}{
+			"ids":            []string{"${alicloud_mse_cluster.default.id}"},
+			"status":         "DESTROY_FAILED",
+			"enable_details": "true",
+		}),
+	}
+	allConf := dataSourceTestAccConfig{
+		existConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"ids":            []string{"${alicloud_mse_cluster.default.id}"},
+			"status":         "INIT_SUCCESS",
+			"name_regex":     "${alicloud_mse_cluster.default.cluster_alias_name}",
+		}),
+		fakeConfig: testAccConfig(map[string]interface{}{
+			"enable_details": "true",
+			"ids":            []string{"${alicloud_mse_cluster.default.id}-fake"},
+			"status":         "INIT_SUCCESS",
+			"name_regex":     "${alicloud_mse_cluster.default.cluster_alias_name}",
+		}),
+	}
+	var existMseClusterMapFunc = func(rand int) map[string]string {
+		return map[string]string{
+			"ids.#":                       "1",
+			"ids.0":                       CHECKSET,
+			"names.#":                     "1",
+			"names.0":                     name,
+			"clusters.#":                  "1",
+			"clusters.0.app_version":      CHECKSET,
+			"clusters.0.cluster_name":     name,
+			"clusters.0.cluster_id":       CHECKSET,
+			"clusters.0.cluster_type":     "Eureka",
+			"clusters.0.id":               CHECKSET,
+			"clusters.0.instance_id":      CHECKSET,
+			"clusters.0.internet_address": CHECKSET,
+			"clusters.0.intranet_address": CHECKSET,
+			"clusters.0.internet_domain":  CHECKSET,
+			"clusters.0.intranet_domain":  CHECKSET,
+			"clusters.0.acl_id":           CHECKSET,
+			"clusters.0.health_status":    CHECKSET,
+			"clusters.0.init_cost_time":   CHECKSET,
+			"clusters.0.instance_count":   "1",
+			"clusters.0.internet_port":    CHECKSET,
+			"clusters.0.intranet_port":    CHECKSET,
+			"clusters.0.memory_capacity":  CHECKSET,
+			"clusters.0.pay_info":         "按量付费",
+			"clusters.0.pub_network_flow": "1",
+			"clusters.0.status":           "INIT_SUCCESS",
+			"clusters.0.cpu":              CHECKSET,
+		}
+	}
+
+	var fakeMseClusterMapFunc = func(rand int) map[string]string {
+		return map[string]string{
+			"ids.#":      "0",
+			"names.#":    "0",
+			"clusters.#": "0",
+		}
+	}
+
+	var mseClustersInfo = dataSourceAttr{
+		resourceId:   resourceId,
+		existMapFunc: existMseClusterMapFunc,
+		fakeMapFunc:  fakeMseClusterMapFunc,
+	}
+	preCheck := func() {
+		testAccPreCheckWithNoDefaultVpc(t)
+	}
+	mseClustersInfo.dataSourceTestCheckWithPreCheck(t, 0, preCheck, nameRegexConf, idsConf, statusConf, allConf)
+}
+
+func dataSourceMseClustersDependence(name string) string {
+	return fmt.Sprintf(`
+	data "alicloud_vpcs" "default" {
+	  is_default = true
+	}
+	data "alicloud_vswitches" "default" {
+	  vpc_id = data.alicloud_vpcs.default.ids.0
+	}
+	
+	resource "alicloud_mse_cluster" "default" {
+	  cluster_specification = "MSE_SC_1_2_200_c"
+	  cluster_type = "Eureka"
+	  cluster_version = "EUREKA_1_9_3"
+	  instance_count = 1
+	  net_type = "privatenet"
+	  vswitch_id = data.alicloud_vswitches.default.ids.0
+	  pub_network_flow = "1"
+	  acl_entry_list= ["127.0.0.1/32"]
+	  cluster_alias_name= "%s"
+	}
+	`, name)
+}
diff --git a/alicloud/provider.go b/alicloud/provider.go
index e61fedd6b39c..1a249565598b 100644
--- a/alicloud/provider.go
+++ b/alicloud/provider.go
@@ -306,6 +306,7 @@ func Provider() terraform.ResourceProvider {
 			"alicloud_oos_executions":                        dataSourceAlicloudOosExecutions(),
 			"alicloud_resource_manager_policy_attachments":   dataSourceAlicloudResourceManagerPolicyAttachments(),
 			"alicloud_dcdn_domains":                          dataSourceAlicloudDcdnDomains(),
+			"alicloud_mse_clusters":                          dataSourceAlicloudMseClusters(),
 		},
 		ResourcesMap: map[string]*schema.Resource{
 			"alicloud_instance":                           resourceAliyunInstance(),
@@ -554,6 +555,7 @@ func Provider() terraform.ResourceProvider {
 			"alicloud_oos_execution":                       resourceAlicloudOosExecution(),
 			"alicloud_resource_manager_policy_attachment":  resourceAlicloudResourceManagerPolicyAttachment(),
 			"alicloud_dcdn_domain":                         resourceAlicloudDcdnDomain(),
+			"alicloud_mse_cluster":                         resourceAlicloudMseCluster(),
 		},
 
 		ConfigureFunc: providerConfigure,
@@ -689,6 +691,7 @@ func providerConfigure(d *schema.ResourceData) (interface{}, error) {
 		config.EciEndpoint = strings.TrimSpace(endpoints["eci"].(string))
 		config.OosEndpoint = strings.TrimSpace(endpoints["oos"].(string))
 		config.DcdnEndpoint = strings.TrimSpace(endpoints["dcdn"].(string))
+		config.MseEndpoint = strings.TrimSpace(endpoints["mse"].(string))
 		if endpoint, ok := endpoints["alidns"]; ok {
 			config.AlidnsEndpoint = strings.TrimSpace(endpoint.(string))
 		} else {
@@ -873,6 +876,8 @@ func init() {
 		"oos_endpoint": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oos endpoints.",
 
 		"dcdn_endpoint": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dcdn endpoints.",
+
+		"mse_endpoint": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mse endpoints.",
 	}
 }
 
@@ -924,6 +929,13 @@ func endpointsSchema() *schema.Schema {
 					Description: descriptions["dcdn_endpoint"],
 				},
 
+				"mse": {
+					Type:        schema.TypeString,
+					Optional:    true,
+					Default:     "",
+					Description: descriptions["mse_endpoint"],
+				},
+
 				"oos": {
 					Type:        schema.TypeString,
 					Optional:    true,
@@ -1291,6 +1303,7 @@ func endpointsToHash(v interface{}) int {
 	buf.WriteString(fmt.Sprintf("%s-", m["eci"].(string)))
 	buf.WriteString(fmt.Sprintf("%s-", m["oos"].(string)))
 	buf.WriteString(fmt.Sprintf("%s-", m["dcdn"].(string)))
+	buf.WriteString(fmt.Sprintf("%s-", m["mse"].(string)))
 	return hashcode.String(buf.String())
 }
 
diff --git a/alicloud/resource_alicloud_mse_cluster.go b/alicloud/resource_alicloud_mse_cluster.go
new file mode 100644
index 000000000000..9980afeb80c1
--- /dev/null
+++ b/alicloud/resource_alicloud_mse_cluster.go
@@ -0,0 +1,232 @@
+package alicloud
+
+import (
+	"fmt"
+	"log"
+	"time"
+
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/services/mse"
+	"github.com/aliyun/terraform-provider-alicloud/alicloud/connectivity"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/validation"
+)
+
+func resourceAlicloudMseCluster() *schema.Resource {
+	return &schema.Resource{
+		Create: resourceAlicloudMseClusterCreate,
+		Read:   resourceAlicloudMseClusterRead,
+		Update: resourceAlicloudMseClusterUpdate,
+		Delete: resourceAlicloudMseClusterDelete,
+		Importer: &schema.ResourceImporter{
+			State: schema.ImportStatePassthrough,
+		},
+		Timeouts: &schema.ResourceTimeout{
+			Create: schema.DefaultTimeout(11 * time.Minute),
+			Delete: schema.DefaultTimeout(11 * time.Minute),
+		},
+		Schema: map[string]*schema.Schema{
+			"acl_entry_list": {
+				Type:     schema.TypeSet,
+				Optional: true,
+				Elem: &schema.Schema{
+					Type: schema.TypeString,
+				},
+			},
+			"cluster_alias_name": {
+				Type:     schema.TypeString,
+				Optional: true,
+			},
+			"cluster_specification": {
+				Type:         schema.TypeString,
+				Required:     true,
+				ForceNew:     true,
+				ValidateFunc: validation.StringInSlice([]string{"MSE_SC_1_2_200_c", "MSE_SC_2", "MSE_SC_4_8_200_c_4_200_c", "MSE_SC_8_16_200_c"}, false),
+			},
+			"cluster_type": {
+				Type:         schema.TypeString,
+				Required:     true,
+				ForceNew:     true,
+				ValidateFunc: validation.StringInSlice([]string{"Eureka", "Nacos-Ans", "ZooKeeper"}, false),
+			},
+			"cluster_version": {
+				Type:     schema.TypeString,
+				Required: true,
+				ForceNew: true,
+			},
+			"disk_type": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"instance_count": {
+				Type:     schema.TypeInt,
+				Required: true,
+				ForceNew: true,
+			},
+			"net_type": {
+				Type:         schema.TypeString,
+				Required:     true,
+				ForceNew:     true,
+				ValidateFunc: validation.StringInSlice([]string{"privatenet", "pubnet"}, false),
+			},
+			"private_slb_specification": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"pub_network_flow": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"pub_slb_specification": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+			"status": {
+				Type:     schema.TypeString,
+				Computed: true,
+			},
+			"vswitch_id": {
+				Type:     schema.TypeString,
+				Optional: true,
+				ForceNew: true,
+			},
+		},
+	}
+}
+
+func resourceAlicloudMseClusterCreate(d *schema.ResourceData, meta interface{}) error {
+	client := meta.(*connectivity.AliyunClient)
+	mseService := MseService{client}
+
+	request := mse.CreateCreateClusterRequest()
+	request.ClusterSpecification = d.Get("cluster_specification").(string)
+	request.ClusterType = d.Get("cluster_type").(string)
+	request.ClusterVersion = d.Get("cluster_version").(string)
+	if v, ok := d.GetOk("disk_type"); ok {
+		request.DiskType = v.(string)
+	}
+
+	request.InstanceCount = requests.NewInteger(d.Get("instance_count").(int))
+	request.NetType = d.Get("net_type").(string)
+	if v, ok := d.GetOk("private_slb_specification"); ok {
+		request.PrivateSlbSpecification = v.(string)
+	}
+
+	if v, ok := d.GetOk("pub_network_flow"); ok {
+		request.PubNetworkFlow = v.(string)
+	}
+
+	if v, ok := d.GetOk("pub_slb_specification"); ok {
+		request.PubSlbSpecification = v.(string)
+	}
+
+	request.Region = client.RegionId
+	if v, ok := d.GetOk("vswitch_id"); ok {
+		request.VSwitchId = v.(string)
+	}
+
+	vswitchId := Trim(d.Get("vswitch_id").(string))
+	if vswitchId != "" {
+		vpcService := VpcService{client}
+		vsw, err := vpcService.DescribeVSwitch(vswitchId)
+		if err != nil {
+			return WrapError(err)
+		}
+		request.VpcId = vsw.VpcId
+
+	}
+	raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+		return mseClient.CreateCluster(request)
+	})
+	if err != nil {
+		return WrapErrorf(err, DefaultErrorMsg, "alicloud_mse_cluster", request.GetActionName(), AlibabaCloudSdkGoERROR)
+	}
+	addDebug(request.GetActionName(), raw)
+	response, _ := raw.(*mse.CreateClusterResponse)
+	d.SetId(fmt.Sprintf("%v", response.InstanceId))
+	stateConf := BuildStateConf([]string{}, []string{"INIT_SUCCESS"}, d.Timeout(schema.TimeoutCreate), 60*time.Second, mseService.MseClusterStateRefreshFunc(d.Id(), []string{"INIT_FAILED"}))
+	if _, err := stateConf.WaitForState(); err != nil {
+		return WrapErrorf(err, IdMsg, d.Id())
+	}
+
+	return resourceAlicloudMseClusterUpdate(d, meta)
+}
+func resourceAlicloudMseClusterRead(d *schema.ResourceData, meta interface{}) error {
+	client := meta.(*connectivity.AliyunClient)
+	mseService := MseService{client}
+	object, err := mseService.DescribeMseCluster(d.Id())
+	if err != nil {
+		if NotFoundError(err) {
+			log.Printf("[DEBUG] Resource alicloud_mse_cluster mseService.DescribeMseCluster Failed!!! %s", err)
+			d.SetId("")
+			return nil
+		}
+		return WrapError(err)
+	}
+
+	d.Set("cluster_type", object.ClusterType)
+	d.Set("instance_count", object.InstanceCount)
+	d.Set("pub_network_flow", object.PubNetworkFlow)
+	d.Set("status", object.InitStatus)
+	return nil
+}
+func resourceAlicloudMseClusterUpdate(d *schema.ResourceData, meta interface{}) error {
+	client := meta.(*connectivity.AliyunClient)
+	d.Partial(true)
+
+	if d.HasChange("acl_entry_list") {
+		request := mse.CreateUpdateAclRequest()
+		request.InstanceId = d.Id()
+		request.AclEntryList = convertListToCommaSeparate(d.Get("acl_entry_list").(*schema.Set).List())
+
+		raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+			return mseClient.UpdateAcl(request)
+		})
+		addDebug(request.GetActionName(), raw)
+		if err != nil {
+			return WrapErrorf(err, DefaultErrorMsg, d.Id(), request.GetActionName(), AlibabaCloudSdkGoERROR)
+		}
+		d.SetPartial("acl_entry_list")
+	}
+	update := false
+	request := mse.CreateUpdateClusterRequest()
+	request.InstanceId = d.Id()
+	if d.HasChange("cluster_alias_name") {
+		update = true
+		request.ClusterAliasName = d.Get("cluster_alias_name").(string)
+	}
+	if update {
+		raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+			return mseClient.UpdateCluster(request)
+		})
+		addDebug(request.GetActionName(), raw)
+		if err != nil {
+			return WrapErrorf(err, DefaultErrorMsg, d.Id(), request.GetActionName(), AlibabaCloudSdkGoERROR)
+		}
+		d.SetPartial("cluster_alias_name")
+	}
+	d.Partial(false)
+	return resourceAlicloudMseClusterRead(d, meta)
+}
+func resourceAlicloudMseClusterDelete(d *schema.ResourceData, meta interface{}) error {
+	client := meta.(*connectivity.AliyunClient)
+	mseService := MseService{client}
+	request := mse.CreateDeleteClusterRequest()
+	request.InstanceId = d.Id()
+	raw, err := client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+		return mseClient.DeleteCluster(request)
+	})
+	addDebug(request.GetActionName(), raw)
+	if err != nil {
+		return WrapErrorf(err, DefaultErrorMsg, d.Id(), request.GetActionName(), AlibabaCloudSdkGoERROR)
+	}
+	stateConf := BuildStateConf([]string{}, []string{"DESTROY_SUCCESS"}, d.Timeout(schema.TimeoutDelete), 60*time.Second, mseService.MseClusterStateRefreshFunc(d.Id(), []string{"DESTROY_FAILED"}))
+	if _, err := stateConf.WaitForState(); err != nil {
+		return WrapErrorf(err, IdMsg, d.Id())
+	}
+	return nil
+}
diff --git a/alicloud/resource_alicloud_mse_cluster_test.go b/alicloud/resource_alicloud_mse_cluster_test.go
new file mode 100644
index 000000000000..aa979bf0ed53
--- /dev/null
+++ b/alicloud/resource_alicloud_mse_cluster_test.go
@@ -0,0 +1,180 @@
+package alicloud
+
+import (
+	"fmt"
+	"log"
+	"strings"
+	"testing"
+	"time"
+
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+
+	"github.com/aliyun/alibaba-cloud-sdk-go/services/mse"
+	"github.com/aliyun/terraform-provider-alicloud/alicloud/connectivity"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/acctest"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
+)
+
+func init() {
+	resource.AddTestSweepers("alicloud_mse_cluster", &resource.Sweeper{
+		Name: "alicloud_mse_cluster",
+		F:    testSweepMSECluster,
+	})
+}
+
+func testSweepMSECluster(region string) error {
+	rawClient, err := sharedClientForRegion(region)
+	if err != nil {
+		return fmt.Errorf("error getting Alicloud client: %s", err)
+	}
+	client := rawClient.(*connectivity.AliyunClient)
+
+	prefixes := []string{
+		"tf-testAcc",
+		"tf_testacc",
+	}
+
+	request := mse.CreateListClustersRequest()
+	request.PageSize = requests.NewInteger(PageSizeXLarge)
+	request.PageNum = requests.NewInteger(1)
+	raw, err := client.WithMseClient(func(MseClient *mse.Client) (interface{}, error) {
+		return MseClient.ListClusters(request)
+	})
+	if err != nil {
+		log.Printf("[ERROR] Error retrieving Mse Clusters: %s", WrapError(err))
+	}
+	response, _ := raw.(*mse.ListClustersResponse)
+
+	sweeped := false
+	for _, v := range response.Data {
+		id := v.InstanceId
+		name := v.ClusterAliasName
+		skip := true
+		for _, prefix := range prefixes {
+			if strings.HasPrefix(strings.ToLower(name), strings.ToLower(prefix)) {
+				skip = false
+				break
+			}
+		}
+		if skip {
+			log.Printf("[INFO] Skipping Mse Clusters: %s (%s)", name, id)
+			continue
+		}
+
+		sweeped = true
+		log.Printf("[INFO] Deleting Mse Clusters: %s (%s)", name, id)
+		req := mse.CreateDeleteClusterRequest()
+		req.InstanceId = id
+		_, err := client.WithMseClient(func(MseClient *mse.Client) (interface{}, error) {
+			return MseClient.DeleteCluster(req)
+		})
+		if err != nil {
+			log.Printf("[ERROR] Failed to delete Mse Clusters (%s (%s)): %s", name, id, err)
+		}
+	}
+	if sweeped {
+		// Waiting 30 seconds to ensure these Mse Clusters have been deleted.
+		time.Sleep(30 * time.Second)
+	}
+	return nil
+}
+
+func TestAccAlicloudMSECluster_basic(t *testing.T) {
+	var v mse.Data
+	resourceId := "alicloud_mse_cluster.default"
+	ra := resourceAttrInit(resourceId, MseClusterMap)
+	rc := resourceCheckInitWithDescribeMethod(resourceId, &v, func() interface{} {
+		return &MseService{testAccProvider.Meta().(*connectivity.AliyunClient)}
+	}, "DescribeMseCluster")
+	rac := resourceAttrCheckInit(rc, ra)
+	testAccCheck := rac.resourceAttrMapUpdateSet()
+	rand := acctest.RandIntRange(1000000, 9999999)
+	name := fmt.Sprintf("tf-testAccMseCluster%d", rand)
+	testAccConfig := resourceTestAccConfigFunc(resourceId, name, MseClusterBasicdependence)
+	resource.Test(t, resource.TestCase{
+		PreCheck: func() {
+			testAccPreCheck(t)
+			testAccPreCheckWithNoDefaultVpc(t)
+		},
+
+		IDRefreshName: resourceId,
+		Providers:     testAccProviders,
+		Steps: []resource.TestStep{
+			{
+				Config: testAccConfig(map[string]interface{}{
+					"cluster_specification": "MSE_SC_1_2_200_c",
+					"cluster_type":          "Eureka",
+					"cluster_version":       "EUREKA_1_9_3",
+					"instance_count":        "1",
+					"net_type":              "privatenet",
+					"vswitch_id":            "${data.alicloud_vswitches.default.ids.0}",
+					"pub_network_flow":      "1",
+					"cluster_alias_name":    "tf-mse",
+				}),
+				Check: resource.ComposeTestCheckFunc(
+					testAccCheck(map[string]string{
+						"cluster_specification": "MSE_SC_1_2_200_c",
+						"cluster_type":          "Eureka",
+						"cluster_version":       "EUREKA_1_9_3",
+						"instance_count":        "1",
+						"net_type":              "privatenet",
+						"vswitch_id":            CHECKSET,
+						"pub_network_flow":      "1",
+						"cluster_alias_name":    "tf-mse",
+					}),
+				),
+			},
+			{
+				ResourceName:            resourceId,
+				ImportState:             true,
+				ImportStateVerify:       true,
+				ImportStateVerifyIgnore: []string{"cluster_specification", "cluster_version", "net_type", "vswitch_id", "cluster_alias_name"},
+			},
+			{
+				Config: testAccConfig(map[string]interface{}{
+					"acl_entry_list": []string{"127.0.0.1/32"},
+				}),
+				Check: resource.ComposeTestCheckFunc(
+					testAccCheck(map[string]string{
+						"acl_entry_list.#": "1",
+					}),
+				),
+			},
+			{
+				Config: testAccConfig(map[string]interface{}{
+					"cluster_alias_name": name,
+				}),
+				Check: resource.ComposeTestCheckFunc(
+					testAccCheck(map[string]string{
+						"cluster_alias_name": name,
+					}),
+				),
+			},
+			{
+				Config: testAccConfig(map[string]interface{}{
+					"cluster_alias_name": name + "update",
+					"acl_entry_list":     []string{"127.0.0.1/10"},
+				}),
+				Check: resource.ComposeTestCheckFunc(
+					testAccCheck(map[string]string{
+						"cluster_alias_name": name + "update",
+						"acl_entry_list.#":   "1",
+					}),
+				),
+			},
+		},
+	})
+}
+
+var MseClusterMap = map[string]string{}
+
+func MseClusterBasicdependence(name string) string {
+	return fmt.Sprintf(`
+	data "alicloud_vpcs" "default" {
+	  is_default = true
+	}
+	data "alicloud_vswitches" "default" {
+	  vpc_id = data.alicloud_vpcs.default.ids.0
+	}
+`)
+}
diff --git a/alicloud/service_alicloud_mse.go b/alicloud/service_alicloud_mse.go
new file mode 100644
index 000000000000..dc03af618182
--- /dev/null
+++ b/alicloud/service_alicloud_mse.go
@@ -0,0 +1,53 @@
+package alicloud
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/services/mse"
+	"github.com/aliyun/terraform-provider-alicloud/alicloud/connectivity"
+	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
+)
+
+type MseService struct {
+	client *connectivity.AliyunClient
+}
+
+func (s *MseService) DescribeMseCluster(id string) (object mse.Data, err error) {
+	request := mse.CreateQueryClusterDetailRequest()
+	request.RegionId = s.client.RegionId
+
+	request.InstanceId = id
+
+	raw, err := s.client.WithMseClient(func(mseClient *mse.Client) (interface{}, error) {
+		return mseClient.QueryClusterDetail(request)
+	})
+	if err != nil {
+		if IsExpectedErrors(err, []string{"mse-200-021"}) {
+			err = WrapErrorf(Error(GetNotFoundMessage("MseCluster", id)), NotFoundMsg, ProviderERROR)
+			return
+		}
+		err = WrapErrorf(err, DefaultErrorMsg, id, request.GetActionName(), AlibabaCloudSdkGoERROR)
+		return
+	}
+	addDebug(request.GetActionName(), raw, request.RpcRequest, request)
+	response, _ := raw.(*mse.QueryClusterDetailResponse)
+	return response.Data, nil
+}
+
+func (s *MseService) MseClusterStateRefreshFunc(id string, failStates []string) resource.StateRefreshFunc {
+	return func() (interface{}, string, error) {
+		object, err := s.DescribeMseCluster(id)
+		if err != nil {
+			if NotFoundError(err) {
+				// Set this to nil as if we didn't find anything.
+				return nil, "", nil
+			}
+			return nil, "", WrapError(err)
+		}
+
+		for _, failState := range failStates {
+			if object.InitStatus == failState {
+				return object, object.InitStatus, WrapError(Error(FailedToReachTargetStatus, object.InitStatus))
+			}
+		}
+		return object, object.InitStatus, nil
+	}
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/client.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/client.go
new file mode 100644
index 000000000000..2d73569137b0
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/client.go
@@ -0,0 +1,129 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"reflect"
+
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/auth"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/credentials/provider"
+)
+
+// Client is the sdk client struct, each func corresponds to an OpenAPI
+type Client struct {
+	sdk.Client
+}
+
+// SetClientProperty Set Property by Reflect
+func SetClientProperty(client *Client, propertyName string, propertyValue interface{}) {
+	v := reflect.ValueOf(client).Elem()
+	if v.FieldByName(propertyName).IsValid() && v.FieldByName(propertyName).CanSet() {
+		v.FieldByName(propertyName).Set(reflect.ValueOf(propertyValue))
+	}
+}
+
+// SetEndpointDataToClient Set EndpointMap and ENdpointType
+func SetEndpointDataToClient(client *Client) {
+	SetClientProperty(client, "EndpointMap", GetEndpointMap())
+	SetClientProperty(client, "EndpointType", GetEndpointType())
+}
+
+// NewClient creates a sdk client with environment variables
+func NewClient() (client *Client, err error) {
+	client = &Client{}
+	err = client.Init()
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithProvider creates a sdk client with providers
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithProvider(regionId string, providers ...provider.Provider) (client *Client, err error) {
+	client = &Client{}
+	var pc provider.Provider
+	if len(providers) == 0 {
+		pc = provider.DefaultChain
+	} else {
+		pc = provider.NewProviderChain(providers)
+	}
+	err = client.InitWithProviderChain(regionId, pc)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithOptions creates a sdk client with regionId/sdkConfig/credential
+// this is the common api to create a sdk client
+func NewClientWithOptions(regionId string, config *sdk.Config, credential auth.Credential) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithOptions(regionId, config, credential)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithAccessKey is a shortcut to create sdk client with accesskey
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithAccessKey(regionId, accessKeyId, accessKeySecret string) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithAccessKey(regionId, accessKeyId, accessKeySecret)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithStsToken is a shortcut to create sdk client with sts token
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithStsToken(regionId, stsAccessKeyId, stsAccessKeySecret, stsToken string) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithStsToken(regionId, stsAccessKeyId, stsAccessKeySecret, stsToken)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithRamRoleArn is a shortcut to create sdk client with ram roleArn
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithRamRoleArn(regionId string, accessKeyId, accessKeySecret, roleArn, roleSessionName string) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithRamRoleArn(regionId, accessKeyId, accessKeySecret, roleArn, roleSessionName)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithRamRoleArn is a shortcut to create sdk client with ram roleArn and policy
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithRamRoleArnAndPolicy(regionId string, accessKeyId, accessKeySecret, roleArn, roleSessionName, policy string) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithRamRoleArnAndPolicy(regionId, accessKeyId, accessKeySecret, roleArn, roleSessionName, policy)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithEcsRamRole is a shortcut to create sdk client with ecs ram role
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithEcsRamRole(regionId string, roleName string) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithEcsRamRole(regionId, roleName)
+	SetEndpointDataToClient(client)
+	return
+}
+
+// NewClientWithRsaKeyPair is a shortcut to create sdk client with rsa key pair
+// usage: https://github.com/aliyun/alibaba-cloud-sdk-go/blob/master/docs/2-Client-EN.md
+func NewClientWithRsaKeyPair(regionId string, publicKeyId, privateKey string, sessionExpiration int) (client *Client, err error) {
+	client = &Client{}
+	err = client.InitWithRsaKeyPair(regionId, publicKeyId, privateKey, sessionExpiration)
+	SetEndpointDataToClient(client)
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_alarm_rule.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_alarm_rule.go
new file mode 100644
index 000000000000..576647a2c399
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_alarm_rule.go
@@ -0,0 +1,116 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// CreateAlarmRule invokes the mse.CreateAlarmRule API synchronously
+// api document: https://help.aliyun.com/api/mse/createalarmrule.html
+func (client *Client) CreateAlarmRule(request *CreateAlarmRuleRequest) (response *CreateAlarmRuleResponse, err error) {
+	response = CreateCreateAlarmRuleResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// CreateAlarmRuleWithChan invokes the mse.CreateAlarmRule API asynchronously
+// api document: https://help.aliyun.com/api/mse/createalarmrule.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateAlarmRuleWithChan(request *CreateAlarmRuleRequest) (<-chan *CreateAlarmRuleResponse, <-chan error) {
+	responseChan := make(chan *CreateAlarmRuleResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.CreateAlarmRule(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// CreateAlarmRuleWithCallback invokes the mse.CreateAlarmRule API asynchronously
+// api document: https://help.aliyun.com/api/mse/createalarmrule.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateAlarmRuleWithCallback(request *CreateAlarmRuleRequest, callback func(response *CreateAlarmRuleResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *CreateAlarmRuleResponse
+		var err error
+		defer close(result)
+		response, err = client.CreateAlarmRule(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// CreateAlarmRuleRequest is the request struct for api CreateAlarmRule
+type CreateAlarmRuleRequest struct {
+	*requests.RpcRequest
+	NValue          requests.Integer `position:"Query" name:"NValue"`
+	AlarmItem       string           `position:"Query" name:"AlarmItem"`
+	ClusterId       string           `position:"Query" name:"ClusterId"`
+	Operator        string           `position:"Query" name:"Operator"`
+	AlarmAliasName  string           `position:"Query" name:"AlarmAliasName"`
+	InstanceId      string           `position:"Query" name:"InstanceId"`
+	ContactGroupIds string           `position:"Query" name:"ContactGroupIds"`
+	AlertWay        string           `position:"Query" name:"AlertWay"`
+	Aggregates      string           `position:"Query" name:"Aggregates"`
+	Value           requests.Float   `position:"Query" name:"Value"`
+}
+
+// CreateAlarmRuleResponse is the response struct for api CreateAlarmRule
+type CreateAlarmRuleResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateCreateAlarmRuleRequest creates a request to invoke CreateAlarmRule API
+func CreateCreateAlarmRuleRequest() (request *CreateAlarmRuleRequest) {
+	request = &CreateAlarmRuleRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "CreateAlarmRule", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateCreateAlarmRuleResponse creates a response to parse from CreateAlarmRule response
+func CreateCreateAlarmRuleResponse() (response *CreateAlarmRuleResponse) {
+	response = &CreateAlarmRuleResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_cluster.go
new file mode 100644
index 000000000000..48c4c7412dc6
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_cluster.go
@@ -0,0 +1,120 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// CreateCluster invokes the mse.CreateCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/createcluster.html
+func (client *Client) CreateCluster(request *CreateClusterRequest) (response *CreateClusterResponse, err error) {
+	response = CreateCreateClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// CreateClusterWithChan invokes the mse.CreateCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/createcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateClusterWithChan(request *CreateClusterRequest) (<-chan *CreateClusterResponse, <-chan error) {
+	responseChan := make(chan *CreateClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.CreateCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// CreateClusterWithCallback invokes the mse.CreateCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/createcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateClusterWithCallback(request *CreateClusterRequest, callback func(response *CreateClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *CreateClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.CreateCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// CreateClusterRequest is the request struct for api CreateCluster
+type CreateClusterRequest struct {
+	*requests.RpcRequest
+	ClusterSpecification    string           `position:"Query" name:"ClusterSpecification"`
+	PubSlbSpecification     string           `position:"Query" name:"PubSlbSpecification"`
+	PrivateSlbSpecification string           `position:"Query" name:"PrivateSlbSpecification"`
+	InstanceCount           requests.Integer `position:"Query" name:"InstanceCount"`
+	ClusterVersion          string           `position:"Query" name:"ClusterVersion"`
+	DiskType                string           `position:"Query" name:"DiskType"`
+	VSwitchId               string           `position:"Query" name:"VSwitchId"`
+	ClusterType             string           `position:"Query" name:"ClusterType"`
+	PubNetworkFlow          string           `position:"Query" name:"PubNetworkFlow"`
+	VpcId                   string           `position:"Query" name:"VpcId"`
+	NetType                 string           `position:"Query" name:"NetType"`
+	Region                  string           `position:"Query" name:"Region"`
+}
+
+// CreateClusterResponse is the response struct for api CreateCluster
+type CreateClusterResponse struct {
+	*responses.BaseResponse
+	ErrorCode  string `json:"ErrorCode" xml:"ErrorCode"`
+	Message    string `json:"Message" xml:"Message"`
+	RequestId  string `json:"RequestId" xml:"RequestId"`
+	Success    bool   `json:"Success" xml:"Success"`
+	OrderId    string `json:"OrderId" xml:"OrderId"`
+	InstanceId string `json:"InstanceId" xml:"InstanceId"`
+}
+
+// CreateCreateClusterRequest creates a request to invoke CreateCluster API
+func CreateCreateClusterRequest() (request *CreateClusterRequest) {
+	request = &CreateClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "CreateCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateCreateClusterResponse creates a response to parse from CreateCluster response
+func CreateCreateClusterResponse() (response *CreateClusterResponse) {
+	response = &CreateClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_engine_namespace.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_engine_namespace.go
new file mode 100644
index 000000000000..8dd08195613e
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_engine_namespace.go
@@ -0,0 +1,113 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// CreateEngineNamespace invokes the mse.CreateEngineNamespace API synchronously
+// api document: https://help.aliyun.com/api/mse/createenginenamespace.html
+func (client *Client) CreateEngineNamespace(request *CreateEngineNamespaceRequest) (response *CreateEngineNamespaceResponse, err error) {
+	response = CreateCreateEngineNamespaceResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// CreateEngineNamespaceWithChan invokes the mse.CreateEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/createenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateEngineNamespaceWithChan(request *CreateEngineNamespaceRequest) (<-chan *CreateEngineNamespaceResponse, <-chan error) {
+	responseChan := make(chan *CreateEngineNamespaceResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.CreateEngineNamespace(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// CreateEngineNamespaceWithCallback invokes the mse.CreateEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/createenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateEngineNamespaceWithCallback(request *CreateEngineNamespaceRequest, callback func(response *CreateEngineNamespaceResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *CreateEngineNamespaceResponse
+		var err error
+		defer close(result)
+		response, err = client.CreateEngineNamespace(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// CreateEngineNamespaceRequest is the request struct for api CreateEngineNamespace
+type CreateEngineNamespaceRequest struct {
+	*requests.RpcRequest
+	ClusterId    string           `position:"Query" name:"ClusterId"`
+	InstanceId   string           `position:"Query" name:"InstanceId"`
+	ServiceCount requests.Integer `position:"Query" name:"ServiceCount"`
+	Name         string           `position:"Query" name:"Name"`
+	Desc         string           `position:"Query" name:"Desc"`
+}
+
+// CreateEngineNamespaceResponse is the response struct for api CreateEngineNamespace
+type CreateEngineNamespaceResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	ClusterId string `json:"ClusterId" xml:"ClusterId"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateCreateEngineNamespaceRequest creates a request to invoke CreateEngineNamespace API
+func CreateCreateEngineNamespaceRequest() (request *CreateEngineNamespaceRequest) {
+	request = &CreateEngineNamespaceRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "CreateEngineNamespace", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateCreateEngineNamespaceResponse creates a response to parse from CreateEngineNamespace response
+func CreateCreateEngineNamespaceResponse() (response *CreateEngineNamespaceResponse) {
+	response = &CreateEngineNamespaceResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_nacos_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_nacos_config.go
new file mode 100644
index 000000000000..5eba821d45f6
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_nacos_config.go
@@ -0,0 +1,117 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// CreateNacosConfig invokes the mse.CreateNacosConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/createnacosconfig.html
+func (client *Client) CreateNacosConfig(request *CreateNacosConfigRequest) (response *CreateNacosConfigResponse, err error) {
+	response = CreateCreateNacosConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// CreateNacosConfigWithChan invokes the mse.CreateNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/createnacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateNacosConfigWithChan(request *CreateNacosConfigRequest) (<-chan *CreateNacosConfigResponse, <-chan error) {
+	responseChan := make(chan *CreateNacosConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.CreateNacosConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// CreateNacosConfigWithCallback invokes the mse.CreateNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/createnacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateNacosConfigWithCallback(request *CreateNacosConfigRequest, callback func(response *CreateNacosConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *CreateNacosConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.CreateNacosConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// CreateNacosConfigRequest is the request struct for api CreateNacosConfig
+type CreateNacosConfigRequest struct {
+	*requests.RpcRequest
+	Type        string `position:"Query" name:"Type"`
+	Content     string `position:"Query" name:"Content"`
+	Tags        string `position:"Query" name:"Tags"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	AppName     string `position:"Query" name:"AppName"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Group       string `position:"Query" name:"Group"`
+	Desc        string `position:"Query" name:"Desc"`
+}
+
+// CreateNacosConfigResponse is the response struct for api CreateNacosConfig
+type CreateNacosConfigResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+	Code      string `json:"Code" xml:"Code"`
+}
+
+// CreateCreateNacosConfigRequest creates a request to invoke CreateNacosConfig API
+func CreateCreateNacosConfigRequest() (request *CreateNacosConfigRequest) {
+	request = &CreateNacosConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "CreateNacosConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateCreateNacosConfigResponse creates a response to parse from CreateNacosConfig response
+func CreateCreateNacosConfigResponse() (response *CreateNacosConfigResponse) {
+	response = &CreateNacosConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_znode.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_znode.go
new file mode 100644
index 000000000000..939011a779a1
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/create_znode.go
@@ -0,0 +1,111 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// CreateZnode invokes the mse.CreateZnode API synchronously
+// api document: https://help.aliyun.com/api/mse/createznode.html
+func (client *Client) CreateZnode(request *CreateZnodeRequest) (response *CreateZnodeResponse, err error) {
+	response = CreateCreateZnodeResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// CreateZnodeWithChan invokes the mse.CreateZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/createznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateZnodeWithChan(request *CreateZnodeRequest) (<-chan *CreateZnodeResponse, <-chan error) {
+	responseChan := make(chan *CreateZnodeResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.CreateZnode(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// CreateZnodeWithCallback invokes the mse.CreateZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/createznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) CreateZnodeWithCallback(request *CreateZnodeRequest, callback func(response *CreateZnodeResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *CreateZnodeResponse
+		var err error
+		defer close(result)
+		response, err = client.CreateZnode(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// CreateZnodeRequest is the request struct for api CreateZnode
+type CreateZnodeRequest struct {
+	*requests.RpcRequest
+	Data      string `position:"Query" name:"Data"`
+	ClusterId string `position:"Query" name:"ClusterId"`
+	Path      string `position:"Query" name:"Path"`
+}
+
+// CreateZnodeResponse is the response struct for api CreateZnode
+type CreateZnodeResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateCreateZnodeRequest creates a request to invoke CreateZnode API
+func CreateCreateZnodeRequest() (request *CreateZnodeRequest) {
+	request = &CreateZnodeRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "CreateZnode", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateCreateZnodeResponse creates a response to parse from CreateZnode response
+func CreateCreateZnodeResponse() (response *CreateZnodeResponse) {
+	response = &CreateZnodeResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_alarm_rule.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_alarm_rule.go
new file mode 100644
index 000000000000..d16eb175865e
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_alarm_rule.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteAlarmRule invokes the mse.DeleteAlarmRule API synchronously
+// api document: https://help.aliyun.com/api/mse/deletealarmrule.html
+func (client *Client) DeleteAlarmRule(request *DeleteAlarmRuleRequest) (response *DeleteAlarmRuleResponse, err error) {
+	response = CreateDeleteAlarmRuleResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteAlarmRuleWithChan invokes the mse.DeleteAlarmRule API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletealarmrule.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteAlarmRuleWithChan(request *DeleteAlarmRuleRequest) (<-chan *DeleteAlarmRuleResponse, <-chan error) {
+	responseChan := make(chan *DeleteAlarmRuleResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteAlarmRule(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteAlarmRuleWithCallback invokes the mse.DeleteAlarmRule API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletealarmrule.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteAlarmRuleWithCallback(request *DeleteAlarmRuleRequest, callback func(response *DeleteAlarmRuleResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteAlarmRuleResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteAlarmRule(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteAlarmRuleRequest is the request struct for api DeleteAlarmRule
+type DeleteAlarmRuleRequest struct {
+	*requests.RpcRequest
+	AlarmRuleId string `position:"Query" name:"AlarmRuleId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// DeleteAlarmRuleResponse is the response struct for api DeleteAlarmRule
+type DeleteAlarmRuleResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateDeleteAlarmRuleRequest creates a request to invoke DeleteAlarmRule API
+func CreateDeleteAlarmRuleRequest() (request *DeleteAlarmRuleRequest) {
+	request = &DeleteAlarmRuleRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteAlarmRule", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteAlarmRuleResponse creates a response to parse from DeleteAlarmRule response
+func CreateDeleteAlarmRuleResponse() (response *DeleteAlarmRuleResponse) {
+	response = &DeleteAlarmRuleResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_cluster.go
new file mode 100644
index 000000000000..383251f4e367
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_cluster.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteCluster invokes the mse.DeleteCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/deletecluster.html
+func (client *Client) DeleteCluster(request *DeleteClusterRequest) (response *DeleteClusterResponse, err error) {
+	response = CreateDeleteClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteClusterWithChan invokes the mse.DeleteCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteClusterWithChan(request *DeleteClusterRequest) (<-chan *DeleteClusterResponse, <-chan error) {
+	responseChan := make(chan *DeleteClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteClusterWithCallback invokes the mse.DeleteCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteClusterWithCallback(request *DeleteClusterRequest, callback func(response *DeleteClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteClusterRequest is the request struct for api DeleteCluster
+type DeleteClusterRequest struct {
+	*requests.RpcRequest
+	ClusterId  string `position:"Query" name:"ClusterId"`
+	InstanceId string `position:"Query" name:"InstanceId"`
+}
+
+// DeleteClusterResponse is the response struct for api DeleteCluster
+type DeleteClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateDeleteClusterRequest creates a request to invoke DeleteCluster API
+func CreateDeleteClusterRequest() (request *DeleteClusterRequest) {
+	request = &DeleteClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteClusterResponse creates a response to parse from DeleteCluster response
+func CreateDeleteClusterResponse() (response *DeleteClusterResponse) {
+	response = &DeleteClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_engine_namespace.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_engine_namespace.go
new file mode 100644
index 000000000000..edff02a9b09b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_engine_namespace.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteEngineNamespace invokes the mse.DeleteEngineNamespace API synchronously
+// api document: https://help.aliyun.com/api/mse/deleteenginenamespace.html
+func (client *Client) DeleteEngineNamespace(request *DeleteEngineNamespaceRequest) (response *DeleteEngineNamespaceResponse, err error) {
+	response = CreateDeleteEngineNamespaceResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteEngineNamespaceWithChan invokes the mse.DeleteEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/deleteenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteEngineNamespaceWithChan(request *DeleteEngineNamespaceRequest) (<-chan *DeleteEngineNamespaceResponse, <-chan error) {
+	responseChan := make(chan *DeleteEngineNamespaceResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteEngineNamespace(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteEngineNamespaceWithCallback invokes the mse.DeleteEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/deleteenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteEngineNamespaceWithCallback(request *DeleteEngineNamespaceRequest, callback func(response *DeleteEngineNamespaceResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteEngineNamespaceResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteEngineNamespace(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteEngineNamespaceRequest is the request struct for api DeleteEngineNamespace
+type DeleteEngineNamespaceRequest struct {
+	*requests.RpcRequest
+	ClusterId  string `position:"Query" name:"ClusterId"`
+	InstanceId string `position:"Query" name:"InstanceId"`
+	Id         string `position:"Query" name:"Id"`
+}
+
+// DeleteEngineNamespaceResponse is the response struct for api DeleteEngineNamespace
+type DeleteEngineNamespaceResponse struct {
+	*responses.BaseResponse
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateDeleteEngineNamespaceRequest creates a request to invoke DeleteEngineNamespace API
+func CreateDeleteEngineNamespaceRequest() (request *DeleteEngineNamespaceRequest) {
+	request = &DeleteEngineNamespaceRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteEngineNamespace", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteEngineNamespaceResponse creates a response to parse from DeleteEngineNamespace response
+func CreateDeleteEngineNamespaceResponse() (response *DeleteEngineNamespaceResponse) {
+	response = &DeleteEngineNamespaceResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_config.go
new file mode 100644
index 000000000000..1c2b3f95d6bb
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_config.go
@@ -0,0 +1,111 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteNacosConfig invokes the mse.DeleteNacosConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfig.html
+func (client *Client) DeleteNacosConfig(request *DeleteNacosConfigRequest) (response *DeleteNacosConfigResponse, err error) {
+	response = CreateDeleteNacosConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteNacosConfigWithChan invokes the mse.DeleteNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteNacosConfigWithChan(request *DeleteNacosConfigRequest) (<-chan *DeleteNacosConfigResponse, <-chan error) {
+	responseChan := make(chan *DeleteNacosConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteNacosConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteNacosConfigWithCallback invokes the mse.DeleteNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteNacosConfigWithCallback(request *DeleteNacosConfigRequest, callback func(response *DeleteNacosConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteNacosConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteNacosConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteNacosConfigRequest is the request struct for api DeleteNacosConfig
+type DeleteNacosConfigRequest struct {
+	*requests.RpcRequest
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Group       string `position:"Query" name:"Group"`
+}
+
+// DeleteNacosConfigResponse is the response struct for api DeleteNacosConfig
+type DeleteNacosConfigResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateDeleteNacosConfigRequest creates a request to invoke DeleteNacosConfig API
+func CreateDeleteNacosConfigRequest() (request *DeleteNacosConfigRequest) {
+	request = &DeleteNacosConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteNacosConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteNacosConfigResponse creates a response to parse from DeleteNacosConfig response
+func CreateDeleteNacosConfigResponse() (response *DeleteNacosConfigResponse) {
+	response = &DeleteNacosConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_configs.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_configs.go
new file mode 100644
index 000000000000..beb9e580ca9b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_nacos_configs.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteNacosConfigs invokes the mse.DeleteNacosConfigs API synchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfigs.html
+func (client *Client) DeleteNacosConfigs(request *DeleteNacosConfigsRequest) (response *DeleteNacosConfigsResponse, err error) {
+	response = CreateDeleteNacosConfigsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteNacosConfigsWithChan invokes the mse.DeleteNacosConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteNacosConfigsWithChan(request *DeleteNacosConfigsRequest) (<-chan *DeleteNacosConfigsResponse, <-chan error) {
+	responseChan := make(chan *DeleteNacosConfigsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteNacosConfigs(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteNacosConfigsWithCallback invokes the mse.DeleteNacosConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/deletenacosconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteNacosConfigsWithCallback(request *DeleteNacosConfigsRequest, callback func(response *DeleteNacosConfigsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteNacosConfigsResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteNacosConfigs(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteNacosConfigsRequest is the request struct for api DeleteNacosConfigs
+type DeleteNacosConfigsRequest struct {
+	*requests.RpcRequest
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Ids         string `position:"Query" name:"Ids"`
+}
+
+// DeleteNacosConfigsResponse is the response struct for api DeleteNacosConfigs
+type DeleteNacosConfigsResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateDeleteNacosConfigsRequest creates a request to invoke DeleteNacosConfigs API
+func CreateDeleteNacosConfigsRequest() (request *DeleteNacosConfigsRequest) {
+	request = &DeleteNacosConfigsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteNacosConfigs", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteNacosConfigsResponse creates a response to parse from DeleteNacosConfigs response
+func CreateDeleteNacosConfigsResponse() (response *DeleteNacosConfigsResponse) {
+	response = &DeleteNacosConfigsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_znode.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_znode.go
new file mode 100644
index 000000000000..a70d9ab78821
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/delete_znode.go
@@ -0,0 +1,111 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// DeleteZnode invokes the mse.DeleteZnode API synchronously
+// api document: https://help.aliyun.com/api/mse/deleteznode.html
+func (client *Client) DeleteZnode(request *DeleteZnodeRequest) (response *DeleteZnodeResponse, err error) {
+	response = CreateDeleteZnodeResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// DeleteZnodeWithChan invokes the mse.DeleteZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/deleteznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteZnodeWithChan(request *DeleteZnodeRequest) (<-chan *DeleteZnodeResponse, <-chan error) {
+	responseChan := make(chan *DeleteZnodeResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.DeleteZnode(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// DeleteZnodeWithCallback invokes the mse.DeleteZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/deleteznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) DeleteZnodeWithCallback(request *DeleteZnodeRequest, callback func(response *DeleteZnodeResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *DeleteZnodeResponse
+		var err error
+		defer close(result)
+		response, err = client.DeleteZnode(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// DeleteZnodeRequest is the request struct for api DeleteZnode
+type DeleteZnodeRequest struct {
+	*requests.RpcRequest
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	Path        string `position:"Query" name:"Path"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// DeleteZnodeResponse is the response struct for api DeleteZnode
+type DeleteZnodeResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateDeleteZnodeRequest creates a request to invoke DeleteZnode API
+func CreateDeleteZnodeRequest() (request *DeleteZnodeRequest) {
+	request = &DeleteZnodeRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "DeleteZnode", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateDeleteZnodeResponse creates a response to parse from DeleteZnode response
+func CreateDeleteZnodeResponse() (response *DeleteZnodeResponse) {
+	response = &DeleteZnodeResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/endpoint.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/endpoint.go
new file mode 100644
index 000000000000..2912d0fa9060
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/endpoint.go
@@ -0,0 +1,20 @@
+package mse
+
+// EndpointMap Endpoint Data
+var EndpointMap map[string]string
+
+// EndpointType regional or central
+var EndpointType = "regional"
+
+// GetEndpointMap Get Endpoint Data Map
+func GetEndpointMap() map[string]string {
+	if EndpointMap == nil {
+		EndpointMap = map[string]string{}
+	}
+	return EndpointMap
+}
+
+// GetEndpointType Get Endpoint Type Value
+func GetEndpointType() string {
+	return EndpointType
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_engine_namepace.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_engine_namepace.go
new file mode 100644
index 000000000000..9e351a1372fc
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_engine_namepace.go
@@ -0,0 +1,116 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// GetEngineNamepace invokes the mse.GetEngineNamepace API synchronously
+// api document: https://help.aliyun.com/api/mse/getenginenamepace.html
+func (client *Client) GetEngineNamepace(request *GetEngineNamepaceRequest) (response *GetEngineNamepaceResponse, err error) {
+	response = CreateGetEngineNamepaceResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// GetEngineNamepaceWithChan invokes the mse.GetEngineNamepace API asynchronously
+// api document: https://help.aliyun.com/api/mse/getenginenamepace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetEngineNamepaceWithChan(request *GetEngineNamepaceRequest) (<-chan *GetEngineNamepaceResponse, <-chan error) {
+	responseChan := make(chan *GetEngineNamepaceResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.GetEngineNamepace(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// GetEngineNamepaceWithCallback invokes the mse.GetEngineNamepace API asynchronously
+// api document: https://help.aliyun.com/api/mse/getenginenamepace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetEngineNamepaceWithCallback(request *GetEngineNamepaceRequest, callback func(response *GetEngineNamepaceResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *GetEngineNamepaceResponse
+		var err error
+		defer close(result)
+		response, err = client.GetEngineNamepace(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// GetEngineNamepaceRequest is the request struct for api GetEngineNamepace
+type GetEngineNamepaceRequest struct {
+	*requests.RpcRequest
+	ClusterId  string `position:"Query" name:"ClusterId"`
+	InstanceId string `position:"Query" name:"InstanceId"`
+	Id         string `position:"Query" name:"Id"`
+}
+
+// GetEngineNamepaceResponse is the response struct for api GetEngineNamepace
+type GetEngineNamepaceResponse struct {
+	*responses.BaseResponse
+	RequestId         string `json:"RequestId" xml:"RequestId"`
+	Success           bool   `json:"Success" xml:"Success"`
+	Message           string `json:"Message" xml:"Message"`
+	ErrorCode         string `json:"ErrorCode" xml:"ErrorCode"`
+	HttpCode          string `json:"HttpCode" xml:"HttpCode"`
+	Namespace         string `json:"Namespace" xml:"Namespace"`
+	NamespaceShowName string `json:"NamespaceShowName" xml:"NamespaceShowName"`
+	NamespaceDesc     string `json:"NamespaceDesc" xml:"NamespaceDesc"`
+	Quota             string `json:"Quota" xml:"Quota"`
+	ConfigCount       string `json:"ConfigCount" xml:"ConfigCount"`
+	Type              string `json:"Type" xml:"Type"`
+}
+
+// CreateGetEngineNamepaceRequest creates a request to invoke GetEngineNamepace API
+func CreateGetEngineNamepaceRequest() (request *GetEngineNamepaceRequest) {
+	request = &GetEngineNamepaceRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "GetEngineNamepace", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateGetEngineNamepaceResponse creates a response to parse from GetEngineNamepace response
+func CreateGetEngineNamepaceResponse() (response *GetEngineNamepaceResponse) {
+	response = &GetEngineNamepaceResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_config.go
new file mode 100644
index 000000000000..1fdeaa9c18df
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_config.go
@@ -0,0 +1,111 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// GetNacosConfig invokes the mse.GetNacosConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/getnacosconfig.html
+func (client *Client) GetNacosConfig(request *GetNacosConfigRequest) (response *GetNacosConfigResponse, err error) {
+	response = CreateGetNacosConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// GetNacosConfigWithChan invokes the mse.GetNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/getnacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetNacosConfigWithChan(request *GetNacosConfigRequest) (<-chan *GetNacosConfigResponse, <-chan error) {
+	responseChan := make(chan *GetNacosConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.GetNacosConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// GetNacosConfigWithCallback invokes the mse.GetNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/getnacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetNacosConfigWithCallback(request *GetNacosConfigRequest, callback func(response *GetNacosConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *GetNacosConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.GetNacosConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// GetNacosConfigRequest is the request struct for api GetNacosConfig
+type GetNacosConfigRequest struct {
+	*requests.RpcRequest
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Group       string `position:"Query" name:"Group"`
+}
+
+// GetNacosConfigResponse is the response struct for api GetNacosConfig
+type GetNacosConfigResponse struct {
+	*responses.BaseResponse
+	RequestId     string        `json:"RequestId" xml:"RequestId"`
+	Success       bool          `json:"Success" xml:"Success"`
+	Message       string        `json:"Message" xml:"Message"`
+	ErrorCode     string        `json:"ErrorCode" xml:"ErrorCode"`
+	Configuration Configuration `json:"Configuration" xml:"Configuration"`
+}
+
+// CreateGetNacosConfigRequest creates a request to invoke GetNacosConfig API
+func CreateGetNacosConfigRequest() (request *GetNacosConfigRequest) {
+	request = &GetNacosConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "GetNacosConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateGetNacosConfigResponse creates a response to parse from GetNacosConfig response
+func CreateGetNacosConfigResponse() (response *GetNacosConfigResponse) {
+	response = &GetNacosConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_history_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_history_config.go
new file mode 100644
index 000000000000..637d6cc171be
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/get_nacos_history_config.go
@@ -0,0 +1,112 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// GetNacosHistoryConfig invokes the mse.GetNacosHistoryConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/getnacoshistoryconfig.html
+func (client *Client) GetNacosHistoryConfig(request *GetNacosHistoryConfigRequest) (response *GetNacosHistoryConfigResponse, err error) {
+	response = CreateGetNacosHistoryConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// GetNacosHistoryConfigWithChan invokes the mse.GetNacosHistoryConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/getnacoshistoryconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetNacosHistoryConfigWithChan(request *GetNacosHistoryConfigRequest) (<-chan *GetNacosHistoryConfigResponse, <-chan error) {
+	responseChan := make(chan *GetNacosHistoryConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.GetNacosHistoryConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// GetNacosHistoryConfigWithCallback invokes the mse.GetNacosHistoryConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/getnacoshistoryconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) GetNacosHistoryConfigWithCallback(request *GetNacosHistoryConfigRequest, callback func(response *GetNacosHistoryConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *GetNacosHistoryConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.GetNacosHistoryConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// GetNacosHistoryConfigRequest is the request struct for api GetNacosHistoryConfig
+type GetNacosHistoryConfigRequest struct {
+	*requests.RpcRequest
+	Nid         string `position:"Query" name:"Nid"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Group       string `position:"Query" name:"Group"`
+}
+
+// GetNacosHistoryConfigResponse is the response struct for api GetNacosHistoryConfig
+type GetNacosHistoryConfigResponse struct {
+	*responses.BaseResponse
+	RequestId     string        `json:"RequestId" xml:"RequestId"`
+	Success       bool          `json:"Success" xml:"Success"`
+	Message       string        `json:"Message" xml:"Message"`
+	ErrorCode     string        `json:"ErrorCode" xml:"ErrorCode"`
+	Configuration Configuration `json:"Configuration" xml:"Configuration"`
+}
+
+// CreateGetNacosHistoryConfigRequest creates a request to invoke GetNacosHistoryConfig API
+func CreateGetNacosHistoryConfigRequest() (request *GetNacosHistoryConfigRequest) {
+	request = &GetNacosHistoryConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "GetNacosHistoryConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateGetNacosHistoryConfigResponse creates a response to parse from GetNacosHistoryConfig response
+func CreateGetNacosHistoryConfigResponse() (response *GetNacosHistoryConfigResponse) {
+	response = &GetNacosHistoryConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_contact_groups.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_contact_groups.go
new file mode 100644
index 000000000000..f78814cdd230
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_contact_groups.go
@@ -0,0 +1,114 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAlarmContactGroups invokes the mse.ListAlarmContactGroups API synchronously
+// api document: https://help.aliyun.com/api/mse/listalarmcontactgroups.html
+func (client *Client) ListAlarmContactGroups(request *ListAlarmContactGroupsRequest) (response *ListAlarmContactGroupsResponse, err error) {
+	response = CreateListAlarmContactGroupsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAlarmContactGroupsWithChan invokes the mse.ListAlarmContactGroups API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmcontactgroups.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmContactGroupsWithChan(request *ListAlarmContactGroupsRequest) (<-chan *ListAlarmContactGroupsResponse, <-chan error) {
+	responseChan := make(chan *ListAlarmContactGroupsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAlarmContactGroups(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAlarmContactGroupsWithCallback invokes the mse.ListAlarmContactGroups API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmcontactgroups.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmContactGroupsWithCallback(request *ListAlarmContactGroupsRequest, callback func(response *ListAlarmContactGroupsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAlarmContactGroupsResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAlarmContactGroups(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAlarmContactGroupsRequest is the request struct for api ListAlarmContactGroups
+type ListAlarmContactGroupsRequest struct {
+	*requests.RpcRequest
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+}
+
+// ListAlarmContactGroupsResponse is the response struct for api ListAlarmContactGroups
+type ListAlarmContactGroupsResponse struct {
+	*responses.BaseResponse
+	RequestId  string                   `json:"RequestId" xml:"RequestId"`
+	Success    bool                     `json:"Success" xml:"Success"`
+	Message    string                   `json:"Message" xml:"Message"`
+	ErrorCode  string                   `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int                      `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int                      `json:"PageSize" xml:"PageSize"`
+	TotalCount int                      `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string                   `json:"HttpCode" xml:"HttpCode"`
+	Data       []AlarmContactGroupModel `json:"Data" xml:"Data"`
+}
+
+// CreateListAlarmContactGroupsRequest creates a request to invoke ListAlarmContactGroups API
+func CreateListAlarmContactGroupsRequest() (request *ListAlarmContactGroupsRequest) {
+	request = &ListAlarmContactGroupsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAlarmContactGroups", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAlarmContactGroupsResponse creates a response to parse from ListAlarmContactGroups response
+func CreateListAlarmContactGroupsResponse() (response *ListAlarmContactGroupsResponse) {
+	response = &ListAlarmContactGroupsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_histories.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_histories.go
new file mode 100644
index 000000000000..3fc56a21451f
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_histories.go
@@ -0,0 +1,118 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAlarmHistories invokes the mse.ListAlarmHistories API synchronously
+// api document: https://help.aliyun.com/api/mse/listalarmhistories.html
+func (client *Client) ListAlarmHistories(request *ListAlarmHistoriesRequest) (response *ListAlarmHistoriesResponse, err error) {
+	response = CreateListAlarmHistoriesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAlarmHistoriesWithChan invokes the mse.ListAlarmHistories API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmhistories.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmHistoriesWithChan(request *ListAlarmHistoriesRequest) (<-chan *ListAlarmHistoriesResponse, <-chan error) {
+	responseChan := make(chan *ListAlarmHistoriesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAlarmHistories(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAlarmHistoriesWithCallback invokes the mse.ListAlarmHistories API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmhistories.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmHistoriesWithCallback(request *ListAlarmHistoriesRequest, callback func(response *ListAlarmHistoriesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAlarmHistoriesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAlarmHistories(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAlarmHistoriesRequest is the request struct for api ListAlarmHistories
+type ListAlarmHistoriesRequest struct {
+	*requests.RpcRequest
+	EndTime      requests.Integer `position:"Query" name:"EndTime"`
+	AlarmMseType string           `position:"Query" name:"AlarmMseType"`
+	StartTime    requests.Integer `position:"Query" name:"StartTime"`
+	PageNum      requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars  string           `position:"Query" name:"RequestPars"`
+	PageSize     requests.Integer `position:"Query" name:"PageSize"`
+	AlarmName    string           `position:"Query" name:"AlarmName"`
+}
+
+// ListAlarmHistoriesResponse is the response struct for api ListAlarmHistories
+type ListAlarmHistoriesResponse struct {
+	*responses.BaseResponse
+	RequestId  string              `json:"RequestId" xml:"RequestId"`
+	Success    bool                `json:"Success" xml:"Success"`
+	Message    string              `json:"Message" xml:"Message"`
+	ErrorCode  string              `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int                 `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int                 `json:"PageSize" xml:"PageSize"`
+	TotalCount int                 `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string              `json:"HttpCode" xml:"HttpCode"`
+	Data       []AlarmHistoryModel `json:"Data" xml:"Data"`
+}
+
+// CreateListAlarmHistoriesRequest creates a request to invoke ListAlarmHistories API
+func CreateListAlarmHistoriesRequest() (request *ListAlarmHistoriesRequest) {
+	request = &ListAlarmHistoriesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAlarmHistories", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAlarmHistoriesResponse creates a response to parse from ListAlarmHistories response
+func CreateListAlarmHistoriesResponse() (response *ListAlarmHistoriesResponse) {
+	response = &ListAlarmHistoriesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_items.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_items.go
new file mode 100644
index 000000000000..732e1e5a522e
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_items.go
@@ -0,0 +1,112 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAlarmItems invokes the mse.ListAlarmItems API synchronously
+// api document: https://help.aliyun.com/api/mse/listalarmitems.html
+func (client *Client) ListAlarmItems(request *ListAlarmItemsRequest) (response *ListAlarmItemsResponse, err error) {
+	response = CreateListAlarmItemsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAlarmItemsWithChan invokes the mse.ListAlarmItems API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmitems.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmItemsWithChan(request *ListAlarmItemsRequest) (<-chan *ListAlarmItemsResponse, <-chan error) {
+	responseChan := make(chan *ListAlarmItemsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAlarmItems(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAlarmItemsWithCallback invokes the mse.ListAlarmItems API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmitems.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmItemsWithCallback(request *ListAlarmItemsRequest, callback func(response *ListAlarmItemsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAlarmItemsResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAlarmItems(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAlarmItemsRequest is the request struct for api ListAlarmItems
+type ListAlarmItemsRequest struct {
+	*requests.RpcRequest
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// ListAlarmItemsResponse is the response struct for api ListAlarmItems
+type ListAlarmItemsResponse struct {
+	*responses.BaseResponse
+	RequestId  string      `json:"RequestId" xml:"RequestId"`
+	Success    bool        `json:"Success" xml:"Success"`
+	Message    string      `json:"Message" xml:"Message"`
+	ErrorCode  string      `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int         `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int         `json:"PageSize" xml:"PageSize"`
+	TotalCount int         `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string      `json:"HttpCode" xml:"HttpCode"`
+	Data       []AlarmItem `json:"Data" xml:"Data"`
+}
+
+// CreateListAlarmItemsRequest creates a request to invoke ListAlarmItems API
+func CreateListAlarmItemsRequest() (request *ListAlarmItemsRequest) {
+	request = &ListAlarmItemsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAlarmItems", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAlarmItemsResponse creates a response to parse from ListAlarmItems response
+func CreateListAlarmItemsResponse() (response *ListAlarmItemsResponse) {
+	response = &ListAlarmItemsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_rules.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_rules.go
new file mode 100644
index 000000000000..14b9335d1017
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_alarm_rules.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAlarmRules invokes the mse.ListAlarmRules API synchronously
+// api document: https://help.aliyun.com/api/mse/listalarmrules.html
+func (client *Client) ListAlarmRules(request *ListAlarmRulesRequest) (response *ListAlarmRulesResponse, err error) {
+	response = CreateListAlarmRulesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAlarmRulesWithChan invokes the mse.ListAlarmRules API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmrules.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmRulesWithChan(request *ListAlarmRulesRequest) (<-chan *ListAlarmRulesResponse, <-chan error) {
+	responseChan := make(chan *ListAlarmRulesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAlarmRules(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAlarmRulesWithCallback invokes the mse.ListAlarmRules API asynchronously
+// api document: https://help.aliyun.com/api/mse/listalarmrules.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAlarmRulesWithCallback(request *ListAlarmRulesRequest, callback func(response *ListAlarmRulesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAlarmRulesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAlarmRules(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAlarmRulesRequest is the request struct for api ListAlarmRules
+type ListAlarmRulesRequest struct {
+	*requests.RpcRequest
+	AlarmMseType string           `position:"Query" name:"AlarmMseType"`
+	PageNum      requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars  string           `position:"Query" name:"RequestPars"`
+	PageSize     requests.Integer `position:"Query" name:"PageSize"`
+}
+
+// ListAlarmRulesResponse is the response struct for api ListAlarmRules
+type ListAlarmRulesResponse struct {
+	*responses.BaseResponse
+	RequestId  string           `json:"RequestId" xml:"RequestId"`
+	Success    bool             `json:"Success" xml:"Success"`
+	Message    string           `json:"Message" xml:"Message"`
+	ErrorCode  string           `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int              `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int              `json:"PageSize" xml:"PageSize"`
+	TotalCount int              `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string           `json:"HttpCode" xml:"HttpCode"`
+	Data       []AlarmRuleModel `json:"Data" xml:"Data"`
+}
+
+// CreateListAlarmRulesRequest creates a request to invoke ListAlarmRules API
+func CreateListAlarmRulesRequest() (request *ListAlarmRulesRequest) {
+	request = &ListAlarmRulesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAlarmRules", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAlarmRulesResponse creates a response to parse from ListAlarmRules response
+func CreateListAlarmRulesResponse() (response *ListAlarmRulesResponse) {
+	response = &ListAlarmRulesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_instances.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_instances.go
new file mode 100644
index 000000000000..cb5b5a72bebe
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_instances.go
@@ -0,0 +1,119 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAnsInstances invokes the mse.ListAnsInstances API synchronously
+// api document: https://help.aliyun.com/api/mse/listansinstances.html
+func (client *Client) ListAnsInstances(request *ListAnsInstancesRequest) (response *ListAnsInstancesResponse, err error) {
+	response = CreateListAnsInstancesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAnsInstancesWithChan invokes the mse.ListAnsInstances API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansinstances.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsInstancesWithChan(request *ListAnsInstancesRequest) (<-chan *ListAnsInstancesResponse, <-chan error) {
+	responseChan := make(chan *ListAnsInstancesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAnsInstances(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAnsInstancesWithCallback invokes the mse.ListAnsInstances API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansinstances.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsInstancesWithCallback(request *ListAnsInstancesRequest, callback func(response *ListAnsInstancesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAnsInstancesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAnsInstances(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAnsInstancesRequest is the request struct for api ListAnsInstances
+type ListAnsInstancesRequest struct {
+	*requests.RpcRequest
+	ClusterName string           `position:"Query" name:"ClusterName"`
+	ClusterId   string           `position:"Query" name:"ClusterId"`
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	GroupName   string           `position:"Query" name:"GroupName"`
+	NamespaceId string           `position:"Query" name:"NamespaceId"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	ServiceName string           `position:"Query" name:"ServiceName"`
+}
+
+// ListAnsInstancesResponse is the response struct for api ListAnsInstances
+type ListAnsInstancesResponse struct {
+	*responses.BaseResponse
+	RequestId  string             `json:"RequestId" xml:"RequestId"`
+	Success    bool               `json:"Success" xml:"Success"`
+	Message    string             `json:"Message" xml:"Message"`
+	ErrorCode  string             `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int                `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int                `json:"PageSize" xml:"PageSize"`
+	TotalCount int                `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string             `json:"HttpCode" xml:"HttpCode"`
+	Data       []NacosAnsInstance `json:"Data" xml:"Data"`
+}
+
+// CreateListAnsInstancesRequest creates a request to invoke ListAnsInstances API
+func CreateListAnsInstancesRequest() (request *ListAnsInstancesRequest) {
+	request = &ListAnsInstancesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAnsInstances", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAnsInstancesResponse creates a response to parse from ListAnsInstances response
+func CreateListAnsInstancesResponse() (response *ListAnsInstancesResponse) {
+	response = &ListAnsInstancesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_service_clusters.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_service_clusters.go
new file mode 100644
index 000000000000..e1863b3acd3f
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_service_clusters.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAnsServiceClusters invokes the mse.ListAnsServiceClusters API synchronously
+// api document: https://help.aliyun.com/api/mse/listansserviceclusters.html
+func (client *Client) ListAnsServiceClusters(request *ListAnsServiceClustersRequest) (response *ListAnsServiceClustersResponse, err error) {
+	response = CreateListAnsServiceClustersResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAnsServiceClustersWithChan invokes the mse.ListAnsServiceClusters API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansserviceclusters.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsServiceClustersWithChan(request *ListAnsServiceClustersRequest) (<-chan *ListAnsServiceClustersResponse, <-chan error) {
+	responseChan := make(chan *ListAnsServiceClustersResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAnsServiceClusters(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAnsServiceClustersWithCallback invokes the mse.ListAnsServiceClusters API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansserviceclusters.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsServiceClustersWithCallback(request *ListAnsServiceClustersRequest, callback func(response *ListAnsServiceClustersResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAnsServiceClustersResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAnsServiceClusters(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAnsServiceClustersRequest is the request struct for api ListAnsServiceClusters
+type ListAnsServiceClustersRequest struct {
+	*requests.RpcRequest
+	ClusterName string           `position:"Query" name:"ClusterName"`
+	ClusterId   string           `position:"Query" name:"ClusterId"`
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	GroupName   string           `position:"Query" name:"GroupName"`
+	NamespaceId string           `position:"Query" name:"NamespaceId"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	ServiceName string           `position:"Query" name:"ServiceName"`
+}
+
+// ListAnsServiceClustersResponse is the response struct for api ListAnsServiceClusters
+type ListAnsServiceClustersResponse struct {
+	*responses.BaseResponse
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateListAnsServiceClustersRequest creates a request to invoke ListAnsServiceClusters API
+func CreateListAnsServiceClustersRequest() (request *ListAnsServiceClustersRequest) {
+	request = &ListAnsServiceClustersRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAnsServiceClusters", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAnsServiceClustersResponse creates a response to parse from ListAnsServiceClusters response
+func CreateListAnsServiceClustersResponse() (response *ListAnsServiceClustersResponse) {
+	response = &ListAnsServiceClustersResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_services.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_services.go
new file mode 100644
index 000000000000..de5b14e3e31f
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_ans_services.go
@@ -0,0 +1,118 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListAnsServices invokes the mse.ListAnsServices API synchronously
+// api document: https://help.aliyun.com/api/mse/listansservices.html
+func (client *Client) ListAnsServices(request *ListAnsServicesRequest) (response *ListAnsServicesResponse, err error) {
+	response = CreateListAnsServicesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListAnsServicesWithChan invokes the mse.ListAnsServices API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansservices.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsServicesWithChan(request *ListAnsServicesRequest) (<-chan *ListAnsServicesResponse, <-chan error) {
+	responseChan := make(chan *ListAnsServicesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListAnsServices(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListAnsServicesWithCallback invokes the mse.ListAnsServices API asynchronously
+// api document: https://help.aliyun.com/api/mse/listansservices.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListAnsServicesWithCallback(request *ListAnsServicesRequest, callback func(response *ListAnsServicesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListAnsServicesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListAnsServices(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListAnsServicesRequest is the request struct for api ListAnsServices
+type ListAnsServicesRequest struct {
+	*requests.RpcRequest
+	ClusterId   string           `position:"Query" name:"ClusterId"`
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	GroupName   string           `position:"Query" name:"GroupName"`
+	HasIpCount  string           `position:"Query" name:"HasIpCount"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	ServiceName string           `position:"Query" name:"ServiceName"`
+}
+
+// ListAnsServicesResponse is the response struct for api ListAnsServices
+type ListAnsServicesResponse struct {
+	*responses.BaseResponse
+	RequestId  string                  `json:"RequestId" xml:"RequestId"`
+	Success    bool                    `json:"Success" xml:"Success"`
+	Message    string                  `json:"Message" xml:"Message"`
+	ErrorCode  string                  `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int                     `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int                     `json:"PageSize" xml:"PageSize"`
+	TotalCount int                     `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string                  `json:"HttpCode" xml:"HttpCode"`
+	Data       []SimpleNacosAnsService `json:"Data" xml:"Data"`
+}
+
+// CreateListAnsServicesRequest creates a request to invoke ListAnsServices API
+func CreateListAnsServicesRequest() (request *ListAnsServicesRequest) {
+	request = &ListAnsServicesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListAnsServices", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListAnsServicesResponse creates a response to parse from ListAnsServices response
+func CreateListAnsServicesResponse() (response *ListAnsServicesResponse) {
+	response = &ListAnsServicesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_clusters.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_clusters.go
new file mode 100644
index 000000000000..d7742af99869
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_clusters.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListClusters invokes the mse.ListClusters API synchronously
+// api document: https://help.aliyun.com/api/mse/listclusters.html
+func (client *Client) ListClusters(request *ListClustersRequest) (response *ListClustersResponse, err error) {
+	response = CreateListClustersResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListClustersWithChan invokes the mse.ListClusters API asynchronously
+// api document: https://help.aliyun.com/api/mse/listclusters.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListClustersWithChan(request *ListClustersRequest) (<-chan *ListClustersResponse, <-chan error) {
+	responseChan := make(chan *ListClustersResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListClusters(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListClustersWithCallback invokes the mse.ListClusters API asynchronously
+// api document: https://help.aliyun.com/api/mse/listclusters.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListClustersWithCallback(request *ListClustersRequest, callback func(response *ListClustersResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListClustersResponse
+		var err error
+		defer close(result)
+		response, err = client.ListClusters(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListClustersRequest is the request struct for api ListClusters
+type ListClustersRequest struct {
+	*requests.RpcRequest
+	ClusterAliasName string           `position:"Query" name:"ClusterAliasName"`
+	PageNum          requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars      string           `position:"Query" name:"RequestPars"`
+	PageSize         requests.Integer `position:"Query" name:"PageSize"`
+}
+
+// ListClustersResponse is the response struct for api ListClusters
+type ListClustersResponse struct {
+	*responses.BaseResponse
+	RequestId  string                `json:"RequestId" xml:"RequestId"`
+	Success    bool                  `json:"Success" xml:"Success"`
+	Message    string                `json:"Message" xml:"Message"`
+	ErrorCode  string                `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int                   `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int                   `json:"PageSize" xml:"PageSize"`
+	TotalCount int                   `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string                `json:"HttpCode" xml:"HttpCode"`
+	Data       []ClusterForListModel `json:"Data" xml:"Data"`
+}
+
+// CreateListClustersRequest creates a request to invoke ListClusters API
+func CreateListClustersRequest() (request *ListClustersRequest) {
+	request = &ListClustersRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListClusters", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListClustersResponse creates a response to parse from ListClusters response
+func CreateListClustersResponse() (response *ListClustersResponse) {
+	response = &ListClustersResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_engine_namespaces.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_engine_namespaces.go
new file mode 100644
index 000000000000..4792f9cd4a85
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_engine_namespaces.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListEngineNamespaces invokes the mse.ListEngineNamespaces API synchronously
+// api document: https://help.aliyun.com/api/mse/listenginenamespaces.html
+func (client *Client) ListEngineNamespaces(request *ListEngineNamespacesRequest) (response *ListEngineNamespacesResponse, err error) {
+	response = CreateListEngineNamespacesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListEngineNamespacesWithChan invokes the mse.ListEngineNamespaces API asynchronously
+// api document: https://help.aliyun.com/api/mse/listenginenamespaces.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEngineNamespacesWithChan(request *ListEngineNamespacesRequest) (<-chan *ListEngineNamespacesResponse, <-chan error) {
+	responseChan := make(chan *ListEngineNamespacesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListEngineNamespaces(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListEngineNamespacesWithCallback invokes the mse.ListEngineNamespaces API asynchronously
+// api document: https://help.aliyun.com/api/mse/listenginenamespaces.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEngineNamespacesWithCallback(request *ListEngineNamespacesRequest, callback func(response *ListEngineNamespacesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListEngineNamespacesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListEngineNamespaces(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListEngineNamespacesRequest is the request struct for api ListEngineNamespaces
+type ListEngineNamespacesRequest struct {
+	*requests.RpcRequest
+	ClusterId  string           `position:"Query" name:"ClusterId"`
+	PageNum    requests.Integer `position:"Query" name:"PageNum"`
+	InstanceId string           `position:"Query" name:"InstanceId"`
+	PageSize   requests.Integer `position:"Query" name:"PageSize"`
+}
+
+// ListEngineNamespacesResponse is the response struct for api ListEngineNamespaces
+type ListEngineNamespacesResponse struct {
+	*responses.BaseResponse
+	RequestId  string      `json:"RequestId" xml:"RequestId"`
+	Success    bool        `json:"Success" xml:"Success"`
+	Message    string      `json:"Message" xml:"Message"`
+	ErrorCode  string      `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int         `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int         `json:"PageSize" xml:"PageSize"`
+	TotalCount int         `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string      `json:"HttpCode" xml:"HttpCode"`
+	Data       []Namespace `json:"Data" xml:"Data"`
+}
+
+// CreateListEngineNamespacesRequest creates a request to invoke ListEngineNamespaces API
+func CreateListEngineNamespacesRequest() (request *ListEngineNamespacesRequest) {
+	request = &ListEngineNamespacesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListEngineNamespaces", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListEngineNamespacesResponse creates a response to parse from ListEngineNamespaces response
+func CreateListEngineNamespacesResponse() (response *ListEngineNamespacesResponse) {
+	response = &ListEngineNamespacesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_instances.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_instances.go
new file mode 100644
index 000000000000..69d8187647b3
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_instances.go
@@ -0,0 +1,116 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListEurekaInstances invokes the mse.ListEurekaInstances API synchronously
+// api document: https://help.aliyun.com/api/mse/listeurekainstances.html
+func (client *Client) ListEurekaInstances(request *ListEurekaInstancesRequest) (response *ListEurekaInstancesResponse, err error) {
+	response = CreateListEurekaInstancesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListEurekaInstancesWithChan invokes the mse.ListEurekaInstances API asynchronously
+// api document: https://help.aliyun.com/api/mse/listeurekainstances.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEurekaInstancesWithChan(request *ListEurekaInstancesRequest) (<-chan *ListEurekaInstancesResponse, <-chan error) {
+	responseChan := make(chan *ListEurekaInstancesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListEurekaInstances(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListEurekaInstancesWithCallback invokes the mse.ListEurekaInstances API asynchronously
+// api document: https://help.aliyun.com/api/mse/listeurekainstances.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEurekaInstancesWithCallback(request *ListEurekaInstancesRequest, callback func(response *ListEurekaInstancesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListEurekaInstancesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListEurekaInstances(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListEurekaInstancesRequest is the request struct for api ListEurekaInstances
+type ListEurekaInstancesRequest struct {
+	*requests.RpcRequest
+	ClusterId   string           `position:"Query" name:"ClusterId"`
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	ServiceName string           `position:"Query" name:"ServiceName"`
+}
+
+// ListEurekaInstancesResponse is the response struct for api ListEurekaInstances
+type ListEurekaInstancesResponse struct {
+	*responses.BaseResponse
+	RequestId  string           `json:"RequestId" xml:"RequestId"`
+	Success    bool             `json:"Success" xml:"Success"`
+	Message    string           `json:"Message" xml:"Message"`
+	ErrorCode  string           `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int              `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int              `json:"PageSize" xml:"PageSize"`
+	TotalCount int              `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string           `json:"HttpCode" xml:"HttpCode"`
+	Data       []EurekaInstance `json:"Data" xml:"Data"`
+}
+
+// CreateListEurekaInstancesRequest creates a request to invoke ListEurekaInstances API
+func CreateListEurekaInstancesRequest() (request *ListEurekaInstancesRequest) {
+	request = &ListEurekaInstancesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListEurekaInstances", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListEurekaInstancesResponse creates a response to parse from ListEurekaInstances response
+func CreateListEurekaInstancesResponse() (response *ListEurekaInstancesResponse) {
+	response = &ListEurekaInstancesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_services.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_services.go
new file mode 100644
index 000000000000..4e005a3ec20e
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_eureka_services.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListEurekaServices invokes the mse.ListEurekaServices API synchronously
+// api document: https://help.aliyun.com/api/mse/listeurekaservices.html
+func (client *Client) ListEurekaServices(request *ListEurekaServicesRequest) (response *ListEurekaServicesResponse, err error) {
+	response = CreateListEurekaServicesResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListEurekaServicesWithChan invokes the mse.ListEurekaServices API asynchronously
+// api document: https://help.aliyun.com/api/mse/listeurekaservices.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEurekaServicesWithChan(request *ListEurekaServicesRequest) (<-chan *ListEurekaServicesResponse, <-chan error) {
+	responseChan := make(chan *ListEurekaServicesResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListEurekaServices(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListEurekaServicesWithCallback invokes the mse.ListEurekaServices API asynchronously
+// api document: https://help.aliyun.com/api/mse/listeurekaservices.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListEurekaServicesWithCallback(request *ListEurekaServicesRequest, callback func(response *ListEurekaServicesResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListEurekaServicesResponse
+		var err error
+		defer close(result)
+		response, err = client.ListEurekaServices(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListEurekaServicesRequest is the request struct for api ListEurekaServices
+type ListEurekaServicesRequest struct {
+	*requests.RpcRequest
+	ClusterId   string           `position:"Query" name:"ClusterId"`
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+}
+
+// ListEurekaServicesResponse is the response struct for api ListEurekaServices
+type ListEurekaServicesResponse struct {
+	*responses.BaseResponse
+	RequestId  string          `json:"RequestId" xml:"RequestId"`
+	Success    bool            `json:"Success" xml:"Success"`
+	Message    string          `json:"Message" xml:"Message"`
+	ErrorCode  string          `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int             `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int             `json:"PageSize" xml:"PageSize"`
+	TotalCount int             `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string          `json:"HttpCode" xml:"HttpCode"`
+	Data       []SimpleService `json:"Data" xml:"Data"`
+}
+
+// CreateListEurekaServicesRequest creates a request to invoke ListEurekaServices API
+func CreateListEurekaServicesRequest() (request *ListEurekaServicesRequest) {
+	request = &ListEurekaServicesRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListEurekaServices", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListEurekaServicesResponse creates a response to parse from ListEurekaServices response
+func CreateListEurekaServicesResponse() (response *ListEurekaServicesResponse) {
+	response = &ListEurekaServicesResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_config.go
new file mode 100644
index 000000000000..95e8562fb5db
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_config.go
@@ -0,0 +1,116 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListListenersByConfig invokes the mse.ListListenersByConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyconfig.html
+func (client *Client) ListListenersByConfig(request *ListListenersByConfigRequest) (response *ListListenersByConfigResponse, err error) {
+	response = CreateListListenersByConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListListenersByConfigWithChan invokes the mse.ListListenersByConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListListenersByConfigWithChan(request *ListListenersByConfigRequest) (<-chan *ListListenersByConfigResponse, <-chan error) {
+	responseChan := make(chan *ListListenersByConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListListenersByConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListListenersByConfigWithCallback invokes the mse.ListListenersByConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListListenersByConfigWithCallback(request *ListListenersByConfigRequest, callback func(response *ListListenersByConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListListenersByConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.ListListenersByConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListListenersByConfigRequest is the request struct for api ListListenersByConfig
+type ListListenersByConfigRequest struct {
+	*requests.RpcRequest
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+	Group       string `position:"Query" name:"Group"`
+}
+
+// ListListenersByConfigResponse is the response struct for api ListListenersByConfig
+type ListListenersByConfigResponse struct {
+	*responses.BaseResponse
+	RequestId  string     `json:"RequestId" xml:"RequestId"`
+	Success    bool       `json:"Success" xml:"Success"`
+	Message    string     `json:"Message" xml:"Message"`
+	ErrorCode  string     `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int        `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int        `json:"PageSize" xml:"PageSize"`
+	TotalCount int        `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string     `json:"HttpCode" xml:"HttpCode"`
+	Listeners  []Listener `json:"Listeners" xml:"Listeners"`
+}
+
+// CreateListListenersByConfigRequest creates a request to invoke ListListenersByConfig API
+func CreateListListenersByConfigRequest() (request *ListListenersByConfigRequest) {
+	request = &ListListenersByConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListListenersByConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateListListenersByConfigResponse creates a response to parse from ListListenersByConfig response
+func CreateListListenersByConfigResponse() (response *ListListenersByConfigResponse) {
+	response = &ListListenersByConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_ip.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_ip.go
new file mode 100644
index 000000000000..b791ec62277c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_listeners_by_ip.go
@@ -0,0 +1,115 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListListenersByIp invokes the mse.ListListenersByIp API synchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyip.html
+func (client *Client) ListListenersByIp(request *ListListenersByIpRequest) (response *ListListenersByIpResponse, err error) {
+	response = CreateListListenersByIpResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListListenersByIpWithChan invokes the mse.ListListenersByIp API asynchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyip.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListListenersByIpWithChan(request *ListListenersByIpRequest) (<-chan *ListListenersByIpResponse, <-chan error) {
+	responseChan := make(chan *ListListenersByIpResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListListenersByIp(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListListenersByIpWithCallback invokes the mse.ListListenersByIp API asynchronously
+// api document: https://help.aliyun.com/api/mse/listlistenersbyip.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListListenersByIpWithCallback(request *ListListenersByIpRequest, callback func(response *ListListenersByIpResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListListenersByIpResponse
+		var err error
+		defer close(result)
+		response, err = client.ListListenersByIp(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListListenersByIpRequest is the request struct for api ListListenersByIp
+type ListListenersByIpRequest struct {
+	*requests.RpcRequest
+	Ip          string `position:"Query" name:"Ip"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// ListListenersByIpResponse is the response struct for api ListListenersByIp
+type ListListenersByIpResponse struct {
+	*responses.BaseResponse
+	RequestId  string     `json:"RequestId" xml:"RequestId"`
+	Success    bool       `json:"Success" xml:"Success"`
+	Message    string     `json:"Message" xml:"Message"`
+	ErrorCode  string     `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber int        `json:"PageNumber" xml:"PageNumber"`
+	PageSize   int        `json:"PageSize" xml:"PageSize"`
+	TotalCount int        `json:"TotalCount" xml:"TotalCount"`
+	HttpCode   string     `json:"HttpCode" xml:"HttpCode"`
+	Listeners  []Listener `json:"Listeners" xml:"Listeners"`
+}
+
+// CreateListListenersByIpRequest creates a request to invoke ListListenersByIp API
+func CreateListListenersByIpRequest() (request *ListListenersByIpRequest) {
+	request = &ListListenersByIpRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListListenersByIp", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateListListenersByIpResponse creates a response to parse from ListListenersByIp response
+func CreateListListenersByIpResponse() (response *ListListenersByIpResponse) {
+	response = &ListListenersByIpResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_configs.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_configs.go
new file mode 100644
index 000000000000..807a94613266
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_configs.go
@@ -0,0 +1,120 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListNacosConfigs invokes the mse.ListNacosConfigs API synchronously
+// api document: https://help.aliyun.com/api/mse/listnacosconfigs.html
+func (client *Client) ListNacosConfigs(request *ListNacosConfigsRequest) (response *ListNacosConfigsResponse, err error) {
+	response = CreateListNacosConfigsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListNacosConfigsWithChan invokes the mse.ListNacosConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/listnacosconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListNacosConfigsWithChan(request *ListNacosConfigsRequest) (<-chan *ListNacosConfigsResponse, <-chan error) {
+	responseChan := make(chan *ListNacosConfigsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListNacosConfigs(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListNacosConfigsWithCallback invokes the mse.ListNacosConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/listnacosconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListNacosConfigsWithCallback(request *ListNacosConfigsRequest, callback func(response *ListNacosConfigsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListNacosConfigsResponse
+		var err error
+		defer close(result)
+		response, err = client.ListNacosConfigs(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListNacosConfigsRequest is the request struct for api ListNacosConfigs
+type ListNacosConfigsRequest struct {
+	*requests.RpcRequest
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	Tags        string           `position:"Query" name:"Tags"`
+	InstanceId  string           `position:"Query" name:"InstanceId"`
+	DataId      string           `position:"Query" name:"DataId"`
+	AppName     string           `position:"Query" name:"AppName"`
+	NamespaceId string           `position:"Query" name:"NamespaceId"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	Group       string           `position:"Query" name:"Group"`
+}
+
+// ListNacosConfigsResponse is the response struct for api ListNacosConfigs
+type ListNacosConfigsResponse struct {
+	*responses.BaseResponse
+	RequestId      string                    `json:"RequestId" xml:"RequestId"`
+	Success        bool                      `json:"Success" xml:"Success"`
+	Message        string                    `json:"Message" xml:"Message"`
+	ErrorCode      string                    `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber     int                       `json:"PageNumber" xml:"PageNumber"`
+	PageSize       int                       `json:"PageSize" xml:"PageSize"`
+	TotalCount     int                       `json:"TotalCount" xml:"TotalCount"`
+	HttpCode       string                    `json:"HttpCode" xml:"HttpCode"`
+	Configurations []NacosConfigForListModel `json:"Configurations" xml:"Configurations"`
+}
+
+// CreateListNacosConfigsRequest creates a request to invoke ListNacosConfigs API
+func CreateListNacosConfigsRequest() (request *ListNacosConfigsRequest) {
+	request = &ListNacosConfigsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListNacosConfigs", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateListNacosConfigsResponse creates a response to parse from ListNacosConfigs response
+func CreateListNacosConfigsResponse() (response *ListNacosConfigsResponse) {
+	response = &ListNacosConfigsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_history_configs.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_history_configs.go
new file mode 100644
index 000000000000..68e4083ecf5e
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_nacos_history_configs.go
@@ -0,0 +1,118 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListNacosHistoryConfigs invokes the mse.ListNacosHistoryConfigs API synchronously
+// api document: https://help.aliyun.com/api/mse/listnacoshistoryconfigs.html
+func (client *Client) ListNacosHistoryConfigs(request *ListNacosHistoryConfigsRequest) (response *ListNacosHistoryConfigsResponse, err error) {
+	response = CreateListNacosHistoryConfigsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListNacosHistoryConfigsWithChan invokes the mse.ListNacosHistoryConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/listnacoshistoryconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListNacosHistoryConfigsWithChan(request *ListNacosHistoryConfigsRequest) (<-chan *ListNacosHistoryConfigsResponse, <-chan error) {
+	responseChan := make(chan *ListNacosHistoryConfigsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListNacosHistoryConfigs(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListNacosHistoryConfigsWithCallback invokes the mse.ListNacosHistoryConfigs API asynchronously
+// api document: https://help.aliyun.com/api/mse/listnacoshistoryconfigs.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListNacosHistoryConfigsWithCallback(request *ListNacosHistoryConfigsRequest, callback func(response *ListNacosHistoryConfigsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListNacosHistoryConfigsResponse
+		var err error
+		defer close(result)
+		response, err = client.ListNacosHistoryConfigs(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListNacosHistoryConfigsRequest is the request struct for api ListNacosHistoryConfigs
+type ListNacosHistoryConfigsRequest struct {
+	*requests.RpcRequest
+	PageNum     requests.Integer `position:"Query" name:"PageNum"`
+	InstanceId  string           `position:"Query" name:"InstanceId"`
+	DataId      string           `position:"Query" name:"DataId"`
+	NamespaceId string           `position:"Query" name:"NamespaceId"`
+	RequestPars string           `position:"Query" name:"RequestPars"`
+	PageSize    requests.Integer `position:"Query" name:"PageSize"`
+	Group       string           `position:"Query" name:"Group"`
+}
+
+// ListNacosHistoryConfigsResponse is the response struct for api ListNacosHistoryConfigs
+type ListNacosHistoryConfigsResponse struct {
+	*responses.BaseResponse
+	RequestId    string        `json:"RequestId" xml:"RequestId"`
+	Success      bool          `json:"Success" xml:"Success"`
+	Message      string        `json:"Message" xml:"Message"`
+	ErrorCode    string        `json:"ErrorCode" xml:"ErrorCode"`
+	PageNumber   int           `json:"PageNumber" xml:"PageNumber"`
+	PageSize     int           `json:"PageSize" xml:"PageSize"`
+	TotalCount   int           `json:"TotalCount" xml:"TotalCount"`
+	HttpCode     string        `json:"HttpCode" xml:"HttpCode"`
+	HistoryItems []HistoryItem `json:"HistoryItems" xml:"HistoryItems"`
+}
+
+// CreateListNacosHistoryConfigsRequest creates a request to invoke ListNacosHistoryConfigs API
+func CreateListNacosHistoryConfigsRequest() (request *ListNacosHistoryConfigsRequest) {
+	request = &ListNacosHistoryConfigsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListNacosHistoryConfigs", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateListNacosHistoryConfigsResponse creates a response to parse from ListNacosHistoryConfigs response
+func CreateListNacosHistoryConfigsResponse() (response *ListNacosHistoryConfigsResponse) {
+	response = &ListNacosHistoryConfigsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_znode_children.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_znode_children.go
new file mode 100644
index 000000000000..f4d4abf7e51c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/list_znode_children.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ListZnodeChildren invokes the mse.ListZnodeChildren API synchronously
+// api document: https://help.aliyun.com/api/mse/listznodechildren.html
+func (client *Client) ListZnodeChildren(request *ListZnodeChildrenRequest) (response *ListZnodeChildrenResponse, err error) {
+	response = CreateListZnodeChildrenResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ListZnodeChildrenWithChan invokes the mse.ListZnodeChildren API asynchronously
+// api document: https://help.aliyun.com/api/mse/listznodechildren.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListZnodeChildrenWithChan(request *ListZnodeChildrenRequest) (<-chan *ListZnodeChildrenResponse, <-chan error) {
+	responseChan := make(chan *ListZnodeChildrenResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ListZnodeChildren(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ListZnodeChildrenWithCallback invokes the mse.ListZnodeChildren API asynchronously
+// api document: https://help.aliyun.com/api/mse/listznodechildren.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ListZnodeChildrenWithCallback(request *ListZnodeChildrenRequest, callback func(response *ListZnodeChildrenResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ListZnodeChildrenResponse
+		var err error
+		defer close(result)
+		response, err = client.ListZnodeChildren(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ListZnodeChildrenRequest is the request struct for api ListZnodeChildren
+type ListZnodeChildrenRequest struct {
+	*requests.RpcRequest
+	ClusterId string `position:"Query" name:"ClusterId"`
+	Path      string `position:"Query" name:"Path"`
+}
+
+// ListZnodeChildrenResponse is the response struct for api ListZnodeChildren
+type ListZnodeChildrenResponse struct {
+	*responses.BaseResponse
+	RequestId string       `json:"RequestId" xml:"RequestId"`
+	Success   bool         `json:"Success" xml:"Success"`
+	Message   string       `json:"Message" xml:"Message"`
+	ErrorCode string       `json:"ErrorCode" xml:"ErrorCode"`
+	Data      []ZnodeModel `json:"Data" xml:"Data"`
+}
+
+// CreateListZnodeChildrenRequest creates a request to invoke ListZnodeChildren API
+func CreateListZnodeChildrenRequest() (request *ListZnodeChildrenRequest) {
+	request = &ListZnodeChildrenRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ListZnodeChildren", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateListZnodeChildrenResponse creates a response to parse from ListZnodeChildren response
+func CreateListZnodeChildrenResponse() (response *ListZnodeChildrenResponse) {
+	response = &ListZnodeChildrenResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_business_locations.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_business_locations.go
new file mode 100644
index 000000000000..6e448455656a
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_business_locations.go
@@ -0,0 +1,107 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryBusinessLocations invokes the mse.QueryBusinessLocations API synchronously
+// api document: https://help.aliyun.com/api/mse/querybusinesslocations.html
+func (client *Client) QueryBusinessLocations(request *QueryBusinessLocationsRequest) (response *QueryBusinessLocationsResponse, err error) {
+	response = CreateQueryBusinessLocationsResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryBusinessLocationsWithChan invokes the mse.QueryBusinessLocations API asynchronously
+// api document: https://help.aliyun.com/api/mse/querybusinesslocations.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryBusinessLocationsWithChan(request *QueryBusinessLocationsRequest) (<-chan *QueryBusinessLocationsResponse, <-chan error) {
+	responseChan := make(chan *QueryBusinessLocationsResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryBusinessLocations(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryBusinessLocationsWithCallback invokes the mse.QueryBusinessLocations API asynchronously
+// api document: https://help.aliyun.com/api/mse/querybusinesslocations.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryBusinessLocationsWithCallback(request *QueryBusinessLocationsRequest, callback func(response *QueryBusinessLocationsResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryBusinessLocationsResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryBusinessLocations(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryBusinessLocationsRequest is the request struct for api QueryBusinessLocations
+type QueryBusinessLocationsRequest struct {
+	*requests.RpcRequest
+}
+
+// QueryBusinessLocationsResponse is the response struct for api QueryBusinessLocations
+type QueryBusinessLocationsResponse struct {
+	*responses.BaseResponse
+	RequestId string         `json:"RequestId" xml:"RequestId"`
+	Success   string         `json:"Success" xml:"Success"`
+	Message   string         `json:"Message" xml:"Message"`
+	ErrorCode string         `json:"ErrorCode" xml:"ErrorCode"`
+	Data      []LocationData `json:"Data" xml:"Data"`
+}
+
+// CreateQueryBusinessLocationsRequest creates a request to invoke QueryBusinessLocations API
+func CreateQueryBusinessLocationsRequest() (request *QueryBusinessLocationsRequest) {
+	request = &QueryBusinessLocationsRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryBusinessLocations", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateQueryBusinessLocationsResponse creates a response to parse from QueryBusinessLocations response
+func CreateQueryBusinessLocationsResponse() (response *QueryBusinessLocationsResponse) {
+	response = &QueryBusinessLocationsResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_detail.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_detail.go
new file mode 100644
index 000000000000..18a775d78ef2
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_detail.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryClusterDetail invokes the mse.QueryClusterDetail API synchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterdetail.html
+func (client *Client) QueryClusterDetail(request *QueryClusterDetailRequest) (response *QueryClusterDetailResponse, err error) {
+	response = CreateQueryClusterDetailResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryClusterDetailWithChan invokes the mse.QueryClusterDetail API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterdetail.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryClusterDetailWithChan(request *QueryClusterDetailRequest) (<-chan *QueryClusterDetailResponse, <-chan error) {
+	responseChan := make(chan *QueryClusterDetailResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryClusterDetail(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryClusterDetailWithCallback invokes the mse.QueryClusterDetail API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterdetail.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryClusterDetailWithCallback(request *QueryClusterDetailRequest, callback func(response *QueryClusterDetailResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryClusterDetailResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryClusterDetail(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryClusterDetailRequest is the request struct for api QueryClusterDetail
+type QueryClusterDetailRequest struct {
+	*requests.RpcRequest
+	OrderId    string `position:"Query" name:"OrderId"`
+	ClusterId  string `position:"Query" name:"ClusterId"`
+	InstanceId string `position:"Query" name:"InstanceId"`
+}
+
+// QueryClusterDetailResponse is the response struct for api QueryClusterDetail
+type QueryClusterDetailResponse struct {
+	*responses.BaseResponse
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateQueryClusterDetailRequest creates a request to invoke QueryClusterDetail API
+func CreateQueryClusterDetailRequest() (request *QueryClusterDetailRequest) {
+	request = &QueryClusterDetailRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryClusterDetail", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateQueryClusterDetailResponse creates a response to parse from QueryClusterDetail response
+func CreateQueryClusterDetailResponse() (response *QueryClusterDetailResponse) {
+	response = &QueryClusterDetailResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_specification.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_specification.go
new file mode 100644
index 000000000000..b6ad37358ce6
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_cluster_specification.go
@@ -0,0 +1,107 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryClusterSpecification invokes the mse.QueryClusterSpecification API synchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterspecification.html
+func (client *Client) QueryClusterSpecification(request *QueryClusterSpecificationRequest) (response *QueryClusterSpecificationResponse, err error) {
+	response = CreateQueryClusterSpecificationResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryClusterSpecificationWithChan invokes the mse.QueryClusterSpecification API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterspecification.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryClusterSpecificationWithChan(request *QueryClusterSpecificationRequest) (<-chan *QueryClusterSpecificationResponse, <-chan error) {
+	responseChan := make(chan *QueryClusterSpecificationResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryClusterSpecification(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryClusterSpecificationWithCallback invokes the mse.QueryClusterSpecification API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryclusterspecification.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryClusterSpecificationWithCallback(request *QueryClusterSpecificationRequest, callback func(response *QueryClusterSpecificationResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryClusterSpecificationResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryClusterSpecification(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryClusterSpecificationRequest is the request struct for api QueryClusterSpecification
+type QueryClusterSpecificationRequest struct {
+	*requests.RpcRequest
+}
+
+// QueryClusterSpecificationResponse is the response struct for api QueryClusterSpecification
+type QueryClusterSpecificationResponse struct {
+	*responses.BaseResponse
+	RequestId string                     `json:"RequestId" xml:"RequestId"`
+	Success   bool                       `json:"Success" xml:"Success"`
+	Message   string                     `json:"Message" xml:"Message"`
+	ErrorCode string                     `json:"ErrorCode" xml:"ErrorCode"`
+	Data      []ClusterSpecificationData `json:"Data" xml:"Data"`
+}
+
+// CreateQueryClusterSpecificationRequest creates a request to invoke QueryClusterSpecification API
+func CreateQueryClusterSpecificationRequest() (request *QueryClusterSpecificationRequest) {
+	request = &QueryClusterSpecificationRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryClusterSpecification", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateQueryClusterSpecificationResponse creates a response to parse from QueryClusterSpecification response
+func CreateQueryClusterSpecificationResponse() (response *QueryClusterSpecificationResponse) {
+	response = &QueryClusterSpecificationResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_config.go
new file mode 100644
index 000000000000..4acc67930824
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_config.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryConfig invokes the mse.QueryConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/queryconfig.html
+func (client *Client) QueryConfig(request *QueryConfigRequest) (response *QueryConfigResponse, err error) {
+	response = CreateQueryConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryConfigWithChan invokes the mse.QueryConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryConfigWithChan(request *QueryConfigRequest) (<-chan *QueryConfigResponse, <-chan error) {
+	responseChan := make(chan *QueryConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryConfigWithCallback invokes the mse.QueryConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryConfigWithCallback(request *QueryConfigRequest, callback func(response *QueryConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryConfigRequest is the request struct for api QueryConfig
+type QueryConfigRequest struct {
+	*requests.RpcRequest
+	ConfigType  string `position:"Query" name:"ConfigType"`
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// QueryConfigResponse is the response struct for api QueryConfig
+type QueryConfigResponse struct {
+	*responses.BaseResponse
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Success   string `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateQueryConfigRequest creates a request to invoke QueryConfig API
+func CreateQueryConfigRequest() (request *QueryConfigRequest) {
+	request = &QueryConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryConfig", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateQueryConfigResponse creates a response to parse from QueryConfig response
+func CreateQueryConfigResponse() (response *QueryConfigResponse) {
+	response = &QueryConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_monitor.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_monitor.go
new file mode 100644
index 000000000000..b7036439bbef
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_monitor.go
@@ -0,0 +1,113 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryMonitor invokes the mse.QueryMonitor API synchronously
+// api document: https://help.aliyun.com/api/mse/querymonitor.html
+func (client *Client) QueryMonitor(request *QueryMonitorRequest) (response *QueryMonitorResponse, err error) {
+	response = CreateQueryMonitorResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryMonitorWithChan invokes the mse.QueryMonitor API asynchronously
+// api document: https://help.aliyun.com/api/mse/querymonitor.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryMonitorWithChan(request *QueryMonitorRequest) (<-chan *QueryMonitorResponse, <-chan error) {
+	responseChan := make(chan *QueryMonitorResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryMonitor(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryMonitorWithCallback invokes the mse.QueryMonitor API asynchronously
+// api document: https://help.aliyun.com/api/mse/querymonitor.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryMonitorWithCallback(request *QueryMonitorRequest, callback func(response *QueryMonitorResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryMonitorResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryMonitor(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryMonitorRequest is the request struct for api QueryMonitor
+type QueryMonitorRequest struct {
+	*requests.RpcRequest
+	MonitorType string `position:"Query" name:"MonitorType"`
+	EndTime     string `position:"Query" name:"EndTime"`
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	StartTime   string `position:"Query" name:"StartTime"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+	Step        string `position:"Query" name:"Step"`
+}
+
+// QueryMonitorResponse is the response struct for api QueryMonitor
+type QueryMonitorResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Data      string `json:"Data" xml:"Data"`
+}
+
+// CreateQueryMonitorRequest creates a request to invoke QueryMonitor API
+func CreateQueryMonitorRequest() (request *QueryMonitorRequest) {
+	request = &QueryMonitorRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryMonitor", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateQueryMonitorResponse creates a response to parse from QueryMonitor response
+func CreateQueryMonitorResponse() (response *QueryMonitorResponse) {
+	response = &QueryMonitorResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_znode_detail.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_znode_detail.go
new file mode 100644
index 000000000000..51340b0f68c7
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/query_znode_detail.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// QueryZnodeDetail invokes the mse.QueryZnodeDetail API synchronously
+// api document: https://help.aliyun.com/api/mse/queryznodedetail.html
+func (client *Client) QueryZnodeDetail(request *QueryZnodeDetailRequest) (response *QueryZnodeDetailResponse, err error) {
+	response = CreateQueryZnodeDetailResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// QueryZnodeDetailWithChan invokes the mse.QueryZnodeDetail API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryznodedetail.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryZnodeDetailWithChan(request *QueryZnodeDetailRequest) (<-chan *QueryZnodeDetailResponse, <-chan error) {
+	responseChan := make(chan *QueryZnodeDetailResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.QueryZnodeDetail(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// QueryZnodeDetailWithCallback invokes the mse.QueryZnodeDetail API asynchronously
+// api document: https://help.aliyun.com/api/mse/queryznodedetail.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) QueryZnodeDetailWithCallback(request *QueryZnodeDetailRequest, callback func(response *QueryZnodeDetailResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *QueryZnodeDetailResponse
+		var err error
+		defer close(result)
+		response, err = client.QueryZnodeDetail(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// QueryZnodeDetailRequest is the request struct for api QueryZnodeDetail
+type QueryZnodeDetailRequest struct {
+	*requests.RpcRequest
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	Path        string `position:"Query" name:"Path"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// QueryZnodeDetailResponse is the response struct for api QueryZnodeDetail
+type QueryZnodeDetailResponse struct {
+	*responses.BaseResponse
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Success   string `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateQueryZnodeDetailRequest creates a request to invoke QueryZnodeDetail API
+func CreateQueryZnodeDetailRequest() (request *QueryZnodeDetailRequest) {
+	request = &QueryZnodeDetailRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "QueryZnodeDetail", "mse", "openAPI")
+	request.Method = requests.GET
+	return
+}
+
+// CreateQueryZnodeDetailResponse creates a response to parse from QueryZnodeDetail response
+func CreateQueryZnodeDetailResponse() (response *QueryZnodeDetailResponse) {
+	response = &QueryZnodeDetailResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/restart_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/restart_cluster.go
new file mode 100644
index 000000000000..1c25d4a2103c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/restart_cluster.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// RestartCluster invokes the mse.RestartCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/restartcluster.html
+func (client *Client) RestartCluster(request *RestartClusterRequest) (response *RestartClusterResponse, err error) {
+	response = CreateRestartClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// RestartClusterWithChan invokes the mse.RestartCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/restartcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) RestartClusterWithChan(request *RestartClusterRequest) (<-chan *RestartClusterResponse, <-chan error) {
+	responseChan := make(chan *RestartClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.RestartCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// RestartClusterWithCallback invokes the mse.RestartCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/restartcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) RestartClusterWithCallback(request *RestartClusterRequest, callback func(response *RestartClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *RestartClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.RestartCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// RestartClusterRequest is the request struct for api RestartCluster
+type RestartClusterRequest struct {
+	*requests.RpcRequest
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// RestartClusterResponse is the response struct for api RestartCluster
+type RestartClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateRestartClusterRequest creates a request to invoke RestartCluster API
+func CreateRestartClusterRequest() (request *RestartClusterRequest) {
+	request = &RestartClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "RestartCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateRestartClusterResponse creates a response to parse from RestartCluster response
+func CreateRestartClusterResponse() (response *RestartClusterResponse) {
+	response = &RestartClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/retry_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/retry_cluster.go
new file mode 100644
index 000000000000..2b5c6be0f4d2
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/retry_cluster.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// RetryCluster invokes the mse.RetryCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/retrycluster.html
+func (client *Client) RetryCluster(request *RetryClusterRequest) (response *RetryClusterResponse, err error) {
+	response = CreateRetryClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// RetryClusterWithChan invokes the mse.RetryCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/retrycluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) RetryClusterWithChan(request *RetryClusterRequest) (<-chan *RetryClusterResponse, <-chan error) {
+	responseChan := make(chan *RetryClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.RetryCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// RetryClusterWithCallback invokes the mse.RetryCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/retrycluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) RetryClusterWithCallback(request *RetryClusterRequest, callback func(response *RetryClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *RetryClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.RetryCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// RetryClusterRequest is the request struct for api RetryCluster
+type RetryClusterRequest struct {
+	*requests.RpcRequest
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// RetryClusterResponse is the response struct for api RetryCluster
+type RetryClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateRetryClusterRequest creates a request to invoke RetryCluster API
+func CreateRetryClusterRequest() (request *RetryClusterRequest) {
+	request = &RetryClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "RetryCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateRetryClusterResponse creates a response to parse from RetryCluster response
+func CreateRetryClusterResponse() (response *RetryClusterResponse) {
+	response = &RetryClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/scaling_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/scaling_cluster.go
new file mode 100644
index 000000000000..d41273af94fe
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/scaling_cluster.go
@@ -0,0 +1,112 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// ScalingCluster invokes the mse.ScalingCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/scalingcluster.html
+func (client *Client) ScalingCluster(request *ScalingClusterRequest) (response *ScalingClusterResponse, err error) {
+	response = CreateScalingClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// ScalingClusterWithChan invokes the mse.ScalingCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/scalingcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ScalingClusterWithChan(request *ScalingClusterRequest) (<-chan *ScalingClusterResponse, <-chan error) {
+	responseChan := make(chan *ScalingClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.ScalingCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// ScalingClusterWithCallback invokes the mse.ScalingCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/scalingcluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) ScalingClusterWithCallback(request *ScalingClusterRequest, callback func(response *ScalingClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *ScalingClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.ScalingCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// ScalingClusterRequest is the request struct for api ScalingCluster
+type ScalingClusterRequest struct {
+	*requests.RpcRequest
+	ClusterSpecification string           `position:"Query" name:"ClusterSpecification"`
+	Cpu                  requests.Integer `position:"Query" name:"Cpu"`
+	ClusterId            string           `position:"Query" name:"ClusterId"`
+	InstanceId           string           `position:"Query" name:"InstanceId"`
+	MemoryCapacity       requests.Integer `position:"Query" name:"MemoryCapacity"`
+	InstanceCount        requests.Integer `position:"Query" name:"InstanceCount"`
+}
+
+// ScalingClusterResponse is the response struct for api ScalingCluster
+type ScalingClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateScalingClusterRequest creates a request to invoke ScalingCluster API
+func CreateScalingClusterRequest() (request *ScalingClusterRequest) {
+	request = &ScalingClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "ScalingCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateScalingClusterResponse creates a response to parse from ScalingCluster response
+func CreateScalingClusterResponse() (response *ScalingClusterResponse) {
+	response = &ScalingClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_contact_group_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_contact_group_model.go
new file mode 100644
index 000000000000..97f27049d00b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_contact_group_model.go
@@ -0,0 +1,22 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// AlarmContactGroupModel is a nested struct in mse response
+type AlarmContactGroupModel struct {
+	ContactGroupName string `json:"ContactGroupName" xml:"ContactGroupName"`
+	ContactGroupId   string `json:"ContactGroupId" xml:"ContactGroupId"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_history_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_history_model.go
new file mode 100644
index 000000000000..62b15458a299
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_history_model.go
@@ -0,0 +1,26 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// AlarmHistoryModel is a nested struct in mse response
+type AlarmHistoryModel struct {
+	AlarmTime     string `json:"AlarmTime" xml:"AlarmTime"`
+	AlarmPhone    string `json:"AlarmPhone" xml:"AlarmPhone"`
+	AlarmDingDing string `json:"AlarmDingDing" xml:"AlarmDingDing"`
+	AlarmName     string `json:"AlarmName" xml:"AlarmName"`
+	AlarmContent  string `json:"AlarmContent" xml:"AlarmContent"`
+	AlarmEmail    string `json:"AlarmEmail" xml:"AlarmEmail"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_item.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_item.go
new file mode 100644
index 000000000000..b1d3f4a76218
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_item.go
@@ -0,0 +1,23 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// AlarmItem is a nested struct in mse response
+type AlarmItem struct {
+	AlarmCode   string `json:"AlarmCode" xml:"AlarmCode"`
+	AlarmDesc   string `json:"AlarmDesc" xml:"AlarmDesc"`
+	ClusterType string `json:"ClusterType" xml:"ClusterType"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_rule_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_rule_model.go
new file mode 100644
index 000000000000..99bcaa1235c2
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_alarm_rule_model.go
@@ -0,0 +1,25 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// AlarmRuleModel is a nested struct in mse response
+type AlarmRuleModel struct {
+	AlarmStatus     string `json:"AlarmStatus" xml:"AlarmStatus"`
+	AlarmName       string `json:"AlarmName" xml:"AlarmName"`
+	CreateTime      string `json:"CreateTime" xml:"CreateTime"`
+	AlarmRuleDetail string `json:"AlarmRuleDetail" xml:"AlarmRuleDetail"`
+	AlarmRuleId     string `json:"AlarmRuleId" xml:"AlarmRuleId"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_for_list_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_for_list_model.go
new file mode 100644
index 000000000000..f5d697b146f4
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_for_list_model.go
@@ -0,0 +1,33 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// ClusterForListModel is a nested struct in mse response
+type ClusterForListModel struct {
+	ClusterId        string `json:"ClusterId" xml:"ClusterId"`
+	ClusterAliasName string `json:"ClusterAliasName" xml:"ClusterAliasName"`
+	InitStatus       string `json:"InitStatus" xml:"InitStatus"`
+	IntranetDomain   string `json:"IntranetDomain" xml:"IntranetDomain"`
+	CreateTime       string `json:"CreateTime" xml:"CreateTime"`
+	InternetAddress  string `json:"InternetAddress" xml:"InternetAddress"`
+	IntranetAddress  string `json:"IntranetAddress" xml:"IntranetAddress"`
+	InternetDomain   string `json:"InternetDomain" xml:"InternetDomain"`
+	ClusterType      string `json:"ClusterType" xml:"ClusterType"`
+	ChargeType       string `json:"ChargeType" xml:"ChargeType"`
+	EndDate          string `json:"EndDate" xml:"EndDate"`
+	InstanceId       string `json:"InstanceId" xml:"InstanceId"`
+	AppVersion       string `json:"AppVersion" xml:"AppVersion"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_specification_data.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_specification_data.go
new file mode 100644
index 000000000000..96831fa3acac
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_cluster_specification_data.go
@@ -0,0 +1,27 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// ClusterSpecificationData is a nested struct in mse response
+type ClusterSpecificationData struct {
+	ClusterSpecificationName string `json:"ClusterSpecificationName" xml:"ClusterSpecificationName"`
+	CpuCapacity              string `json:"CpuCapacity" xml:"CpuCapacity"`
+	MemoryCapacity           string `json:"MemoryCapacity" xml:"MemoryCapacity"`
+	DiskCapacity             string `json:"DiskCapacity" xml:"DiskCapacity"`
+	InstanceCount            string `json:"InstanceCount" xml:"InstanceCount"`
+	MaxTps                   string `json:"MaxTps" xml:"MaxTps"`
+	MaxCon                   string `json:"MaxCon" xml:"MaxCon"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_clusters.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_clusters.go
new file mode 100644
index 000000000000..8fd918f773ce
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_clusters.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Clusters is a nested struct in mse response
+type Clusters struct {
+	NacosAnsCluster []NacosAnsCluster `json:"NacosAnsCluster" xml:"NacosAnsCluster"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configuration.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configuration.go
new file mode 100644
index 000000000000..18c1ac03e0d9
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configuration.go
@@ -0,0 +1,29 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Configuration is a nested struct in mse response
+type Configuration struct {
+	Tags    string `json:"Tags" xml:"Tags"`
+	DataId  string `json:"DataId" xml:"DataId"`
+	Group   string `json:"Group" xml:"Group"`
+	Desc    string `json:"Desc" xml:"Desc"`
+	Content string `json:"Content" xml:"Content"`
+	OpType  string `json:"OpType" xml:"OpType"`
+	Md5     string `json:"Md5" xml:"Md5"`
+	AppName string `json:"AppName" xml:"AppName"`
+	Type    string `json:"Type" xml:"Type"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configurations.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configurations.go
new file mode 100644
index 000000000000..5f94d74deb9c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_configurations.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Configurations is a nested struct in mse response
+type Configurations struct {
+	NacosConfigForListModel []NacosConfigForListModel `json:"NacosConfigForListModel" xml:"NacosConfigForListModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data.go
new file mode 100644
index 000000000000..8489d7dc49c5
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data.go
@@ -0,0 +1,76 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Data is a nested struct in mse response
+type Data struct {
+	IntranetDomain           string                 `json:"IntranetDomain" xml:"IntranetDomain"`
+	Dir                      bool                   `json:"Dir" xml:"Dir"`
+	ClusterAliasName         string                 `json:"ClusterAliasName" xml:"ClusterAliasName"`
+	JuteMaxbuffer            string                 `json:"JuteMaxbuffer" xml:"JuteMaxbuffer"`
+	VpcId                    string                 `json:"VpcId" xml:"VpcId"`
+	InitLimit                string                 `json:"InitLimit" xml:"InitLimit"`
+	Path                     string                 `json:"Path" xml:"Path"`
+	ClusterId                string                 `json:"ClusterId" xml:"ClusterId"`
+	SyncLimit                string                 `json:"SyncLimit" xml:"SyncLimit"`
+	NamespaceDesc            string                 `json:"NamespaceDesc" xml:"NamespaceDesc"`
+	Data                     string                 `json:"Data" xml:"Data"`
+	ProtectThreshold         float64                `json:"ProtectThreshold" xml:"ProtectThreshold"`
+	DiskType                 string                 `json:"DiskType" xml:"DiskType"`
+	AclId                    string                 `json:"AclId" xml:"AclId"`
+	JvmFlagsCustom           string                 `json:"JvmFlagsCustom" xml:"JvmFlagsCustom"`
+	PayInfo                  string                 `json:"PayInfo" xml:"PayInfo"`
+	InstanceCount            int                    `json:"InstanceCount" xml:"InstanceCount"`
+	Metadata                 map[string]interface{} `json:"Metadata" xml:"Metadata"`
+	ServiceCount             int                    `json:"ServiceCount" xml:"ServiceCount"`
+	InternetPort             string                 `json:"InternetPort" xml:"InternetPort"`
+	Cpu                      int                    `json:"Cpu" xml:"Cpu"`
+	AutopurgePurgeInterval   string                 `json:"AutopurgePurgeInterval" xml:"AutopurgePurgeInterval"`
+	SelectorType             string                 `json:"SelectorType" xml:"SelectorType"`
+	InitStatus               string                 `json:"InitStatus" xml:"InitStatus"`
+	Type                     int                    `json:"Type" xml:"Type"`
+	Name                     string                 `json:"Name" xml:"Name"`
+	IntranetAddress          string                 `json:"IntranetAddress" xml:"IntranetAddress"`
+	MemoryCapacity           int64                  `json:"MemoryCapacity" xml:"MemoryCapacity"`
+	CreateTime               string                 `json:"CreateTime" xml:"CreateTime"`
+	GroupName                string                 `json:"GroupName" xml:"GroupName"`
+	InitCostTime             int64                  `json:"InitCostTime" xml:"InitCostTime"`
+	MaxClientCnxns           string                 `json:"MaxClientCnxns" xml:"MaxClientCnxns"`
+	InternetAddress          string                 `json:"InternetAddress" xml:"InternetAddress"`
+	RegionId                 string                 `json:"RegionId" xml:"RegionId"`
+	InstanceId               string                 `json:"InstanceId" xml:"InstanceId"`
+	ConfigCount              int                    `json:"ConfigCount" xml:"ConfigCount"`
+	ClusterName              string                 `json:"ClusterName" xml:"ClusterName"`
+	PassWord                 string                 `json:"PassWord" xml:"PassWord"`
+	NamespaceShowName        string                 `json:"NamespaceShowName" xml:"NamespaceShowName"`
+	InternetDomain           string                 `json:"InternetDomain" xml:"InternetDomain"`
+	PubNetworkFlow           string                 `json:"PubNetworkFlow" xml:"PubNetworkFlow"`
+	OpenSuperAcl             bool                   `json:"OpenSuperAcl" xml:"OpenSuperAcl"`
+	ClusterType              string                 `json:"ClusterType" xml:"ClusterType"`
+	DiskCapacity             int64                  `json:"DiskCapacity" xml:"DiskCapacity"`
+	AutopurgeSnapRetainCount string                 `json:"AutopurgeSnapRetainCount" xml:"AutopurgeSnapRetainCount"`
+	TickTime                 string                 `json:"TickTime" xml:"TickTime"`
+	Quota                    int                    `json:"Quota" xml:"Quota"`
+	IntranetPort             string                 `json:"IntranetPort" xml:"IntranetPort"`
+	RestartFlag              bool                   `json:"RestartFlag" xml:"RestartFlag"`
+	Namespace                string                 `json:"Namespace" xml:"Namespace"`
+	HealthStatus             string                 `json:"HealthStatus" xml:"HealthStatus"`
+	AclEntryList             string                 `json:"AclEntryList" xml:"AclEntryList"`
+	AppVersion               string                 `json:"AppVersion" xml:"AppVersion"`
+	UserName                 string                 `json:"UserName" xml:"UserName"`
+	Clusters                 []NacosAnsCluster      `json:"Clusters" xml:"Clusters"`
+	InstanceModels           []InstanceModel        `json:"InstanceModels" xml:"InstanceModels"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_contact_groups.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_contact_groups.go
new file mode 100644
index 000000000000..95a93ce28ca8
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_contact_groups.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAlarmContactGroups is a nested struct in mse response
+type DataInListAlarmContactGroups struct {
+	AlarmContactGroupModel []AlarmContactGroupModel `json:"AlarmContactGroupModel" xml:"AlarmContactGroupModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_histories.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_histories.go
new file mode 100644
index 000000000000..ce9cae6c2d8c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_histories.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAlarmHistories is a nested struct in mse response
+type DataInListAlarmHistories struct {
+	AlarmHistoryModel []AlarmHistoryModel `json:"AlarmHistoryModel" xml:"AlarmHistoryModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_items.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_items.go
new file mode 100644
index 000000000000..c7bef2b234d6
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_items.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAlarmItems is a nested struct in mse response
+type DataInListAlarmItems struct {
+	AlarmItem []AlarmItem `json:"AlarmItem" xml:"AlarmItem"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_rules.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_rules.go
new file mode 100644
index 000000000000..0251d176ebfb
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_alarm_rules.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAlarmRules is a nested struct in mse response
+type DataInListAlarmRules struct {
+	AlarmRuleModel []AlarmRuleModel `json:"AlarmRuleModel" xml:"AlarmRuleModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_instances.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_instances.go
new file mode 100644
index 000000000000..fe48f188b618
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_instances.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAnsInstances is a nested struct in mse response
+type DataInListAnsInstances struct {
+	NacosAnsInstance []NacosAnsInstance `json:"NacosAnsInstance" xml:"NacosAnsInstance"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_services.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_services.go
new file mode 100644
index 000000000000..b19f7daa8ba3
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_ans_services.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListAnsServices is a nested struct in mse response
+type DataInListAnsServices struct {
+	SimpleNacosAnsService []SimpleNacosAnsService `json:"SimpleNacosAnsService" xml:"SimpleNacosAnsService"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_clusters.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_clusters.go
new file mode 100644
index 000000000000..c8d3bbb32243
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_clusters.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListClusters is a nested struct in mse response
+type DataInListClusters struct {
+	ClusterForListModel []ClusterForListModel `json:"ClusterForListModel" xml:"ClusterForListModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_engine_namespaces.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_engine_namespaces.go
new file mode 100644
index 000000000000..3e4f5dc8cff0
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_engine_namespaces.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListEngineNamespaces is a nested struct in mse response
+type DataInListEngineNamespaces struct {
+	Namespace []Namespace `json:"Namespace" xml:"Namespace"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_instances.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_instances.go
new file mode 100644
index 000000000000..0d2b7dd9f233
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_instances.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListEurekaInstances is a nested struct in mse response
+type DataInListEurekaInstances struct {
+	EurekaInstance []EurekaInstance `json:"EurekaInstance" xml:"EurekaInstance"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_services.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_services.go
new file mode 100644
index 000000000000..ef2e9436b788
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_eureka_services.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListEurekaServices is a nested struct in mse response
+type DataInListEurekaServices struct {
+	SimpleService []SimpleService `json:"SimpleService" xml:"SimpleService"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_znode_children.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_znode_children.go
new file mode 100644
index 000000000000..fb5b1a939cc0
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_list_znode_children.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInListZnodeChildren is a nested struct in mse response
+type DataInListZnodeChildren struct {
+	ZnodeModel []ZnodeModel `json:"ZnodeModel" xml:"ZnodeModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_business_locations.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_business_locations.go
new file mode 100644
index 000000000000..79a4e7760b7f
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_business_locations.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInQueryBusinessLocations is a nested struct in mse response
+type DataInQueryBusinessLocations struct {
+	LocationData []LocationData `json:"LocationData" xml:"LocationData"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_cluster_specification.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_cluster_specification.go
new file mode 100644
index 000000000000..cfa8cd51cb8b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_data_in_query_cluster_specification.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// DataInQueryClusterSpecification is a nested struct in mse response
+type DataInQueryClusterSpecification struct {
+	ClusterSpecificationData []ClusterSpecificationData `json:"ClusterSpecificationData" xml:"ClusterSpecificationData"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_eureka_instance.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_eureka_instance.go
new file mode 100644
index 000000000000..f2a45905db0a
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_eureka_instance.go
@@ -0,0 +1,34 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// EurekaInstance is a nested struct in mse response
+type EurekaInstance struct {
+	Port                  int                    `json:"Port" xml:"Port"`
+	SecurePort            int                    `json:"SecurePort" xml:"SecurePort"`
+	DurationInSecs        int                    `json:"DurationInSecs" xml:"DurationInSecs"`
+	RenewalIntervalInSecs int                    `json:"RenewalIntervalInSecs" xml:"RenewalIntervalInSecs"`
+	LastUpdatedTimestamp  int64                  `json:"LastUpdatedTimestamp" xml:"LastUpdatedTimestamp"`
+	App                   string                 `json:"App" xml:"App"`
+	IpAddr                string                 `json:"IpAddr" xml:"IpAddr"`
+	Status                string                 `json:"Status" xml:"Status"`
+	HomePageUrl           string                 `json:"HomePageUrl" xml:"HomePageUrl"`
+	InstanceId            string                 `json:"InstanceId" xml:"InstanceId"`
+	VipAddress            string                 `json:"VipAddress" xml:"VipAddress"`
+	HostName              string                 `json:"HostName" xml:"HostName"`
+	Metadata              map[string]interface{} `json:"Metadata" xml:"Metadata"`
+	LastDirtyTimestamp    int64                  `json:"LastDirtyTimestamp" xml:"LastDirtyTimestamp"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_item.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_item.go
new file mode 100644
index 000000000000..589ab1bddc1b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_item.go
@@ -0,0 +1,26 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// HistoryItem is a nested struct in mse response
+type HistoryItem struct {
+	DataId           string `json:"DataId" xml:"DataId"`
+	Group            string `json:"Group" xml:"Group"`
+	LastModifiedTime int64  `json:"LastModifiedTime" xml:"LastModifiedTime"`
+	Id               int64  `json:"Id" xml:"Id"`
+	OpType           string `json:"OpType" xml:"OpType"`
+	AppName          string `json:"AppName" xml:"AppName"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_items.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_items.go
new file mode 100644
index 000000000000..10d68281098d
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_history_items.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// HistoryItems is a nested struct in mse response
+type HistoryItems struct {
+	HistoryItem []HistoryItem `json:"HistoryItem" xml:"HistoryItem"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_model.go
new file mode 100644
index 000000000000..b4a25f6d323b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_model.go
@@ -0,0 +1,31 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// InstanceModel is a nested struct in mse response
+type InstanceModel struct {
+	InstanceType    string `json:"InstanceType" xml:"InstanceType"`
+	InstanceId      string `json:"InstanceId" xml:"InstanceId"`
+	Ip              string `json:"Ip" xml:"Ip"`
+	Vip             string `json:"Vip" xml:"Vip"`
+	HealthStatus    string `json:"HealthStatus" xml:"HealthStatus"`
+	ClusterId       string `json:"ClusterId" xml:"ClusterId"`
+	Role            string `json:"Role" xml:"Role"`
+	PodName         string `json:"PodName" xml:"PodName"`
+	InternetIp      string `json:"InternetIp" xml:"InternetIp"`
+	SingleTunnelVip string `json:"SingleTunnelVip" xml:"SingleTunnelVip"`
+	ZkClientPort    string `json:"ZkClientPort" xml:"ZkClientPort"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_models.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_models.go
new file mode 100644
index 000000000000..fc46e6d906dd
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instance_models.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// InstanceModels is a nested struct in mse response
+type InstanceModels struct {
+	InstanceModel []InstanceModel `json:"InstanceModel" xml:"InstanceModel"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instances_id.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instances_id.go
new file mode 100644
index 000000000000..57b63ae2fb59
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_instances_id.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// InstancesId is a nested struct in mse response
+type InstancesId struct {
+	String []string `json:"String" xml:"String"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listener.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listener.go
new file mode 100644
index 000000000000..970dc98d90bb
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listener.go
@@ -0,0 +1,24 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Listener is a nested struct in mse response
+type Listener struct {
+	DataId string `json:"DataId" xml:"DataId"`
+	Group  string `json:"Group" xml:"Group"`
+	Ip     string `json:"Ip" xml:"Ip"`
+	Md5    string `json:"Md5" xml:"Md5"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_config.go
new file mode 100644
index 000000000000..c80ec225a568
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_config.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// ListenersInListListenersByConfig is a nested struct in mse response
+type ListenersInListListenersByConfig struct {
+	Listener []Listener `json:"Listener" xml:"Listener"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_ip.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_ip.go
new file mode 100644
index 000000000000..a32782300078
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_listeners_in_list_listeners_by_ip.go
@@ -0,0 +1,21 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// ListenersInListListenersByIp is a nested struct in mse response
+type ListenersInListListenersByIp struct {
+	Listener []Listener `json:"Listener" xml:"Listener"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_location_data.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_location_data.go
new file mode 100644
index 000000000000..6576bcaa5bfd
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_location_data.go
@@ -0,0 +1,33 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// LocationData is a nested struct in mse response
+type LocationData struct {
+	Type             string `json:"Type" xml:"Type"`
+	Name             string `json:"Name" xml:"Name"`
+	CnName           string `json:"CnName" xml:"CnName"`
+	EnName           string `json:"EnName" xml:"EnName"`
+	ShowName         string `json:"ShowName" xml:"ShowName"`
+	Description      string `json:"Description" xml:"Description"`
+	EnDescription    string `json:"EnDescription" xml:"EnDescription"`
+	Ordering         int    `json:"Ordering" xml:"Ordering"`
+	DistrictId       string `json:"DistrictId" xml:"DistrictId"`
+	DistrictCnName   string `json:"DistrictCnName" xml:"DistrictCnName"`
+	DistrictEnName   string `json:"DistrictEnName" xml:"DistrictEnName"`
+	DistrictShowName string `json:"DistrictShowName" xml:"DistrictShowName"`
+	DistrictOrdering int    `json:"DistrictOrdering" xml:"DistrictOrdering"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_cluster.go
new file mode 100644
index 000000000000..15b8ee271c70
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_cluster.go
@@ -0,0 +1,27 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// NacosAnsCluster is a nested struct in mse response
+type NacosAnsCluster struct {
+	ServiceName       string                 `json:"ServiceName" xml:"ServiceName"`
+	Name              string                 `json:"Name" xml:"Name"`
+	HealthCheckerType string                 `json:"HealthCheckerType" xml:"HealthCheckerType"`
+	DefaultPort       int                    `json:"DefaultPort" xml:"DefaultPort"`
+	DefaultCheckPort  int                    `json:"DefaultCheckPort" xml:"DefaultCheckPort"`
+	UseIPPort4Check   bool                   `json:"UseIPPort4Check" xml:"UseIPPort4Check"`
+	Metadata          map[string]interface{} `json:"Metadata" xml:"Metadata"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_instance.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_instance.go
new file mode 100644
index 000000000000..64006ad1d129
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_ans_instance.go
@@ -0,0 +1,40 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// NacosAnsInstance is a nested struct in mse response
+type NacosAnsInstance struct {
+	Enabled                   bool                   `json:"Enabled" xml:"Enabled"`
+	Ephemeral                 bool                   `json:"Ephemeral" xml:"Ephemeral"`
+	Healthy                   bool                   `json:"Healthy" xml:"Healthy"`
+	Marked                    bool                   `json:"Marked" xml:"Marked"`
+	FailCount                 int                    `json:"FailCount" xml:"FailCount"`
+	Port                      int                    `json:"Port" xml:"Port"`
+	InstanceHeartBeatInterval int                    `json:"InstanceHeartBeatInterval" xml:"InstanceHeartBeatInterval"`
+	InstanceHeartBeatTimeOut  int                    `json:"InstanceHeartBeatTimeOut" xml:"InstanceHeartBeatTimeOut"`
+	IpDeleteTimeout           int                    `json:"IpDeleteTimeout" xml:"IpDeleteTimeout"`
+	OkCount                   int                    `json:"OkCount" xml:"OkCount"`
+	Weight                    int                    `json:"Weight" xml:"Weight"`
+	LastBeat                  int64                  `json:"LastBeat" xml:"LastBeat"`
+	App                       string                 `json:"App" xml:"App"`
+	ClusterName               string                 `json:"ClusterName" xml:"ClusterName"`
+	DatumKey                  string                 `json:"DatumKey" xml:"DatumKey"`
+	DefaultKey                string                 `json:"DefaultKey" xml:"DefaultKey"`
+	InstanceId                string                 `json:"InstanceId" xml:"InstanceId"`
+	Ip                        string                 `json:"Ip" xml:"Ip"`
+	ServiceName               string                 `json:"ServiceName" xml:"ServiceName"`
+	Metadata                  map[string]interface{} `json:"Metadata" xml:"Metadata"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_config_for_list_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_config_for_list_model.go
new file mode 100644
index 000000000000..caf09c810164
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_nacos_config_for_list_model.go
@@ -0,0 +1,24 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// NacosConfigForListModel is a nested struct in mse response
+type NacosConfigForListModel struct {
+	DataId  string `json:"DataId" xml:"DataId"`
+	Group   string `json:"Group" xml:"Group"`
+	AppName string `json:"AppName" xml:"AppName"`
+	Id      string `json:"Id" xml:"Id"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_namespace.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_namespace.go
new file mode 100644
index 000000000000..faf992ac52cf
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_namespace.go
@@ -0,0 +1,27 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// Namespace is a nested struct in mse response
+type Namespace struct {
+	Namespace         string `json:"Namespace" xml:"Namespace"`
+	NamespaceShowName string `json:"NamespaceShowName" xml:"NamespaceShowName"`
+	NamespaceDesc     string `json:"NamespaceDesc" xml:"NamespaceDesc"`
+	Quota             int    `json:"Quota" xml:"Quota"`
+	ConfigCount       int    `json:"ConfigCount" xml:"ConfigCount"`
+	Type              int    `json:"Type" xml:"Type"`
+	ServiceCount      string `json:"ServiceCount" xml:"ServiceCount"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_nacos_ans_service.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_nacos_ans_service.go
new file mode 100644
index 000000000000..8d39adb6bce9
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_nacos_ans_service.go
@@ -0,0 +1,25 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// SimpleNacosAnsService is a nested struct in mse response
+type SimpleNacosAnsService struct {
+	Name                 string `json:"Name" xml:"Name"`
+	GroupName            string `json:"GroupName" xml:"GroupName"`
+	ClusterCount         int    `json:"ClusterCount" xml:"ClusterCount"`
+	IpCount              int    `json:"IpCount" xml:"IpCount"`
+	HealthyInstanceCount int    `json:"HealthyInstanceCount" xml:"HealthyInstanceCount"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_service.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_service.go
new file mode 100644
index 000000000000..1192c993f5df
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_simple_service.go
@@ -0,0 +1,23 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// SimpleService is a nested struct in mse response
+type SimpleService struct {
+	Name        string   `json:"Name" xml:"Name"`
+	UpStatus    string   `json:"UpStatus" xml:"UpStatus"`
+	InstancesId []string `json:"InstancesId" xml:"InstancesId"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_znode_model.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_znode_model.go
new file mode 100644
index 000000000000..7ffba8026c3b
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/struct_znode_model.go
@@ -0,0 +1,24 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+// ZnodeModel is a nested struct in mse response
+type ZnodeModel struct {
+	Path string `json:"Path" xml:"Path"`
+	Name string `json:"Name" xml:"Name"`
+	Data string `json:"Data" xml:"Data"`
+	Dir  bool   `json:"Dir" xml:"Dir"`
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_acl.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_acl.go
new file mode 100644
index 000000000000..3337b91b0112
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_acl.go
@@ -0,0 +1,109 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateAcl invokes the mse.UpdateAcl API synchronously
+// api document: https://help.aliyun.com/api/mse/updateacl.html
+func (client *Client) UpdateAcl(request *UpdateAclRequest) (response *UpdateAclResponse, err error) {
+	response = CreateUpdateAclResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateAclWithChan invokes the mse.UpdateAcl API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateacl.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateAclWithChan(request *UpdateAclRequest) (<-chan *UpdateAclResponse, <-chan error) {
+	responseChan := make(chan *UpdateAclResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateAcl(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateAclWithCallback invokes the mse.UpdateAcl API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateacl.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateAclWithCallback(request *UpdateAclRequest, callback func(response *UpdateAclResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateAclResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateAcl(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateAclRequest is the request struct for api UpdateAcl
+type UpdateAclRequest struct {
+	*requests.RpcRequest
+	ClusterId    string `position:"Query" name:"ClusterId"`
+	AclEntryList string `position:"Query" name:"AclEntryList"`
+	InstanceId   string `position:"Query" name:"InstanceId"`
+}
+
+// UpdateAclResponse is the response struct for api UpdateAcl
+type UpdateAclResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateUpdateAclRequest creates a request to invoke UpdateAcl API
+func CreateUpdateAclRequest() (request *UpdateAclRequest) {
+	request = &UpdateAclRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateAcl", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateAclResponse creates a response to parse from UpdateAcl response
+func CreateUpdateAclResponse() (response *UpdateAclResponse) {
+	response = &UpdateAclResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_cluster.go
new file mode 100644
index 000000000000..62ade3069fc7
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_cluster.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateCluster invokes the mse.UpdateCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/updatecluster.html
+func (client *Client) UpdateCluster(request *UpdateClusterRequest) (response *UpdateClusterResponse, err error) {
+	response = CreateUpdateClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateClusterWithChan invokes the mse.UpdateCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/updatecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateClusterWithChan(request *UpdateClusterRequest) (<-chan *UpdateClusterResponse, <-chan error) {
+	responseChan := make(chan *UpdateClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateClusterWithCallback invokes the mse.UpdateCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/updatecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateClusterWithCallback(request *UpdateClusterRequest, callback func(response *UpdateClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateClusterRequest is the request struct for api UpdateCluster
+type UpdateClusterRequest struct {
+	*requests.RpcRequest
+	ClusterAliasName string `position:"Query" name:"ClusterAliasName"`
+	ClusterId        string `position:"Query" name:"ClusterId"`
+	InstanceId       string `position:"Query" name:"InstanceId"`
+	RequestPars      string `position:"Query" name:"RequestPars"`
+}
+
+// UpdateClusterResponse is the response struct for api UpdateCluster
+type UpdateClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateUpdateClusterRequest creates a request to invoke UpdateCluster API
+func CreateUpdateClusterRequest() (request *UpdateClusterRequest) {
+	request = &UpdateClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateClusterResponse creates a response to parse from UpdateCluster response
+func CreateUpdateClusterResponse() (response *UpdateClusterResponse) {
+	response = &UpdateClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_config.go
new file mode 100644
index 000000000000..171e461bfc66
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_config.go
@@ -0,0 +1,119 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateConfig invokes the mse.UpdateConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/updateconfig.html
+func (client *Client) UpdateConfig(request *UpdateConfigRequest) (response *UpdateConfigResponse, err error) {
+	response = CreateUpdateConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateConfigWithChan invokes the mse.UpdateConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateConfigWithChan(request *UpdateConfigRequest) (<-chan *UpdateConfigResponse, <-chan error) {
+	responseChan := make(chan *UpdateConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateConfigWithCallback invokes the mse.UpdateConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateConfigWithCallback(request *UpdateConfigRequest, callback func(response *UpdateConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateConfigRequest is the request struct for api UpdateConfig
+type UpdateConfigRequest struct {
+	*requests.RpcRequest
+	OpenSuperAcl             string `position:"Body" name:"OpenSuperAcl"`
+	PassWord                 string `position:"Query" name:"PassWord"`
+	MaxClientCnxns           string `position:"Query" name:"MaxClientCnxns"`
+	RequestPars              string `position:"Query" name:"RequestPars"`
+	JuteMaxbuffer            string `position:"Query" name:"JuteMaxbuffer"`
+	ConfigType               string `position:"Query" name:"ConfigType"`
+	AutopurgeSnapRetainCount string `position:"Query" name:"AutopurgeSnapRetainCount"`
+	TickTime                 string `position:"Query" name:"TickTime"`
+	ClusterId                string `position:"Query" name:"ClusterId"`
+	SyncLimit                string `position:"Query" name:"SyncLimit"`
+	AutopurgePurgeInterval   string `position:"Query" name:"AutopurgePurgeInterval"`
+	InitLimit                string `position:"Query" name:"InitLimit"`
+	UserName                 string `position:"Query" name:"UserName"`
+}
+
+// UpdateConfigResponse is the response struct for api UpdateConfig
+type UpdateConfigResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateUpdateConfigRequest creates a request to invoke UpdateConfig API
+func CreateUpdateConfigRequest() (request *UpdateConfigRequest) {
+	request = &UpdateConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateConfigResponse creates a response to parse from UpdateConfig response
+func CreateUpdateConfigResponse() (response *UpdateConfigResponse) {
+	response = &UpdateConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_engine_namespace.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_engine_namespace.go
new file mode 100644
index 000000000000..6a62327f173c
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_engine_namespace.go
@@ -0,0 +1,113 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateEngineNamespace invokes the mse.UpdateEngineNamespace API synchronously
+// api document: https://help.aliyun.com/api/mse/updateenginenamespace.html
+func (client *Client) UpdateEngineNamespace(request *UpdateEngineNamespaceRequest) (response *UpdateEngineNamespaceResponse, err error) {
+	response = CreateUpdateEngineNamespaceResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateEngineNamespaceWithChan invokes the mse.UpdateEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateEngineNamespaceWithChan(request *UpdateEngineNamespaceRequest) (<-chan *UpdateEngineNamespaceResponse, <-chan error) {
+	responseChan := make(chan *UpdateEngineNamespaceResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateEngineNamespace(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateEngineNamespaceWithCallback invokes the mse.UpdateEngineNamespace API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateenginenamespace.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateEngineNamespaceWithCallback(request *UpdateEngineNamespaceRequest, callback func(response *UpdateEngineNamespaceResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateEngineNamespaceResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateEngineNamespace(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateEngineNamespaceRequest is the request struct for api UpdateEngineNamespace
+type UpdateEngineNamespaceRequest struct {
+	*requests.RpcRequest
+	ClusterId    string           `position:"Query" name:"ClusterId"`
+	InstanceId   string           `position:"Query" name:"InstanceId"`
+	ServiceCount requests.Integer `position:"Query" name:"ServiceCount"`
+	Name         string           `position:"Query" name:"Name"`
+	Id           string           `position:"Query" name:"Id"`
+	Desc         string           `position:"Query" name:"Desc"`
+}
+
+// UpdateEngineNamespaceResponse is the response struct for api UpdateEngineNamespace
+type UpdateEngineNamespaceResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	Data      Data   `json:"Data" xml:"Data"`
+}
+
+// CreateUpdateEngineNamespaceRequest creates a request to invoke UpdateEngineNamespace API
+func CreateUpdateEngineNamespaceRequest() (request *UpdateEngineNamespaceRequest) {
+	request = &UpdateEngineNamespaceRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateEngineNamespace", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateEngineNamespaceResponse creates a response to parse from UpdateEngineNamespace response
+func CreateUpdateEngineNamespaceResponse() (response *UpdateEngineNamespaceResponse) {
+	response = &UpdateEngineNamespaceResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_nacos_config.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_nacos_config.go
new file mode 100644
index 000000000000..c823fec13e6d
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_nacos_config.go
@@ -0,0 +1,118 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateNacosConfig invokes the mse.UpdateNacosConfig API synchronously
+// api document: https://help.aliyun.com/api/mse/updatenacosconfig.html
+func (client *Client) UpdateNacosConfig(request *UpdateNacosConfigRequest) (response *UpdateNacosConfigResponse, err error) {
+	response = CreateUpdateNacosConfigResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateNacosConfigWithChan invokes the mse.UpdateNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/updatenacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateNacosConfigWithChan(request *UpdateNacosConfigRequest) (<-chan *UpdateNacosConfigResponse, <-chan error) {
+	responseChan := make(chan *UpdateNacosConfigResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateNacosConfig(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateNacosConfigWithCallback invokes the mse.UpdateNacosConfig API asynchronously
+// api document: https://help.aliyun.com/api/mse/updatenacosconfig.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateNacosConfigWithCallback(request *UpdateNacosConfigRequest, callback func(response *UpdateNacosConfigResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateNacosConfigResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateNacosConfig(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateNacosConfigRequest is the request struct for api UpdateNacosConfig
+type UpdateNacosConfigRequest struct {
+	*requests.RpcRequest
+	Type        string `position:"Query" name:"Type"`
+	Content     string `position:"Query" name:"Content"`
+	Tags        string `position:"Query" name:"Tags"`
+	BetaIps     string `position:"Query" name:"BetaIps"`
+	InstanceId  string `position:"Query" name:"InstanceId"`
+	DataId      string `position:"Query" name:"DataId"`
+	AppName     string `position:"Query" name:"AppName"`
+	NamespaceId string `position:"Query" name:"NamespaceId"`
+	Group       string `position:"Query" name:"Group"`
+	Desc        string `position:"Query" name:"Desc"`
+	Md5         string `position:"Query" name:"Md5"`
+}
+
+// UpdateNacosConfigResponse is the response struct for api UpdateNacosConfig
+type UpdateNacosConfigResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateUpdateNacosConfigRequest creates a request to invoke UpdateNacosConfig API
+func CreateUpdateNacosConfigRequest() (request *UpdateNacosConfigRequest) {
+	request = &UpdateNacosConfigRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateNacosConfig", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateNacosConfigResponse creates a response to parse from UpdateNacosConfig response
+func CreateUpdateNacosConfigResponse() (response *UpdateNacosConfigResponse) {
+	response = &UpdateNacosConfigResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_znode.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_znode.go
new file mode 100644
index 000000000000..e13a8f793fe1
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/update_znode.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpdateZnode invokes the mse.UpdateZnode API synchronously
+// api document: https://help.aliyun.com/api/mse/updateznode.html
+func (client *Client) UpdateZnode(request *UpdateZnodeRequest) (response *UpdateZnodeResponse, err error) {
+	response = CreateUpdateZnodeResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpdateZnodeWithChan invokes the mse.UpdateZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateZnodeWithChan(request *UpdateZnodeRequest) (<-chan *UpdateZnodeResponse, <-chan error) {
+	responseChan := make(chan *UpdateZnodeResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpdateZnode(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpdateZnodeWithCallback invokes the mse.UpdateZnode API asynchronously
+// api document: https://help.aliyun.com/api/mse/updateznode.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpdateZnodeWithCallback(request *UpdateZnodeRequest, callback func(response *UpdateZnodeResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpdateZnodeResponse
+		var err error
+		defer close(result)
+		response, err = client.UpdateZnode(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpdateZnodeRequest is the request struct for api UpdateZnode
+type UpdateZnodeRequest struct {
+	*requests.RpcRequest
+	Data        string `position:"Query" name:"Data"`
+	ClusterId   string `position:"Query" name:"ClusterId"`
+	Path        string `position:"Query" name:"Path"`
+	RequestPars string `position:"Query" name:"RequestPars"`
+}
+
+// UpdateZnodeResponse is the response struct for api UpdateZnode
+type UpdateZnodeResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+}
+
+// CreateUpdateZnodeRequest creates a request to invoke UpdateZnode API
+func CreateUpdateZnodeRequest() (request *UpdateZnodeRequest) {
+	request = &UpdateZnodeRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpdateZnode", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpdateZnodeResponse creates a response to parse from UpdateZnode response
+func CreateUpdateZnodeResponse() (response *UpdateZnodeResponse) {
+	response = &UpdateZnodeResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/upgrade_cluster.go b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/upgrade_cluster.go
new file mode 100644
index 000000000000..e2e4b54e4851
--- /dev/null
+++ b/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/mse/upgrade_cluster.go
@@ -0,0 +1,110 @@
+package mse
+
+//Licensed under the Apache License, Version 2.0 (the "License");
+//you may not use this file except in compliance with the License.
+//You may obtain a copy of the License at
+//
+//http://www.apache.org/licenses/LICENSE-2.0
+//
+//Unless required by applicable law or agreed to in writing, software
+//distributed under the License is distributed on an "AS IS" BASIS,
+//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//See the License for the specific language governing permissions and
+//limitations under the License.
+//
+// Code generated by Alibaba Cloud SDK Code Generator.
+// Changes may cause incorrect behavior and will be lost if the code is regenerated.
+
+import (
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
+	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
+)
+
+// UpgradeCluster invokes the mse.UpgradeCluster API synchronously
+// api document: https://help.aliyun.com/api/mse/upgradecluster.html
+func (client *Client) UpgradeCluster(request *UpgradeClusterRequest) (response *UpgradeClusterResponse, err error) {
+	response = CreateUpgradeClusterResponse()
+	err = client.DoAction(request, response)
+	return
+}
+
+// UpgradeClusterWithChan invokes the mse.UpgradeCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/upgradecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpgradeClusterWithChan(request *UpgradeClusterRequest) (<-chan *UpgradeClusterResponse, <-chan error) {
+	responseChan := make(chan *UpgradeClusterResponse, 1)
+	errChan := make(chan error, 1)
+	err := client.AddAsyncTask(func() {
+		defer close(responseChan)
+		defer close(errChan)
+		response, err := client.UpgradeCluster(request)
+		if err != nil {
+			errChan <- err
+		} else {
+			responseChan <- response
+		}
+	})
+	if err != nil {
+		errChan <- err
+		close(responseChan)
+		close(errChan)
+	}
+	return responseChan, errChan
+}
+
+// UpgradeClusterWithCallback invokes the mse.UpgradeCluster API asynchronously
+// api document: https://help.aliyun.com/api/mse/upgradecluster.html
+// asynchronous document: https://help.aliyun.com/document_detail/66220.html
+func (client *Client) UpgradeClusterWithCallback(request *UpgradeClusterRequest, callback func(response *UpgradeClusterResponse, err error)) <-chan int {
+	result := make(chan int, 1)
+	err := client.AddAsyncTask(func() {
+		var response *UpgradeClusterResponse
+		var err error
+		defer close(result)
+		response, err = client.UpgradeCluster(request)
+		callback(response, err)
+		result <- 1
+	})
+	if err != nil {
+		defer close(result)
+		callback(nil, err)
+		result <- 0
+	}
+	return result
+}
+
+// UpgradeClusterRequest is the request struct for api UpgradeCluster
+type UpgradeClusterRequest struct {
+	*requests.RpcRequest
+	UpgradeVersion string `position:"Query" name:"UpgradeVersion"`
+	InstanceId     string `position:"Query" name:"InstanceId"`
+	RequestPars    string `position:"Query" name:"RequestPars"`
+}
+
+// UpgradeClusterResponse is the response struct for api UpgradeCluster
+type UpgradeClusterResponse struct {
+	*responses.BaseResponse
+	Success   bool   `json:"Success" xml:"Success"`
+	Message   string `json:"Message" xml:"Message"`
+	ErrorCode string `json:"ErrorCode" xml:"ErrorCode"`
+	RequestId string `json:"RequestId" xml:"RequestId"`
+	HttpCode  string `json:"HttpCode" xml:"HttpCode"`
+}
+
+// CreateUpgradeClusterRequest creates a request to invoke UpgradeCluster API
+func CreateUpgradeClusterRequest() (request *UpgradeClusterRequest) {
+	request = &UpgradeClusterRequest{
+		RpcRequest: &requests.RpcRequest{},
+	}
+	request.InitWithApiInfo("mse", "2019-05-31", "UpgradeCluster", "mse", "openAPI")
+	request.Method = requests.POST
+	return
+}
+
+// CreateUpgradeClusterResponse creates a response to parse from UpgradeCluster response
+func CreateUpgradeClusterResponse() (response *UpgradeClusterResponse) {
+	response = &UpgradeClusterResponse{
+		BaseResponse: &responses.BaseResponse{},
+	}
+	return
+}
diff --git a/vendor/modules.txt b/vendor/modules.txt
index 0a98454f657c..c8f2e5cf9aa4 100644
--- a/vendor/modules.txt
+++ b/vendor/modules.txt
@@ -45,6 +45,7 @@ github.com/aliyun/alibaba-cloud-sdk-go/services/hbase
 github.com/aliyun/alibaba-cloud-sdk-go/services/kms
 github.com/aliyun/alibaba-cloud-sdk-go/services/market
 github.com/aliyun/alibaba-cloud-sdk-go/services/maxcompute
+github.com/aliyun/alibaba-cloud-sdk-go/services/mse
 github.com/aliyun/alibaba-cloud-sdk-go/services/nas
 github.com/aliyun/alibaba-cloud-sdk-go/services/ons
 github.com/aliyun/alibaba-cloud-sdk-go/services/oos
diff --git a/website/alicloud.erb b/website/alicloud.erb
index 9daa3c128c14..b684953735c7 100644
--- a/website/alicloud.erb
+++ b/website/alicloud.erb
@@ -1249,6 +1249,28 @@
                       </li>
                   </ul>
                 </li>
+                 <li>
+                   <a href="#">Microservice Engine (MSE)</a>
+                   <ul class="nav">
+                       <li>
+                         <a href="#">Data Sources</a>
+                         <ul class="nav nav-auto-expand">
+                             <li>
+                                 <a href="/docs/providers/alicloud/d/mse_clusters.html">alicloud_mse_clusters</a>
+                             </li>
+                         </ul>
+                       </li>
+                       <li>
+                         <a href="#">Resources</a>
+                         <ul class="nav nav-auto-expand">
+                             <li>
+                                 <a href="/docs/providers/alicloud/r/mse_cluster.html">alicloud_mse_cluster</a>
+                             </li>
+                         </ul>
+                       </li>
+                   </ul>
+                 </li>
+
                 <li<%= sidebar_current("docs-alicloud-resource-maxcompute") %>>
                     <a href="#">MaxCompute Resources</a>
                     <ul class="nav">
diff --git a/website/docs/d/mse_clusters.html.markdown b/website/docs/d/mse_clusters.html.markdown
new file mode 100644
index 000000000000..f97793256134
--- /dev/null
+++ b/website/docs/d/mse_clusters.html.markdown
@@ -0,0 +1,70 @@
+---
+subcategory: "Microservice Engine (MSE)"
+layout: "alicloud"
+page_title: "Alicloud: alicloud_mse_clusters"
+sidebar_current: "docs-alicloud-resource-mse-clusters"
+description: |-
+    Provides a collection of MSE Clusters to the specified filters.
+---
+
+# alicloud\_mse\_clusters
+
+This data source provides a list of MSE Clusters in an Alibaba Cloud account according to the specified filters.
+ 
+-> **NOTE:** Available in v1.94.0+.
+
+## Example Usage
+
+```
+# Declare the data source
+
+data "alicloud_mse_clusters" "example" {
+  ids = ["mse-cn-0d9xxxx"]
+  status = "INIT_SUCCESS"
+}
+
+output "cluster_id" {
+  value = "${data.alicloud_mse_clusters.example.clusters.0.id}"
+}
+```
+
+## Argument Reference
+
+The following arguments are supported:
+
+* `ids` - (Optional) A list of MSE Cluster ids.
+* `names` - (Optional)  A list of MSE Cluster names.
+* `name_regex` - (Optional) A regex string to filter the results by the cluster alias name.
+* `cluster_alias_name` - (Optional) The alias name of MSE Cluster.
+* `status` - (Optional) The status of MSE Cluster. Valid: `DESTROY_FAILED`, `DESTROY_ING`, `DESTROY_SUCCESS`, `INIT_FAILED`, `INIT_ING`, `INIT_SUCCESS`, `INIT_TIME_OUT`, `RESTART_FAILED`, `RESTART_ING`, `RESTART_SUCCESS`, `SCALE_FAILED`, `SCALE_ING`, `SCALE_SUCCESS`
+* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
+
+## Attributes Reference
+
+The following attributes are exported in addition to the arguments listed above:
+
+* `ids` -  A list of MSE Cluster ids.
+* `names` -  A list of MSE Cluster names.
+* `clusters` - A list of MSE Clusters. Each element contains the following attributes:
+  * `id` - ID of the MSE Cluster.
+  * `app_version` - The version of app.
+  * `cluster_id` - ID of the MSE Cluster.
+  * `cluster_name` - ID of the OOS Executions.
+  * `cluster_type` - The type of MSE Cluster.
+  * `instance_id` - ID of the MSE Cluster.
+  * `internet_address` - The address of public network.
+  * `internet_domain` - The domain of public network.
+  * `intranet_address` - The address of private network.
+  * `intranet_domain` - The domain of private network.
+  * `instance_models` - The list of instances.
+  * `status` - The status of MSE Cluster.
+  * `acl_id` - The id of acl.
+  * `cpu` - The num of cpu.
+  * `health_status` - The health status of MSE Cluster.
+  * `init_cost_time` - Time-consuming to create.
+  * `instance_count` - The count of instance.
+  * `internet_port` - The port of public network.
+  * `intranet_port` - The port of private network.
+  * `memory_capacity` - The memory size.
+  * `pay_info` - The type of payment.
+  * `pub_network_flow` - The public network bandwidth.
diff --git a/website/docs/r/mse_cluster.html.markdown b/website/docs/r/mse_cluster.html.markdown
new file mode 100644
index 000000000000..800527836f46
--- /dev/null
+++ b/website/docs/r/mse_cluster.html.markdown
@@ -0,0 +1,62 @@
+---
+subcategory: "Microservice Engine (MSE)"
+layout: "alicloud"
+page_title: "Alicloud: alicloud_mse_cluster"
+sidebar_current: "docs-alicloud-resource-mse-cluster"
+description: |-
+    Provides an Alicloud MSE Cluster resource.
+---
+
+# alicloud\_mse\_cluster
+
+Provides a MSE Cluster resource. It is a one-stop microservice platform for the industry's mainstream open source microservice frameworks Spring Cloud and Dubbo, providing governance center, managed registry and managed configuration center.
+
+-> **NOTE:** Available in 1.94.0+.
+
+## Example Usage
+
+```
+resource "alicloud_mse_cluster" "example" {
+  cluster_specification = "MSE_SC_1_2_200_c"
+  cluster_type = "Eureka"
+  cluster_version = "EUREKA_1_9_3"
+  instance_count = 1
+  net_type = "privatenet"
+  vswitch_id = "vsw-123456"
+  pub_network_flow = "1"
+  acl_entry_list= ["127.0.0.1/32"]
+  cluster_alias_name= "tf-testAccMseCluster"
+}
+```
+
+## Argument Reference
+
+The following arguments are supported:
+
+* `acl_entry_list` - (Optional) The whitelist.
+* `cluster_alias_name` - (Optional) The alias of MSE Cluster.
+* `cluster_specification` - (Required, ForceNew) The engine specification of MSE Cluster. Valid values: `MSE_SC_1_2_200_c`, `MSE_SC_2`, `MSE_SC_4_8_200_c_4_200_c`, `MSE_SC_8_16_200_c`.
+* `cluster_type` - (Required, ForceNew) The type of MSE Cluster.
+* `cluster_version` - (Required, ForceNew) The version of MSE Cluster.
+* `disk_type` - (Optional, ForceNew) The type of Disk.
+* `instance_count` - (Optional, ForceNew) The count of instance.
+* `net_type` - (Required, ForceNew) The type of network. Range limit: 1~5.
+* `private_slb_specification` - (Optional, ForceNew) The specification of private network SLB.
+* `pub_network_flow` - (Optional, ForceNew) The public network bandwidth. `0` means no access to the public network.
+* `pub_slb_specification` - (Optional, ForceNew) The specification of public network SLB.
+* `vswitch_id` - (Optional, ForceNew) The id of VSwitch.
+                    
+## Attributes Reference
+
+The following attributes are exported:
+
+* `id` - The id of MSE Cluster.
+* `status` - The status of MSE Cluster.
+
+## Import
+
+MSE Cluster can be imported using the id, e.g.
+
+```
+$ terraform import alicloud_mse_cluster.example mse-cn-0d9xxxx
+```
